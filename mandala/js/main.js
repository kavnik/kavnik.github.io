if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3196";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__6323__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__6322 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__6322) : cljs.core.into_array.call(null, G__6322);
      }());
    };
    var G__6323 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__6324__i = 0, G__6324__a = new Array(arguments.length - 0);
        while (G__6324__i < G__6324__a.length) {
          G__6324__a[G__6324__i] = arguments[G__6324__i + 0];
          ++G__6324__i;
        }
        args = new cljs.core.IndexedSeq(G__6324__a, 0);
      }
      return G__6323__delegate.call(this, args);
    };
    G__6323.cljs$lang$maxFixedArity = 0;
    G__6323.cljs$lang$applyTo = function(arglist__6325) {
      var args = cljs.core.seq(arglist__6325);
      return G__6323__delegate(args);
    };
    G__6323.cljs$core$IFn$_invoke$arity$variadic = G__6323__delegate;
    return G__6323;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__6327 = x;
  return goog.isString(G__6327);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__6329 = x__$1;
    return goog.typeOf(G__6329);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4278__auto__ = ty;
    if (cljs.core.truth_(and__4278__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4278__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__6331 = obj;
    return goog.typeOf(G__6331);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__6333 = Symbol;
  return goog.typeOf(G__6333);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function cljs$core$make_array() {
  var G__6335 = arguments.length;
  switch(G__6335) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5175__auto___6337 = len;
  var i_6338 = 0;
  while (true) {
    if (i_6338 < n__5175__auto___6337) {
      new_arr[i_6338] = arr[i_6338];
      var G__6339 = i_6338 + 1;
      i_6338 = G__6339;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__6340 = i + 1;
      i = G__6340;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var G__6345 = arguments.length;
  switch(G__6345) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__6346 = cljs.core.aget;
  var G__6347 = array[i];
  var G__6348 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__6346, G__6347, G__6348) : cljs.core.apply.call(null, G__6346, G__6347, G__6348);
};
cljs.core.aget.cljs$lang$applyTo = function(seq6341) {
  var G__6342 = cljs.core.first(seq6341);
  var seq6341__$1 = cljs.core.next(seq6341);
  var G__6343 = cljs.core.first(seq6341__$1);
  var seq6341__$2 = cljs.core.next(seq6341__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__6342, G__6343, seq6341__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var G__6355 = arguments.length;
  switch(G__6355) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__6356 = cljs.core.aset;
  var G__6357 = array[idx];
  var G__6358 = idx2;
  var G__6359 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__6356, G__6357, G__6358, G__6359) : cljs.core.apply.call(null, G__6356, G__6357, G__6358, G__6359);
};
cljs.core.aset.cljs$lang$applyTo = function(seq6350) {
  var G__6351 = cljs.core.first(seq6350);
  var seq6350__$1 = cljs.core.next(seq6350);
  var G__6352 = cljs.core.first(seq6350__$1);
  var seq6350__$2 = cljs.core.next(seq6350__$1);
  var G__6353 = cljs.core.first(seq6350__$2);
  var seq6350__$3 = cljs.core.next(seq6350__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__6351, G__6352, G__6353, seq6350__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var G__6362 = arguments.length;
  switch(G__6362) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__6363 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__6364 = [];
  var G__6365 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__6363, G__6364, G__6365) : cljs.core.reduce.call(null, G__6363, G__6364, G__6365);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var argseq__5330__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5330__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq6367) {
  var G__6368 = cljs.core.first(seq6367);
  var seq6367__$1 = cljs.core.next(seq6367);
  var G__6369 = cljs.core.first(seq6367__$1);
  var seq6367__$2 = cljs.core.next(seq6367__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__6368, G__6369, seq6367__$2);
};
cljs.core.Fn = function() {
  var obj6371 = {};
  return obj6371;
}();
cljs.core.IFn = function() {
  var obj6373 = {};
  return obj6373;
}();
cljs.core._invoke = function cljs$core$_invoke() {
  var G__6375 = arguments.length;
  switch(G__6375) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6377 = x__4926__auto__;
        return goog.typeOf(G__6377);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6379 = x__4926__auto__;
        return goog.typeOf(G__6379);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6381 = x__4926__auto__;
        return goog.typeOf(G__6381);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$4;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6383 = x__4926__auto__;
        return goog.typeOf(G__6383);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$5;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6385 = x__4926__auto__;
        return goog.typeOf(G__6385);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$6;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6387 = x__4926__auto__;
        return goog.typeOf(G__6387);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$7;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6389 = x__4926__auto__;
        return goog.typeOf(G__6389);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$8;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6391 = x__4926__auto__;
        return goog.typeOf(G__6391);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$9;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6393 = x__4926__auto__;
        return goog.typeOf(G__6393);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$10;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6395 = x__4926__auto__;
        return goog.typeOf(G__6395);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$11;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6397 = x__4926__auto__;
        return goog.typeOf(G__6397);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$12;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6399 = x__4926__auto__;
        return goog.typeOf(G__6399);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$13;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6401 = x__4926__auto__;
        return goog.typeOf(G__6401);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$14;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6403 = x__4926__auto__;
        return goog.typeOf(G__6403);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$15;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6405 = x__4926__auto__;
        return goog.typeOf(G__6405);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$16;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6407 = x__4926__auto__;
        return goog.typeOf(G__6407);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$17;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6409 = x__4926__auto__;
        return goog.typeOf(G__6409);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$18;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6411 = x__4926__auto__;
        return goog.typeOf(G__6411);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$19;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6413 = x__4926__auto__;
        return goog.typeOf(G__6413);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$20;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6415 = x__4926__auto__;
        return goog.typeOf(G__6415);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$21;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6417 = x__4926__auto__;
        return goog.typeOf(G__6417);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$22;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._invoke[function() {
        var G__6419 = x__4926__auto__;
        return goog.typeOf(G__6419);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._invoke["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
  var obj6422 = {};
  return obj6422;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4278__auto__ = value;
    if (and__4278__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4926__auto__ = value == null ? null : value;
    return function() {
      var or__4290__auto__ = cljs.core._clone[function() {
        var G__6426 = x__4926__auto__;
        return goog.typeOf(G__6426);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._clone["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj6428 = {};
  return obj6428;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._count[function() {
        var G__6432 = x__4926__auto__;
        return goog.typeOf(G__6432);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._count["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj6434 = {};
  return obj6434;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._empty[function() {
        var G__6438 = x__4926__auto__;
        return goog.typeOf(G__6438);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._empty["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj6440 = {};
  return obj6440;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._conj[function() {
        var G__6444 = x__4926__auto__;
        return goog.typeOf(G__6444);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._conj["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj6446 = {};
  return obj6446;
}();
cljs.core._nth = function cljs$core$_nth() {
  var G__6448 = arguments.length;
  switch(G__6448) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._nth[function() {
        var G__6450 = x__4926__auto__;
        return goog.typeOf(G__6450);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._nth["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._nth[function() {
        var G__6452 = x__4926__auto__;
        return goog.typeOf(G__6452);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._nth["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
  var obj6455 = {};
  return obj6455;
}();
cljs.core.ISeq = function() {
  var obj6457 = {};
  return obj6457;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._first[function() {
        var G__6461 = x__4926__auto__;
        return goog.typeOf(G__6461);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._first["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._rest[function() {
        var G__6465 = x__4926__auto__;
        return goog.typeOf(G__6465);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._rest["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj6467 = {};
  return obj6467;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._next[function() {
        var G__6471 = x__4926__auto__;
        return goog.typeOf(G__6471);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._next["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj6473 = {};
  return obj6473;
}();
cljs.core._lookup = function cljs$core$_lookup() {
  var G__6475 = arguments.length;
  switch(G__6475) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._lookup[function() {
        var G__6477 = x__4926__auto__;
        return goog.typeOf(G__6477);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._lookup["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._lookup[function() {
        var G__6479 = x__4926__auto__;
        return goog.typeOf(G__6479);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._lookup["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
  var obj6482 = {};
  return obj6482;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__6486 = x__4926__auto__;
        return goog.typeOf(G__6486);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._assoc[function() {
        var G__6490 = x__4926__auto__;
        return goog.typeOf(G__6490);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._assoc["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj6492 = {};
  return obj6492;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._dissoc[function() {
        var G__6496 = x__4926__auto__;
        return goog.typeOf(G__6496);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._dissoc["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj6498 = {};
  return obj6498;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._key[function() {
        var G__6502 = x__4926__auto__;
        return goog.typeOf(G__6502);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._key["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._val[function() {
        var G__6506 = x__4926__auto__;
        return goog.typeOf(G__6506);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._val["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj6508 = {};
  return obj6508;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._disjoin[function() {
        var G__6512 = x__4926__auto__;
        return goog.typeOf(G__6512);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._disjoin["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj6514 = {};
  return obj6514;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._peek[function() {
        var G__6518 = x__4926__auto__;
        return goog.typeOf(G__6518);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._peek["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._pop[function() {
        var G__6522 = x__4926__auto__;
        return goog.typeOf(G__6522);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._pop["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj6524 = {};
  return obj6524;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._assoc_n[function() {
        var G__6528 = x__4926__auto__;
        return goog.typeOf(G__6528);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj6530 = {};
  return obj6530;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._deref[function() {
        var G__6534 = x__4926__auto__;
        return goog.typeOf(G__6534);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._deref["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj6536 = {};
  return obj6536;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._deref_with_timeout[function() {
        var G__6540 = x__4926__auto__;
        return goog.typeOf(G__6540);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj6542 = {};
  return obj6542;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._meta[function() {
        var G__6546 = x__4926__auto__;
        return goog.typeOf(G__6546);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._meta["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj6548 = {};
  return obj6548;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._with_meta[function() {
        var G__6552 = x__4926__auto__;
        return goog.typeOf(G__6552);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._with_meta["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj6554 = {};
  return obj6554;
}();
cljs.core._reduce = function cljs$core$_reduce() {
  var G__6556 = arguments.length;
  switch(G__6556) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._reduce[function() {
        var G__6558 = x__4926__auto__;
        return goog.typeOf(G__6558);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._reduce["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._reduce[function() {
        var G__6560 = x__4926__auto__;
        return goog.typeOf(G__6560);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._reduce["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
  var obj6563 = {};
  return obj6563;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._kv_reduce[function() {
        var G__6567 = x__4926__auto__;
        return goog.typeOf(G__6567);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj6569 = {};
  return obj6569;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._equiv[function() {
        var G__6573 = x__4926__auto__;
        return goog.typeOf(G__6573);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._equiv["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj6575 = {};
  return obj6575;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._hash[function() {
        var G__6579 = x__4926__auto__;
        return goog.typeOf(G__6579);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._hash["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj6581 = {};
  return obj6581;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._seq[function() {
        var G__6585 = x__4926__auto__;
        return goog.typeOf(G__6585);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._seq["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj6587 = {};
  return obj6587;
}();
cljs.core.IList = function() {
  var obj6589 = {};
  return obj6589;
}();
cljs.core.IRecord = function() {
  var obj6591 = {};
  return obj6591;
}();
cljs.core.IReversible = function() {
  var obj6593 = {};
  return obj6593;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._rseq[function() {
        var G__6597 = x__4926__auto__;
        return goog.typeOf(G__6597);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._rseq["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj6599 = {};
  return obj6599;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._sorted_seq[function() {
        var G__6603 = x__4926__auto__;
        return goog.typeOf(G__6603);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._sorted_seq_from[function() {
        var G__6607 = x__4926__auto__;
        return goog.typeOf(G__6607);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._entry_key[function() {
        var G__6611 = x__4926__auto__;
        return goog.typeOf(G__6611);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._entry_key["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._comparator[function() {
        var G__6615 = x__4926__auto__;
        return goog.typeOf(G__6615);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._comparator["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj6617 = {};
  return obj6617;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4278__auto__ = writer;
    if (and__4278__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4926__auto__ = writer == null ? null : writer;
    return function() {
      var or__4290__auto__ = cljs.core._write[function() {
        var G__6621 = x__4926__auto__;
        return goog.typeOf(G__6621);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._write["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4278__auto__ = writer;
    if (and__4278__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4926__auto__ = writer == null ? null : writer;
    return function() {
      var or__4290__auto__ = cljs.core._flush[function() {
        var G__6625 = x__4926__auto__;
        return goog.typeOf(G__6625);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._flush["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj6627 = {};
  return obj6627;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._pr_writer[function() {
        var G__6631 = x__4926__auto__;
        return goog.typeOf(G__6631);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj6633 = {};
  return obj6633;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4278__auto__ = d;
    if (and__4278__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4926__auto__ = d == null ? null : d;
    return function() {
      var or__4290__auto__ = cljs.core._realized_QMARK_[function() {
        var G__6637 = x__4926__auto__;
        return goog.typeOf(G__6637);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj6639 = {};
  return obj6639;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._notify_watches[function() {
        var G__6643 = x__4926__auto__;
        return goog.typeOf(G__6643);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._add_watch[function() {
        var G__6647 = x__4926__auto__;
        return goog.typeOf(G__6647);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._add_watch["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4278__auto__ = this$;
    if (and__4278__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4926__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4290__auto__ = cljs.core._remove_watch[function() {
        var G__6651 = x__4926__auto__;
        return goog.typeOf(G__6651);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj6653 = {};
  return obj6653;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._as_transient[function() {
        var G__6657 = x__4926__auto__;
        return goog.typeOf(G__6657);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._as_transient["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj6659 = {};
  return obj6659;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4278__auto__ = tcoll;
    if (and__4278__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4926__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4290__auto__ = cljs.core._conj_BANG_[function() {
        var G__6663 = x__4926__auto__;
        return goog.typeOf(G__6663);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4278__auto__ = tcoll;
    if (and__4278__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4926__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4290__auto__ = cljs.core._persistent_BANG_[function() {
        var G__6667 = x__4926__auto__;
        return goog.typeOf(G__6667);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj6669 = {};
  return obj6669;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4278__auto__ = tcoll;
    if (and__4278__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4926__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4290__auto__ = cljs.core._assoc_BANG_[function() {
        var G__6673 = x__4926__auto__;
        return goog.typeOf(G__6673);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj6675 = {};
  return obj6675;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4278__auto__ = tcoll;
    if (and__4278__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4926__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4290__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__6679 = x__4926__auto__;
        return goog.typeOf(G__6679);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj6681 = {};
  return obj6681;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4278__auto__ = tcoll;
    if (and__4278__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4926__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4290__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__6685 = x__4926__auto__;
        return goog.typeOf(G__6685);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4278__auto__ = tcoll;
    if (and__4278__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4926__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4290__auto__ = cljs.core._pop_BANG_[function() {
        var G__6689 = x__4926__auto__;
        return goog.typeOf(G__6689);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj6691 = {};
  return obj6691;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4278__auto__ = tcoll;
    if (and__4278__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4926__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4290__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__6695 = x__4926__auto__;
        return goog.typeOf(G__6695);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj6697 = {};
  return obj6697;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4278__auto__ = x;
    if (and__4278__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4926__auto__ = x == null ? null : x;
    return function() {
      var or__4290__auto__ = cljs.core._compare[function() {
        var G__6701 = x__4926__auto__;
        return goog.typeOf(G__6701);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._compare["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj6703 = {};
  return obj6703;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._drop_first[function() {
        var G__6707 = x__4926__auto__;
        return goog.typeOf(G__6707);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._drop_first["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj6709 = {};
  return obj6709;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._chunked_first[function() {
        var G__6713 = x__4926__auto__;
        return goog.typeOf(G__6713);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._chunked_rest[function() {
        var G__6717 = x__4926__auto__;
        return goog.typeOf(G__6717);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj6719 = {};
  return obj6719;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._chunked_next[function() {
        var G__6723 = x__4926__auto__;
        return goog.typeOf(G__6723);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj6725 = {};
  return obj6725;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4278__auto__ = x;
    if (and__4278__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4926__auto__ = x == null ? null : x;
    return function() {
      var or__4290__auto__ = cljs.core._name[function() {
        var G__6729 = x__4926__auto__;
        return goog.typeOf(G__6729);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._name["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4278__auto__ = x;
    if (and__4278__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4926__auto__ = x == null ? null : x;
    return function() {
      var or__4290__auto__ = cljs.core._namespace[function() {
        var G__6733 = x__4926__auto__;
        return goog.typeOf(G__6733);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._namespace["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj6735 = {};
  return obj6735;
}();
cljs.core.IReset = function() {
  var obj6737 = {};
  return obj6737;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._reset_BANG_[function() {
        var G__6741 = x__4926__auto__;
        return goog.typeOf(G__6741);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj6743 = {};
  return obj6743;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var G__6745 = arguments.length;
  switch(G__6745) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._swap_BANG_[function() {
        var G__6747 = x__4926__auto__;
        return goog.typeOf(G__6747);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._swap_BANG_[function() {
        var G__6749 = x__4926__auto__;
        return goog.typeOf(G__6749);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._swap_BANG_[function() {
        var G__6751 = x__4926__auto__;
        return goog.typeOf(G__6751);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._swap_BANG_[function() {
        var G__6753 = x__4926__auto__;
        return goog.typeOf(G__6753);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
  var obj6756 = {};
  return obj6756;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4278__auto__ = o;
    if (and__4278__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4926__auto__ = o == null ? null : o;
    return function() {
      var or__4290__auto__ = cljs.core._vreset_BANG_[function() {
        var G__6760 = x__4926__auto__;
        return goog.typeOf(G__6760);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj6762 = {};
  return obj6762;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4278__auto__ = coll;
    if (and__4278__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4926__auto__ = coll == null ? null : coll;
    return function() {
      var or__4290__auto__ = cljs.core._iterator[function() {
        var G__6766 = x__4926__auto__;
        return goog.typeOf(G__6766);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._iterator["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__6769 = 4294967295;
  var G__6770 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6769, G__6770) : Math.imul.call(null, G__6769, G__6770);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__6773 = a;
    var G__6774 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__6773, G__6774) : Math.imul.call(null, G__6773, G__6774);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__6775 = i + 2;
        var G__6776 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__6775;
        h1 = G__6776;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj6778 = {};
  return obj6778;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__6779 = i + 1;
          var G__6780 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__6779;
          hash = G__6780;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj6784 = {};
      return obj6784;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__6787 = o;
    if (G__6787) {
      var bit__4957__auto__ = G__6787.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4957__auto__ || G__6787.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__6788 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__6788) : Math.floor.call(null, G__6788);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4278__auto__ = cljs.core.not(a.ns);
      if (and__4278__auto__) {
        return b.ns;
      } else {
        return and__4278__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__6795 = a.ns;
            var G__6796 = b.ns;
            return goog.array.defaultCompare(G__6795, G__6796);
          }();
          if (0 === nsc) {
            var G__6797 = a.name;
            var G__6798 = b.name;
            return goog.array.defaultCompare(G__6797, G__6798);
          } else {
            return nsc;
          }
        }
      } else {
        var G__6799 = a.name;
        var G__6800 = b.name;
        return goog.array.defaultCompare(G__6799, G__6800);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4706__auto__ = self__._hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__6802 = null;
  var G__6802__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__6802__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__6802 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__6802__2.call(this, self__, coll);
      case 3:
        return G__6802__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6802.cljs$core$IFn$_invoke$arity$2 = G__6802__2;
  G__6802.cljs$core$IFn$_invoke$arity$3 = G__6802__3;
  return G__6802;
}();
cljs.core.Symbol.prototype.apply = function(self__, args6801) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6801)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var G__6804 = arguments.length;
  switch(G__6804) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__6851 = null;
  var G__6851__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__6851__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__6851__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__6851__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__6851__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__6851__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__6851__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__6851__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__6851__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__6851__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__6851__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__6851__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__6851__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__6851__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__6851__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__6851__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__6851__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__6851__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__6851__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__6851__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__6851__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__6851__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__6807 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__6808 = a;
    var G__6809 = b;
    var G__6810 = c;
    var G__6811 = d;
    var G__6812 = e;
    var G__6813 = f;
    var G__6814 = g;
    var G__6815 = h;
    var G__6816 = i;
    var G__6817 = j;
    var G__6818 = k;
    var G__6819 = l;
    var G__6820 = m;
    var G__6821 = n;
    var G__6822 = o;
    var G__6823 = p;
    var G__6824 = q;
    var G__6825 = r;
    var G__6826 = s;
    var G__6827 = t;
    var G__6828 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6807, G__6808, G__6809, G__6810, G__6811, G__6812, G__6813, G__6814, G__6815, G__6816, G__6817, G__6818, G__6819, G__6820, G__6821, G__6822, G__6823, G__6824, G__6825, G__6826, G__6827, G__6828) : cljs.core.apply.call(null, G__6807, G__6808, G__6809, G__6810, G__6811, G__6812, G__6813, G__6814, G__6815, G__6816, G__6817, G__6818, G__6819, G__6820, G__6821, G__6822, G__6823, G__6824, G__6825, 
    G__6826, G__6827, G__6828);
  };
  G__6851 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__6851__1.call(this, self__);
      case 2:
        return G__6851__2.call(this, self__, a);
      case 3:
        return G__6851__3.call(this, self__, a, b);
      case 4:
        return G__6851__4.call(this, self__, a, b, c);
      case 5:
        return G__6851__5.call(this, self__, a, b, c, d);
      case 6:
        return G__6851__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__6851__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__6851__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__6851__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__6851__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__6851__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__6851__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__6851__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__6851__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__6851__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__6851__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__6851__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__6851__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__6851__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__6851__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__6851__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__6851__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__6851.cljs$core$IFn$_invoke$arity$1 = G__6851__1;
  G__6851.cljs$core$IFn$_invoke$arity$2 = G__6851__2;
  G__6851.cljs$core$IFn$_invoke$arity$3 = G__6851__3;
  G__6851.cljs$core$IFn$_invoke$arity$4 = G__6851__4;
  G__6851.cljs$core$IFn$_invoke$arity$5 = G__6851__5;
  G__6851.cljs$core$IFn$_invoke$arity$6 = G__6851__6;
  G__6851.cljs$core$IFn$_invoke$arity$7 = G__6851__7;
  G__6851.cljs$core$IFn$_invoke$arity$8 = G__6851__8;
  G__6851.cljs$core$IFn$_invoke$arity$9 = G__6851__9;
  G__6851.cljs$core$IFn$_invoke$arity$10 = G__6851__10;
  G__6851.cljs$core$IFn$_invoke$arity$11 = G__6851__11;
  G__6851.cljs$core$IFn$_invoke$arity$12 = G__6851__12;
  G__6851.cljs$core$IFn$_invoke$arity$13 = G__6851__13;
  G__6851.cljs$core$IFn$_invoke$arity$14 = G__6851__14;
  G__6851.cljs$core$IFn$_invoke$arity$15 = G__6851__15;
  G__6851.cljs$core$IFn$_invoke$arity$16 = G__6851__16;
  G__6851.cljs$core$IFn$_invoke$arity$17 = G__6851__17;
  G__6851.cljs$core$IFn$_invoke$arity$18 = G__6851__18;
  G__6851.cljs$core$IFn$_invoke$arity$19 = G__6851__19;
  G__6851.cljs$core$IFn$_invoke$arity$20 = G__6851__20;
  G__6851.cljs$core$IFn$_invoke$arity$21 = G__6851__21;
  G__6851.cljs$core$IFn$_invoke$arity$22 = G__6851__22;
  return G__6851;
}();
cljs.core.Var.prototype.apply = function(self__, args6806) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args6806)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__6829 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__6830 = a;
  var G__6831 = b;
  var G__6832 = c;
  var G__6833 = d;
  var G__6834 = e;
  var G__6835 = f;
  var G__6836 = g;
  var G__6837 = h;
  var G__6838 = i;
  var G__6839 = j;
  var G__6840 = k;
  var G__6841 = l;
  var G__6842 = m;
  var G__6843 = n;
  var G__6844 = o;
  var G__6845 = p;
  var G__6846 = q;
  var G__6847 = r;
  var G__6848 = s;
  var G__6849 = t;
  var G__6850 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__6829, G__6830, G__6831, G__6832, G__6833, G__6834, G__6835, G__6836, G__6837, G__6838, G__6839, G__6840, G__6841, G__6842, G__6843, G__6844, G__6845, G__6846, G__6847, G__6848, G__6849, G__6850) : cljs.core.apply.call(null, G__6829, G__6830, G__6831, G__6832, G__6833, G__6834, G__6835, G__6836, G__6837, G__6838, G__6839, G__6840, G__6841, G__6842, G__6843, G__6844, G__6845, G__6846, G__6847, 
  G__6848, G__6849, G__6850);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__6853 = x;
  if (G__6853) {
    var bit__4964__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4290__auto__ = bit__4964__auto__;
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        return G__6853.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__6853.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__6853);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__6853);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__6855 = value;
  if (G__6855) {
    var bit__4964__auto__ = G__6855.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4964__auto__ || G__6855.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__6855.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__6855);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__6855);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6857 = coll;
      if (G__6857) {
        var bit__4957__auto__ = G__6857.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4957__auto__ || G__6857.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6859 = coll;
      if (G__6859) {
        var bit__4957__auto__ = G__6859.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4957__auto__ || G__6859.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6861 = coll;
      if (G__6861) {
        var bit__4957__auto__ = G__6861.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4957__auto__ || G__6861.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__6863 = coll;
      if (G__6863) {
        var bit__4957__auto__ = G__6863.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4957__auto__ || G__6863.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var G__6868 = arguments.length;
  switch(G__6868) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__6870 = y;
        var G__6871 = cljs.core.first(more);
        var G__6872 = cljs.core.next(more);
        x = G__6870;
        y = G__6871;
        more = G__6872;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq6864) {
  var G__6865 = cljs.core.first(seq6864);
  var seq6864__$1 = cljs.core.next(seq6864);
  var G__6866 = cljs.core.first(seq6864__$1);
  var seq6864__$2 = cljs.core.next(seq6864__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__6865, G__6866, seq6864__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__6873 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__6873) : cljs.core.es6_iterator_seq.call(null, G__6873);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6874 = n + 1;
      var G__6875 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6876 = cljs.core.next(coll__$1);
      n = G__6874;
      hash_code = G__6875;
      coll__$1 = G__6876;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__6877 = n + 1;
      var G__6878 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__6879 = cljs.core.next(coll__$1);
      n = G__6877;
      hash_code = G__6878;
      coll__$1 = G__6879;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  var G__6880 = this$__$1.valueOf();
  var G__6881 = other.valueOf();
  return goog.array.defaultCompare(G__6880, G__6881);
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__6882 = o;
  return goog.getUid(G__6882);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__6884 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__6884) : cljs.core.deref.call(null, G__6884);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var G__6886 = arguments.length;
  switch(G__6886) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6887 = val;
          var G__6888 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6887, G__6888) : f.call(null, G__6887, G__6888);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6894 = nval;
          var G__6895 = n + 1;
          val = G__6894;
          n = G__6895;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6889 = val__$1;
        var G__6890 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6889, G__6890) : f.call(null, G__6889, G__6890);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6896 = nval;
        var G__6897 = n + 1;
        val__$1 = G__6896;
        n = G__6897;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6891 = val__$1;
        var G__6892 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6891, G__6892) : f.call(null, G__6891, G__6892);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6898 = nval;
        var G__6899 = n + 1;
        val__$1 = G__6898;
        n = G__6899;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var G__6901 = arguments.length;
  switch(G__6901) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__6902 = val;
          var G__6903 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6902, G__6903) : f.call(null, G__6902, G__6903);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__6909 = nval;
          var G__6910 = n + 1;
          val = G__6909;
          n = G__6910;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6904 = val__$1;
        var G__6905 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6904, G__6905) : f.call(null, G__6904, G__6905);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6911 = nval;
        var G__6912 = n + 1;
        val__$1 = G__6911;
        n = G__6912;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__6906 = val__$1;
        var G__6907 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__6906, G__6907) : f.call(null, G__6906, G__6907);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__6913 = nval;
        var G__6914 = n + 1;
        val__$1 = G__6913;
        n = G__6914;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__6916 = x;
  if (G__6916) {
    var bit__4964__auto__ = G__6916.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4964__auto__ || G__6916.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__6916.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__6916);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__6916);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__6918 = x;
  if (G__6918) {
    var bit__4964__auto__ = G__6918.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4964__auto__ || G__6918.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__6918.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__6918);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__6918);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__6919 = coll__$1;
  var G__6920 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6919, G__6920) : cljs.core.equiv_sequential.call(null, G__6919, G__6920);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__6921 = o;
  var G__6922 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6921, G__6922) : cljs.core.cons.call(null, G__6921, G__6922);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var G__6924 = arguments.length;
  switch(G__6924) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var G__6927 = arguments.length;
  switch(G__6927) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__6929 = coll__$1;
  var G__6930 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__6929, G__6930) : cljs.core.equiv_sequential.call(null, G__6929, G__6930);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__6931 = cljs.core.List.EMPTY;
  var G__6932 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__6931, G__6932) : cljs.core.with_meta.call(null, G__6931, G__6932);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__6933 = f;
  var G__6934 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__6933, G__6934) : cljs.core.seq_reduce.call(null, G__6933, G__6934);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__6935 = f;
  var G__6936 = start;
  var G__6937 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__6935, G__6936, G__6937) : cljs.core.seq_reduce.call(null, G__6935, G__6936, G__6937);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__6938 = o;
  var G__6939 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__6938, G__6939) : cljs.core.cons.call(null, G__6938, G__6939);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__6940 = sn;
      s = G__6940;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var G__6945 = arguments.length;
  switch(G__6945) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__6947 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__6948 = cljs.core.first(xs);
      var G__6949 = cljs.core.next(xs);
      coll = G__6947;
      x = G__6948;
      xs = G__6949;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq6941) {
  var G__6942 = cljs.core.first(seq6941);
  var seq6941__$1 = cljs.core.next(seq6941);
  var G__6943 = cljs.core.first(seq6941__$1);
  var seq6941__$2 = cljs.core.next(seq6941__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__6942, G__6943, seq6941__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__6950 = cljs.core.next(s);
      var G__6951 = acc + 1;
      s = G__6950;
      acc = G__6951;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__6953 = coll;
      if (G__6953) {
        var bit__4957__auto__ = G__6953.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4957__auto__ || G__6953.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var G__6955 = arguments.length;
  switch(G__6955) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6957 = cljs.core.next(coll);
            var G__6958 = n - 1;
            coll = G__6957;
            n = G__6958;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__6959 = cljs.core.next(coll);
            var G__6960 = n - 1;
            var G__6961 = not_found;
            coll = G__6959;
            n = G__6960;
            not_found = G__6961;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var G__6963 = arguments.length;
  switch(G__6963) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (function() {
        var G__6964 = coll;
        if (G__6964) {
          var bit__4957__auto__ = G__6964.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4957__auto__ || G__6964.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__6965 = coll;
                if (G__6965) {
                  var bit__4964__auto__ = G__6965.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4964__auto__ || G__6965.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__6965.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6965);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6965);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (function() {
        var G__6966 = coll;
        if (G__6966) {
          var bit__4957__auto__ = G__6966.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4957__auto__ || G__6966.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__6967 = coll;
                if (G__6967) {
                  var bit__4964__auto__ = G__6967.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4964__auto__ || G__6967.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__6967.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6967);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__6967);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__6969 = n__$1 - 1;
      var G__6970 = cljs.core.rest(xs);
      n__$1 = G__6969;
      xs = G__6970;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var G__6972 = arguments.length;
  switch(G__6972) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (function() {
      var G__6973 = o;
      if (G__6973) {
        var bit__4957__auto__ = G__6973.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4957__auto__ || G__6973.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (function() {
      var G__6974 = o;
      if (G__6974) {
        var bit__4957__auto__ = G__6974.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4957__auto__ || G__6974.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var G__6981 = arguments.length;
  switch(G__6981) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__6983 = ret;
      var G__6984 = cljs.core.first(kvs);
      var G__6985 = cljs.core.second(kvs);
      var G__6986 = cljs.core.nnext(kvs);
      coll = G__6983;
      k = G__6984;
      v = G__6985;
      kvs = G__6986;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq6976) {
  var G__6977 = cljs.core.first(seq6976);
  var seq6976__$1 = cljs.core.next(seq6976);
  var G__6978 = cljs.core.first(seq6976__$1);
  var seq6976__$2 = cljs.core.next(seq6976__$1);
  var G__6979 = cljs.core.first(seq6976__$2);
  var seq6976__$3 = cljs.core.next(seq6976__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__6977, G__6978, G__6979, seq6976__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var G__6991 = arguments.length;
  switch(G__6991) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__6993 = ret;
        var G__6994 = cljs.core.first(ks);
        var G__6995 = cljs.core.next(ks);
        coll = G__6993;
        k = G__6994;
        ks = G__6995;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq6987) {
  var G__6988 = cljs.core.first(seq6987);
  var seq6987__$1 = cljs.core.next(seq6987);
  var G__6989 = cljs.core.first(seq6987__$1);
  var seq6987__$2 = cljs.core.next(seq6987__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__6988, G__6989, seq6987__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4290__auto__ = function() {
    var G__7000 = f;
    return goog.isFunction(G__7000);
  }();
  if (cljs.core.truth_(or__4290__auto__)) {
    return or__4290__auto__;
  } else {
    var G__7001 = f;
    if (G__7001) {
      var bit__4964__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4290__auto____$1 = bit__4964__auto__;
        if (cljs.core.truth_(or__4290__auto____$1)) {
          return or__4290__auto____$1;
        } else {
          return G__7001.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__7001.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__7001);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__7001);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__7467 = null;
  var G__7467__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__7467__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7003 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7003) : self__.afn.call(null, G__7003);
  };
  var G__7467__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7004 = a;
    var G__7005 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7004, G__7005) : self__.afn.call(null, G__7004, G__7005);
  };
  var G__7467__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7006 = a;
    var G__7007 = b;
    var G__7008 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7006, G__7007, G__7008) : self__.afn.call(null, G__7006, G__7007, G__7008);
  };
  var G__7467__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7009 = a;
    var G__7010 = b;
    var G__7011 = c;
    var G__7012 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7009, G__7010, G__7011, G__7012) : self__.afn.call(null, G__7009, G__7010, G__7011, G__7012);
  };
  var G__7467__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7013 = a;
    var G__7014 = b;
    var G__7015 = c;
    var G__7016 = d;
    var G__7017 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7013, G__7014, G__7015, G__7016, G__7017) : self__.afn.call(null, G__7013, G__7014, G__7015, G__7016, G__7017);
  };
  var G__7467__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7018 = a;
    var G__7019 = b;
    var G__7020 = c;
    var G__7021 = d;
    var G__7022 = e;
    var G__7023 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7018, G__7019, G__7020, G__7021, G__7022, G__7023) : self__.afn.call(null, G__7018, G__7019, G__7020, G__7021, G__7022, G__7023);
  };
  var G__7467__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7024 = a;
    var G__7025 = b;
    var G__7026 = c;
    var G__7027 = d;
    var G__7028 = e;
    var G__7029 = f;
    var G__7030 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7024, G__7025, G__7026, G__7027, G__7028, G__7029, G__7030) : self__.afn.call(null, G__7024, G__7025, G__7026, G__7027, G__7028, G__7029, G__7030);
  };
  var G__7467__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7031 = a;
    var G__7032 = b;
    var G__7033 = c;
    var G__7034 = d;
    var G__7035 = e;
    var G__7036 = f;
    var G__7037 = g;
    var G__7038 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7031, G__7032, G__7033, G__7034, G__7035, G__7036, G__7037, G__7038) : self__.afn.call(null, G__7031, G__7032, G__7033, G__7034, G__7035, G__7036, G__7037, G__7038);
  };
  var G__7467__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7039 = a;
    var G__7040 = b;
    var G__7041 = c;
    var G__7042 = d;
    var G__7043 = e;
    var G__7044 = f;
    var G__7045 = g;
    var G__7046 = h;
    var G__7047 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7039, G__7040, G__7041, G__7042, G__7043, G__7044, G__7045, G__7046, G__7047) : self__.afn.call(null, G__7039, G__7040, G__7041, G__7042, G__7043, G__7044, G__7045, G__7046, G__7047);
  };
  var G__7467__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7048 = a;
    var G__7049 = b;
    var G__7050 = c;
    var G__7051 = d;
    var G__7052 = e;
    var G__7053 = f;
    var G__7054 = g;
    var G__7055 = h;
    var G__7056 = i;
    var G__7057 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7048, G__7049, G__7050, G__7051, G__7052, G__7053, G__7054, G__7055, G__7056, G__7057) : self__.afn.call(null, G__7048, G__7049, G__7050, G__7051, G__7052, G__7053, G__7054, G__7055, G__7056, G__7057);
  };
  var G__7467__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7058 = a;
    var G__7059 = b;
    var G__7060 = c;
    var G__7061 = d;
    var G__7062 = e;
    var G__7063 = f;
    var G__7064 = g;
    var G__7065 = h;
    var G__7066 = i;
    var G__7067 = j;
    var G__7068 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7058, G__7059, G__7060, G__7061, G__7062, G__7063, G__7064, G__7065, G__7066, G__7067, G__7068) : self__.afn.call(null, G__7058, G__7059, G__7060, G__7061, G__7062, G__7063, G__7064, G__7065, G__7066, G__7067, G__7068);
  };
  var G__7467__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7069 = a;
    var G__7070 = b;
    var G__7071 = c;
    var G__7072 = d;
    var G__7073 = e;
    var G__7074 = f;
    var G__7075 = g;
    var G__7076 = h;
    var G__7077 = i;
    var G__7078 = j;
    var G__7079 = k;
    var G__7080 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7069, G__7070, G__7071, G__7072, G__7073, G__7074, G__7075, G__7076, G__7077, G__7078, G__7079, G__7080) : self__.afn.call(null, G__7069, G__7070, G__7071, G__7072, G__7073, G__7074, G__7075, G__7076, G__7077, G__7078, G__7079, G__7080);
  };
  var G__7467__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7081 = a;
    var G__7082 = b;
    var G__7083 = c;
    var G__7084 = d;
    var G__7085 = e;
    var G__7086 = f;
    var G__7087 = g;
    var G__7088 = h;
    var G__7089 = i;
    var G__7090 = j;
    var G__7091 = k;
    var G__7092 = l;
    var G__7093 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7081, G__7082, G__7083, G__7084, G__7085, G__7086, G__7087, G__7088, G__7089, G__7090, G__7091, G__7092, G__7093) : self__.afn.call(null, G__7081, G__7082, G__7083, G__7084, G__7085, G__7086, G__7087, G__7088, G__7089, G__7090, G__7091, G__7092, G__7093);
  };
  var G__7467__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7094 = a;
    var G__7095 = b;
    var G__7096 = c;
    var G__7097 = d;
    var G__7098 = e;
    var G__7099 = f;
    var G__7100 = g;
    var G__7101 = h;
    var G__7102 = i;
    var G__7103 = j;
    var G__7104 = k;
    var G__7105 = l;
    var G__7106 = m;
    var G__7107 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7094, G__7095, G__7096, G__7097, G__7098, G__7099, G__7100, G__7101, G__7102, G__7103, G__7104, G__7105, G__7106, G__7107) : self__.afn.call(null, G__7094, G__7095, G__7096, G__7097, G__7098, G__7099, G__7100, G__7101, G__7102, G__7103, G__7104, G__7105, G__7106, G__7107);
  };
  var G__7467__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7108 = a;
    var G__7109 = b;
    var G__7110 = c;
    var G__7111 = d;
    var G__7112 = e;
    var G__7113 = f;
    var G__7114 = g;
    var G__7115 = h;
    var G__7116 = i;
    var G__7117 = j;
    var G__7118 = k;
    var G__7119 = l;
    var G__7120 = m;
    var G__7121 = n;
    var G__7122 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7108, G__7109, G__7110, G__7111, G__7112, G__7113, G__7114, G__7115, G__7116, G__7117, G__7118, G__7119, G__7120, G__7121, G__7122) : self__.afn.call(null, G__7108, G__7109, G__7110, G__7111, G__7112, G__7113, G__7114, G__7115, G__7116, G__7117, G__7118, G__7119, G__7120, G__7121, G__7122);
  };
  var G__7467__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7123 = a;
    var G__7124 = b;
    var G__7125 = c;
    var G__7126 = d;
    var G__7127 = e;
    var G__7128 = f;
    var G__7129 = g;
    var G__7130 = h;
    var G__7131 = i;
    var G__7132 = j;
    var G__7133 = k;
    var G__7134 = l;
    var G__7135 = m;
    var G__7136 = n;
    var G__7137 = o;
    var G__7138 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7123, G__7124, G__7125, G__7126, G__7127, G__7128, G__7129, G__7130, G__7131, G__7132, G__7133, G__7134, G__7135, G__7136, G__7137, G__7138) : self__.afn.call(null, G__7123, G__7124, G__7125, G__7126, G__7127, G__7128, G__7129, G__7130, G__7131, G__7132, G__7133, G__7134, G__7135, G__7136, G__7137, G__7138);
  };
  var G__7467__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7139 = a;
    var G__7140 = b;
    var G__7141 = c;
    var G__7142 = d;
    var G__7143 = e;
    var G__7144 = f;
    var G__7145 = g;
    var G__7146 = h;
    var G__7147 = i;
    var G__7148 = j;
    var G__7149 = k;
    var G__7150 = l;
    var G__7151 = m;
    var G__7152 = n;
    var G__7153 = o;
    var G__7154 = p;
    var G__7155 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7139, G__7140, G__7141, G__7142, G__7143, G__7144, G__7145, G__7146, G__7147, G__7148, G__7149, G__7150, G__7151, G__7152, G__7153, G__7154, G__7155) : self__.afn.call(null, G__7139, G__7140, G__7141, G__7142, G__7143, G__7144, G__7145, G__7146, G__7147, G__7148, G__7149, G__7150, G__7151, G__7152, G__7153, G__7154, G__7155);
  };
  var G__7467__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7156 = a;
    var G__7157 = b;
    var G__7158 = c;
    var G__7159 = d;
    var G__7160 = e;
    var G__7161 = f;
    var G__7162 = g;
    var G__7163 = h;
    var G__7164 = i;
    var G__7165 = j;
    var G__7166 = k;
    var G__7167 = l;
    var G__7168 = m;
    var G__7169 = n;
    var G__7170 = o;
    var G__7171 = p;
    var G__7172 = q;
    var G__7173 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7156, G__7157, G__7158, G__7159, G__7160, G__7161, G__7162, G__7163, G__7164, G__7165, G__7166, G__7167, G__7168, G__7169, G__7170, G__7171, G__7172, G__7173) : self__.afn.call(null, G__7156, G__7157, G__7158, G__7159, G__7160, G__7161, G__7162, G__7163, G__7164, G__7165, G__7166, G__7167, G__7168, G__7169, G__7170, G__7171, G__7172, G__7173);
  };
  var G__7467__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7174 = a;
    var G__7175 = b;
    var G__7176 = c;
    var G__7177 = d;
    var G__7178 = e;
    var G__7179 = f;
    var G__7180 = g;
    var G__7181 = h;
    var G__7182 = i;
    var G__7183 = j;
    var G__7184 = k;
    var G__7185 = l;
    var G__7186 = m;
    var G__7187 = n;
    var G__7188 = o;
    var G__7189 = p;
    var G__7190 = q;
    var G__7191 = r;
    var G__7192 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7174, G__7175, G__7176, G__7177, G__7178, G__7179, G__7180, G__7181, G__7182, G__7183, G__7184, G__7185, G__7186, G__7187, G__7188, G__7189, G__7190, G__7191, G__7192) : self__.afn.call(null, G__7174, G__7175, G__7176, G__7177, G__7178, G__7179, G__7180, G__7181, G__7182, G__7183, G__7184, G__7185, G__7186, G__7187, G__7188, G__7189, G__7190, G__7191, G__7192);
  };
  var G__7467__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7193 = a;
    var G__7194 = b;
    var G__7195 = c;
    var G__7196 = d;
    var G__7197 = e;
    var G__7198 = f;
    var G__7199 = g;
    var G__7200 = h;
    var G__7201 = i;
    var G__7202 = j;
    var G__7203 = k;
    var G__7204 = l;
    var G__7205 = m;
    var G__7206 = n;
    var G__7207 = o;
    var G__7208 = p;
    var G__7209 = q;
    var G__7210 = r;
    var G__7211 = s;
    var G__7212 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7193, G__7194, G__7195, G__7196, G__7197, G__7198, G__7199, G__7200, G__7201, G__7202, G__7203, G__7204, G__7205, G__7206, G__7207, G__7208, G__7209, G__7210, G__7211, G__7212) : self__.afn.call(null, G__7193, G__7194, G__7195, G__7196, G__7197, G__7198, G__7199, G__7200, G__7201, G__7202, G__7203, G__7204, G__7205, G__7206, G__7207, G__7208, G__7209, G__7210, G__7211, G__7212);
  };
  var G__7467__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__7213 = self__.afn;
    var G__7214 = a;
    var G__7215 = b;
    var G__7216 = c;
    var G__7217 = d;
    var G__7218 = e;
    var G__7219 = f;
    var G__7220 = g;
    var G__7221 = h;
    var G__7222 = i;
    var G__7223 = j;
    var G__7224 = k;
    var G__7225 = l;
    var G__7226 = m;
    var G__7227 = n;
    var G__7228 = o;
    var G__7229 = p;
    var G__7230 = q;
    var G__7231 = r;
    var G__7232 = s;
    var G__7233 = t;
    var G__7234 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7213, G__7214, G__7215, G__7216, G__7217, G__7218, G__7219, G__7220, G__7221, G__7222, G__7223, G__7224, G__7225, G__7226, G__7227, G__7228, G__7229, G__7230, G__7231, G__7232, G__7233, G__7234) : cljs.core.apply.call(null, G__7213, G__7214, G__7215, G__7216, G__7217, G__7218, G__7219, G__7220, G__7221, G__7222, G__7223, G__7224, G__7225, G__7226, G__7227, G__7228, G__7229, G__7230, G__7231, 
    G__7232, G__7233, G__7234);
  };
  G__7467 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__7467__1.call(this, self__);
      case 2:
        return G__7467__2.call(this, self__, a);
      case 3:
        return G__7467__3.call(this, self__, a, b);
      case 4:
        return G__7467__4.call(this, self__, a, b, c);
      case 5:
        return G__7467__5.call(this, self__, a, b, c, d);
      case 6:
        return G__7467__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__7467__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__7467__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__7467__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__7467__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__7467__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__7467__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__7467__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__7467__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__7467__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__7467__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__7467__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__7467__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__7467__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__7467__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__7467__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__7467__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7467.cljs$core$IFn$_invoke$arity$1 = G__7467__1;
  G__7467.cljs$core$IFn$_invoke$arity$2 = G__7467__2;
  G__7467.cljs$core$IFn$_invoke$arity$3 = G__7467__3;
  G__7467.cljs$core$IFn$_invoke$arity$4 = G__7467__4;
  G__7467.cljs$core$IFn$_invoke$arity$5 = G__7467__5;
  G__7467.cljs$core$IFn$_invoke$arity$6 = G__7467__6;
  G__7467.cljs$core$IFn$_invoke$arity$7 = G__7467__7;
  G__7467.cljs$core$IFn$_invoke$arity$8 = G__7467__8;
  G__7467.cljs$core$IFn$_invoke$arity$9 = G__7467__9;
  G__7467.cljs$core$IFn$_invoke$arity$10 = G__7467__10;
  G__7467.cljs$core$IFn$_invoke$arity$11 = G__7467__11;
  G__7467.cljs$core$IFn$_invoke$arity$12 = G__7467__12;
  G__7467.cljs$core$IFn$_invoke$arity$13 = G__7467__13;
  G__7467.cljs$core$IFn$_invoke$arity$14 = G__7467__14;
  G__7467.cljs$core$IFn$_invoke$arity$15 = G__7467__15;
  G__7467.cljs$core$IFn$_invoke$arity$16 = G__7467__16;
  G__7467.cljs$core$IFn$_invoke$arity$17 = G__7467__17;
  G__7467.cljs$core$IFn$_invoke$arity$18 = G__7467__18;
  G__7467.cljs$core$IFn$_invoke$arity$19 = G__7467__19;
  G__7467.cljs$core$IFn$_invoke$arity$20 = G__7467__20;
  G__7467.cljs$core$IFn$_invoke$arity$21 = G__7467__21;
  G__7467.cljs$core$IFn$_invoke$arity$22 = G__7467__22;
  return G__7467;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args7002) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7002)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__7235 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__7235) : self__.afn.call(null, G__7235);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__7236 = a;
  var G__7237 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__7236, G__7237) : self__.afn.call(null, G__7236, G__7237);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__7238 = a;
  var G__7239 = b;
  var G__7240 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__7238, G__7239, G__7240) : self__.afn.call(null, G__7238, G__7239, G__7240);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__7241 = a;
  var G__7242 = b;
  var G__7243 = c;
  var G__7244 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__7241, G__7242, G__7243, G__7244) : self__.afn.call(null, G__7241, G__7242, G__7243, G__7244);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__7245 = a;
  var G__7246 = b;
  var G__7247 = c;
  var G__7248 = d;
  var G__7249 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__7245, G__7246, G__7247, G__7248, G__7249) : self__.afn.call(null, G__7245, G__7246, G__7247, G__7248, G__7249);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__7250 = a;
  var G__7251 = b;
  var G__7252 = c;
  var G__7253 = d;
  var G__7254 = e;
  var G__7255 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__7250, G__7251, G__7252, G__7253, G__7254, G__7255) : self__.afn.call(null, G__7250, G__7251, G__7252, G__7253, G__7254, G__7255);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__7256 = a;
  var G__7257 = b;
  var G__7258 = c;
  var G__7259 = d;
  var G__7260 = e;
  var G__7261 = f;
  var G__7262 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__7256, G__7257, G__7258, G__7259, G__7260, G__7261, G__7262) : self__.afn.call(null, G__7256, G__7257, G__7258, G__7259, G__7260, G__7261, G__7262);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__7263 = a;
  var G__7264 = b;
  var G__7265 = c;
  var G__7266 = d;
  var G__7267 = e;
  var G__7268 = f;
  var G__7269 = g;
  var G__7270 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__7263, G__7264, G__7265, G__7266, G__7267, G__7268, G__7269, G__7270) : self__.afn.call(null, G__7263, G__7264, G__7265, G__7266, G__7267, G__7268, G__7269, G__7270);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__7271 = a;
  var G__7272 = b;
  var G__7273 = c;
  var G__7274 = d;
  var G__7275 = e;
  var G__7276 = f;
  var G__7277 = g;
  var G__7278 = h;
  var G__7279 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__7271, G__7272, G__7273, G__7274, G__7275, G__7276, G__7277, G__7278, G__7279) : self__.afn.call(null, G__7271, G__7272, G__7273, G__7274, G__7275, G__7276, G__7277, G__7278, G__7279);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__7280 = a;
  var G__7281 = b;
  var G__7282 = c;
  var G__7283 = d;
  var G__7284 = e;
  var G__7285 = f;
  var G__7286 = g;
  var G__7287 = h;
  var G__7288 = i;
  var G__7289 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__7280, G__7281, G__7282, G__7283, G__7284, G__7285, G__7286, G__7287, G__7288, G__7289) : self__.afn.call(null, G__7280, G__7281, G__7282, G__7283, G__7284, G__7285, G__7286, G__7287, G__7288, G__7289);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__7290 = a;
  var G__7291 = b;
  var G__7292 = c;
  var G__7293 = d;
  var G__7294 = e;
  var G__7295 = f;
  var G__7296 = g;
  var G__7297 = h;
  var G__7298 = i;
  var G__7299 = j;
  var G__7300 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__7290, G__7291, G__7292, G__7293, G__7294, G__7295, G__7296, G__7297, G__7298, G__7299, G__7300) : self__.afn.call(null, G__7290, G__7291, G__7292, G__7293, G__7294, G__7295, G__7296, G__7297, G__7298, G__7299, G__7300);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__7301 = a;
  var G__7302 = b;
  var G__7303 = c;
  var G__7304 = d;
  var G__7305 = e;
  var G__7306 = f;
  var G__7307 = g;
  var G__7308 = h;
  var G__7309 = i;
  var G__7310 = j;
  var G__7311 = k;
  var G__7312 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__7301, G__7302, G__7303, G__7304, G__7305, G__7306, G__7307, G__7308, G__7309, G__7310, G__7311, G__7312) : self__.afn.call(null, G__7301, G__7302, G__7303, G__7304, G__7305, G__7306, G__7307, G__7308, G__7309, G__7310, G__7311, G__7312);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__7313 = a;
  var G__7314 = b;
  var G__7315 = c;
  var G__7316 = d;
  var G__7317 = e;
  var G__7318 = f;
  var G__7319 = g;
  var G__7320 = h;
  var G__7321 = i;
  var G__7322 = j;
  var G__7323 = k;
  var G__7324 = l;
  var G__7325 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__7313, G__7314, G__7315, G__7316, G__7317, G__7318, G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325) : self__.afn.call(null, G__7313, G__7314, G__7315, G__7316, G__7317, G__7318, G__7319, G__7320, G__7321, G__7322, G__7323, G__7324, G__7325);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__7326 = a;
  var G__7327 = b;
  var G__7328 = c;
  var G__7329 = d;
  var G__7330 = e;
  var G__7331 = f;
  var G__7332 = g;
  var G__7333 = h;
  var G__7334 = i;
  var G__7335 = j;
  var G__7336 = k;
  var G__7337 = l;
  var G__7338 = m;
  var G__7339 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__7326, G__7327, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333, G__7334, G__7335, G__7336, G__7337, G__7338, G__7339) : self__.afn.call(null, G__7326, G__7327, G__7328, G__7329, G__7330, G__7331, G__7332, G__7333, G__7334, G__7335, G__7336, G__7337, G__7338, G__7339);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__7340 = a;
  var G__7341 = b;
  var G__7342 = c;
  var G__7343 = d;
  var G__7344 = e;
  var G__7345 = f;
  var G__7346 = g;
  var G__7347 = h;
  var G__7348 = i;
  var G__7349 = j;
  var G__7350 = k;
  var G__7351 = l;
  var G__7352 = m;
  var G__7353 = n;
  var G__7354 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__7340, G__7341, G__7342, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348, G__7349, G__7350, G__7351, G__7352, G__7353, G__7354) : self__.afn.call(null, G__7340, G__7341, G__7342, G__7343, G__7344, G__7345, G__7346, G__7347, G__7348, G__7349, G__7350, G__7351, G__7352, G__7353, G__7354);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__7355 = a;
  var G__7356 = b;
  var G__7357 = c;
  var G__7358 = d;
  var G__7359 = e;
  var G__7360 = f;
  var G__7361 = g;
  var G__7362 = h;
  var G__7363 = i;
  var G__7364 = j;
  var G__7365 = k;
  var G__7366 = l;
  var G__7367 = m;
  var G__7368 = n;
  var G__7369 = o;
  var G__7370 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__7355, G__7356, G__7357, G__7358, G__7359, G__7360, G__7361, G__7362, G__7363, G__7364, G__7365, G__7366, G__7367, G__7368, G__7369, G__7370) : self__.afn.call(null, G__7355, G__7356, G__7357, G__7358, G__7359, G__7360, G__7361, G__7362, G__7363, G__7364, G__7365, G__7366, G__7367, G__7368, G__7369, G__7370);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__7371 = a;
  var G__7372 = b;
  var G__7373 = c;
  var G__7374 = d;
  var G__7375 = e;
  var G__7376 = f;
  var G__7377 = g;
  var G__7378 = h;
  var G__7379 = i;
  var G__7380 = j;
  var G__7381 = k;
  var G__7382 = l;
  var G__7383 = m;
  var G__7384 = n;
  var G__7385 = o;
  var G__7386 = p;
  var G__7387 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__7371, G__7372, G__7373, G__7374, G__7375, G__7376, G__7377, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, G__7385, G__7386, G__7387) : self__.afn.call(null, G__7371, G__7372, G__7373, G__7374, G__7375, G__7376, G__7377, G__7378, G__7379, G__7380, G__7381, G__7382, G__7383, G__7384, G__7385, G__7386, G__7387);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__7388 = a;
  var G__7389 = b;
  var G__7390 = c;
  var G__7391 = d;
  var G__7392 = e;
  var G__7393 = f;
  var G__7394 = g;
  var G__7395 = h;
  var G__7396 = i;
  var G__7397 = j;
  var G__7398 = k;
  var G__7399 = l;
  var G__7400 = m;
  var G__7401 = n;
  var G__7402 = o;
  var G__7403 = p;
  var G__7404 = q;
  var G__7405 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__7388, G__7389, G__7390, G__7391, G__7392, G__7393, G__7394, G__7395, G__7396, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402, G__7403, G__7404, G__7405) : self__.afn.call(null, G__7388, G__7389, G__7390, G__7391, G__7392, G__7393, G__7394, G__7395, G__7396, G__7397, G__7398, G__7399, G__7400, G__7401, G__7402, G__7403, G__7404, G__7405);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__7406 = a;
  var G__7407 = b;
  var G__7408 = c;
  var G__7409 = d;
  var G__7410 = e;
  var G__7411 = f;
  var G__7412 = g;
  var G__7413 = h;
  var G__7414 = i;
  var G__7415 = j;
  var G__7416 = k;
  var G__7417 = l;
  var G__7418 = m;
  var G__7419 = n;
  var G__7420 = o;
  var G__7421 = p;
  var G__7422 = q;
  var G__7423 = r;
  var G__7424 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__7406, G__7407, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416, G__7417, G__7418, G__7419, G__7420, G__7421, G__7422, G__7423, G__7424) : self__.afn.call(null, G__7406, G__7407, G__7408, G__7409, G__7410, G__7411, G__7412, G__7413, G__7414, G__7415, G__7416, G__7417, G__7418, G__7419, G__7420, G__7421, G__7422, G__7423, G__7424);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__7425 = a;
  var G__7426 = b;
  var G__7427 = c;
  var G__7428 = d;
  var G__7429 = e;
  var G__7430 = f;
  var G__7431 = g;
  var G__7432 = h;
  var G__7433 = i;
  var G__7434 = j;
  var G__7435 = k;
  var G__7436 = l;
  var G__7437 = m;
  var G__7438 = n;
  var G__7439 = o;
  var G__7440 = p;
  var G__7441 = q;
  var G__7442 = r;
  var G__7443 = s;
  var G__7444 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__7425, G__7426, G__7427, G__7428, G__7429, G__7430, G__7431, G__7432, G__7433, G__7434, G__7435, G__7436, G__7437, G__7438, G__7439, G__7440, G__7441, G__7442, G__7443, G__7444) : self__.afn.call(null, G__7425, G__7426, G__7427, G__7428, G__7429, G__7430, G__7431, G__7432, G__7433, G__7434, G__7435, G__7436, G__7437, G__7438, G__7439, G__7440, G__7441, G__7442, G__7443, G__7444);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__7445 = self__.afn;
  var G__7446 = a;
  var G__7447 = b;
  var G__7448 = c;
  var G__7449 = d;
  var G__7450 = e;
  var G__7451 = f;
  var G__7452 = g;
  var G__7453 = h;
  var G__7454 = i;
  var G__7455 = j;
  var G__7456 = k;
  var G__7457 = l;
  var G__7458 = m;
  var G__7459 = n;
  var G__7460 = o;
  var G__7461 = p;
  var G__7462 = q;
  var G__7463 = r;
  var G__7464 = s;
  var G__7465 = t;
  var G__7466 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__7445, G__7446, G__7447, G__7448, G__7449, G__7450, G__7451, G__7452, G__7453, G__7454, G__7455, G__7456, G__7457, G__7458, G__7459, G__7460, G__7461, G__7462, G__7463, G__7464, G__7465, G__7466) : cljs.core.apply.call(null, G__7445, G__7446, G__7447, G__7448, G__7449, G__7450, G__7451, G__7452, G__7453, G__7454, G__7455, G__7456, G__7457, G__7458, G__7459, G__7460, G__7461, G__7462, G__7463, 
  G__7464, G__7465, G__7466);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__7471 = o;
    if (G__7471) {
      var bit__4964__auto__ = G__7471.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4964__auto__ || G__7471.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__7471.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__7471);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__7471);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4278__auto__ = !(o == null);
    if (and__4278__auto__) {
      var G__7475 = o;
      if (G__7475) {
        var bit__4964__auto__ = G__7475.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4964__auto__ || G__7475.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__7475.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__7475);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__7475);
      }
    } else {
      return and__4278__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var G__7480 = arguments.length;
  switch(G__7480) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__7482 = ret;
        var G__7483 = cljs.core.first(ks);
        var G__7484 = cljs.core.next(ks);
        coll = G__7482;
        k = G__7483;
        ks = G__7484;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq7476) {
  var G__7477 = cljs.core.first(seq7476);
  var seq7476__$1 = cljs.core.next(seq7476);
  var G__7478 = cljs.core.first(seq7476__$1);
  var seq7476__$2 = cljs.core.next(seq7476__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__7477, G__7478, seq7476__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__7486 = x;
    if (G__7486) {
      var bit__4964__auto__ = G__7486.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4964__auto__ || G__7486.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__7486.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__7486);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__7486);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__7488 = x;
    if (G__7488) {
      var bit__4964__auto__ = G__7488.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4964__auto__ || G__7488.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__7488.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__7488);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__7488);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__7490 = x;
  if (G__7490) {
    var bit__4964__auto__ = G__7490.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4964__auto__ || G__7490.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__7490.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__7490);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__7490);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__7492 = x;
  if (G__7492) {
    var bit__4964__auto__ = G__7492.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4964__auto__ || G__7492.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__7492.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__7492);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__7492);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__7494 = x;
  if (G__7494) {
    var bit__4964__auto__ = G__7494.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4964__auto__ || G__7494.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__7494.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__7494);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__7494);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__7496 = x;
  if (G__7496) {
    var bit__4964__auto__ = G__7496.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4964__auto__ || G__7496.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__7496.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__7496);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__7496);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__7498 = x;
    if (G__7498) {
      var bit__4964__auto__ = G__7498.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4964__auto__ || G__7498.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__7498.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__7498);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__7498);
    }
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__7500 = x;
  if (G__7500) {
    var bit__4964__auto__ = G__7500.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4964__auto__ || G__7500.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__7500.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__7500);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__7500);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__7502 = x;
  if (G__7502) {
    var bit__4957__auto__ = G__7502.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4957__auto__ || G__7502.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var G__7505 = arguments.length;
  switch(G__7505) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5342__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  var obj7507 = {};
  return obj7507;
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var G__7508 = goog.object.create;
  var G__7509 = keyvals;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__7508, G__7509) : cljs.core.apply.call(null, G__7508, G__7509);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq7503) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq7503));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__7513_7515 = obj;
  var G__7514_7516 = function(G__7513_7515, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__7513_7515, keys);
  goog.object.forEach(G__7513_7515, G__7514_7516);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__7517 = i__$1 + 1;
      var G__7518 = j__$1 + 1;
      var G__7519 = len__$1 - 1;
      i__$1 = G__7517;
      j__$1 = G__7518;
      len__$1 = G__7519;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__7520 = i__$1 - 1;
      var G__7521 = j__$1 - 1;
      var G__7522 = len__$1 - 1;
      i__$1 = G__7520;
      j__$1 = G__7521;
      len__$1 = G__7522;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj7524 = {};
  return obj7524;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__7526 = s;
    if (G__7526) {
      var bit__4964__auto__ = G__7526.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4964__auto__ || G__7526.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__7526.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__7526);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__7526);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__7528 = s;
  if (G__7528) {
    var bit__4964__auto__ = G__7528.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4964__auto__ || G__7528.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__7528.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__7528);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__7528);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4290__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4290__auto__) {
    return or__4290__auto__;
  } else {
    var G__7532 = f;
    if (G__7532) {
      var bit__4964__auto__ = G__7532.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4964__auto__ || G__7532.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__7532.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__7532);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__7532);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__7545 = n;
    return isNaN(G__7545);
  }()) && !(n === Infinity) && function() {
    var G__7546 = n;
    return parseFloat(G__7546);
  }() === function() {
    var G__7547 = n;
    var G__7548 = 10;
    return parseInt(G__7547, G__7548);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var G__7553 = arguments.length;
  switch(G__7553) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__7555 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__7556 = etc;
          s = G__7555;
          xs = G__7556;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq7549) {
  var G__7550 = cljs.core.first(seq7549);
  var seq7549__$1 = cljs.core.next(seq7549);
  var G__7551 = cljs.core.first(seq7549__$1);
  var seq7549__$2 = cljs.core.next(seq7549__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__7550, G__7551, seq7549__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__7560 = x;
            if (G__7560) {
              var bit__4957__auto__ = G__7560.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4957__auto__ || G__7560.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__7561 = x;
            var G__7562 = y;
            return goog.array.defaultCompare(G__7561, G__7562);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var G__7564 = arguments.length;
  switch(G__7564) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return-1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__7566 = xs;
      var G__7567 = ys;
      var G__7568 = len;
      var G__7569 = n + 1;
      xs = G__7566;
      ys = G__7567;
      len = G__7568;
      n = G__7569;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__7574 = x;
        var G__7575 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7574, G__7575) : f.call(null, G__7574, G__7575);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__7576 = y;
            var G__7577 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7576, G__7577) : f.call(null, G__7576, G__7577);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var G__7579 = arguments.length;
  switch(G__7579) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = function() {
      var G__7580 = coll;
      return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7580) : cljs.core.to_array.call(null, G__7580);
    }();
    var G__7581_7584 = a;
    var G__7582_7585 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__7581_7584, G__7582_7585);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var G__7587 = arguments.length;
  switch(G__7587) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, function() {
      var G__7588 = x;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7588) : keyfn.call(null, G__7588);
    }(), function() {
      var G__7589 = y;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__7589) : keyfn.call(null, G__7589);
    }());
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var G__7592 = arguments.length;
  switch(G__7592) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4124__auto__ = cljs.core.seq(coll);
  if (temp__4124__auto__) {
    var s = temp__4124__auto__;
    var G__7593 = f;
    var G__7594 = cljs.core.first(s);
    var G__7595 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__7593, G__7594, G__7595) : cljs.core.reduce.call(null, G__7593, G__7594, G__7595);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__7596 = val__$1;
        var G__7597 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7596, G__7597) : f.call(null, G__7596, G__7597);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__7599 = nval;
        var G__7600 = cljs.core.next(coll__$1);
        val__$1 = G__7599;
        coll__$1 = G__7600;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__7604 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__7604) : cljs.core.to_array.call(null, G__7604);
  }();
  var G__7605_7607 = a;
  goog.array.shuffle(G__7605_7607);
  var G__7606 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__7606) : cljs.core.vec.call(null, G__7606);
};
cljs.core.reduce = function cljs$core$reduce() {
  var G__7609 = arguments.length;
  switch(G__7609) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (function() {
    var G__7610 = coll;
    if (G__7610) {
      var bit__4957__auto__ = G__7610.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4957__auto__ || G__7610.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (function() {
    var G__7611 = coll;
    if (G__7611) {
      var bit__4957__auto__ = G__7611.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4957__auto__ || G__7611.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var G__7614 = arguments.length;
  switch(G__7614) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__7619 = null;
    var G__7619__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__7619__1 = function(x) {
      var G__7615 = x;
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__7615) : cf.call(null, G__7615);
    };
    var G__7619__2 = function(x, y) {
      var G__7616 = x;
      var G__7617 = y;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__7616, G__7617) : f.call(null, G__7616, G__7617);
    };
    G__7619 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__7619__0.call(this);
        case 1:
          return G__7619__1.call(this, x);
        case 2:
          return G__7619__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__7619.cljs$core$IFn$_invoke$arity$0 = G__7619__0;
    G__7619.cljs$core$IFn$_invoke$arity$1 = G__7619__1;
    G__7619.cljs$core$IFn$_invoke$arity$2 = G__7619__2;
    return G__7619;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var G__7621 = arguments.length;
  switch(G__7621) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }(), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = function() {
    var G__7622 = f;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__7622) : xform.call(null, G__7622);
  }();
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  var G__7623 = ret;
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__7623) : f__$1.call(null, G__7623);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var G__7629 = arguments.length;
  switch(G__7629) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq7625) {
  var G__7626 = cljs.core.first(seq7625);
  var seq7625__$1 = cljs.core.next(seq7625);
  var G__7627 = cljs.core.first(seq7625__$1);
  var seq7625__$2 = cljs.core.next(seq7625__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__7626, G__7627, seq7625__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var G__7635 = arguments.length;
  switch(G__7635) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return-x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq7631) {
  var G__7632 = cljs.core.first(seq7631);
  var seq7631__$1 = cljs.core.next(seq7631);
  var G__7633 = cljs.core.first(seq7631__$1);
  var seq7631__$2 = cljs.core.next(seq7631__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__7632, G__7633, seq7631__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var G__7641 = arguments.length;
  switch(G__7641) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq7637) {
  var G__7638 = cljs.core.first(seq7637);
  var seq7637__$1 = cljs.core.next(seq7637);
  var G__7639 = cljs.core.first(seq7637__$1);
  var seq7637__$2 = cljs.core.next(seq7637__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__7638, G__7639, seq7637__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var G__7647 = arguments.length;
  switch(G__7647) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq7643) {
  var G__7644 = cljs.core.first(seq7643);
  var seq7643__$1 = cljs.core.next(seq7643);
  var G__7645 = cljs.core.first(seq7643__$1);
  var seq7643__$2 = cljs.core.next(seq7643__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__7644, G__7645, seq7643__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var G__7653 = arguments.length;
  switch(G__7653) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__7655 = y;
        var G__7656 = cljs.core.first(more);
        var G__7657 = cljs.core.next(more);
        x = G__7655;
        y = G__7656;
        more = G__7657;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq7649) {
  var G__7650 = cljs.core.first(seq7649);
  var seq7649__$1 = cljs.core.next(seq7649);
  var G__7651 = cljs.core.first(seq7649__$1);
  var seq7649__$2 = cljs.core.next(seq7649__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__7650, G__7651, seq7649__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var G__7662 = arguments.length;
  switch(G__7662) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__7664 = y;
        var G__7665 = cljs.core.first(more);
        var G__7666 = cljs.core.next(more);
        x = G__7664;
        y = G__7665;
        more = G__7666;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq7658) {
  var G__7659 = cljs.core.first(seq7658);
  var seq7658__$1 = cljs.core.next(seq7658);
  var G__7660 = cljs.core.first(seq7658__$1);
  var seq7658__$2 = cljs.core.next(seq7658__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7659, G__7660, seq7658__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var G__7671 = arguments.length;
  switch(G__7671) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__7673 = y;
        var G__7674 = cljs.core.first(more);
        var G__7675 = cljs.core.next(more);
        x = G__7673;
        y = G__7674;
        more = G__7675;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq7667) {
  var G__7668 = cljs.core.first(seq7667);
  var seq7667__$1 = cljs.core.next(seq7667);
  var G__7669 = cljs.core.first(seq7667__$1);
  var seq7667__$2 = cljs.core.next(seq7667__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__7668, G__7669, seq7667__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var G__7680 = arguments.length;
  switch(G__7680) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__7682 = y;
        var G__7683 = cljs.core.first(more);
        var G__7684 = cljs.core.next(more);
        x = G__7682;
        y = G__7683;
        more = G__7684;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq7676) {
  var G__7677 = cljs.core.first(seq7676);
  var seq7676__$1 = cljs.core.next(seq7676);
  var G__7678 = cljs.core.first(seq7676__$1);
  var seq7676__$2 = cljs.core.next(seq7676__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7677, G__7678, seq7676__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var G__7689 = arguments.length;
  switch(G__7689) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4602__auto__ = x;
  var y__4603__auto__ = y;
  return x__4602__auto__ > y__4603__auto__ ? x__4602__auto__ : y__4603__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4602__auto__ = x;
    var y__4603__auto__ = y;
    return x__4602__auto__ > y__4603__auto__ ? x__4602__auto__ : y__4603__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq7685) {
  var G__7686 = cljs.core.first(seq7685);
  var seq7685__$1 = cljs.core.next(seq7685);
  var G__7687 = cljs.core.first(seq7685__$1);
  var seq7685__$2 = cljs.core.next(seq7685__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__7686, G__7687, seq7685__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var G__7695 = arguments.length;
  switch(G__7695) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4609__auto__ = x;
  var y__4610__auto__ = y;
  return x__4609__auto__ < y__4610__auto__ ? x__4609__auto__ : y__4610__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4609__auto__ = x;
    var y__4610__auto__ = y;
    return x__4609__auto__ < y__4610__auto__ ? x__4609__auto__ : y__4610__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq7691) {
  var G__7692 = cljs.core.first(seq7691);
  var seq7691__$1 = cljs.core.next(seq7691);
  var G__7693 = cljs.core.first(seq7691__$1);
  var seq7691__$2 = cljs.core.next(seq7691__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__7692, G__7693, seq7691__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var G__7701 = arguments.length;
  switch(G__7701) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq7697) {
  var G__7698 = cljs.core.first(seq7697);
  var seq7697__$1 = cljs.core.next(seq7697);
  var G__7699 = cljs.core.first(seq7697__$1);
  var seq7697__$2 = cljs.core.next(seq7697__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__7698, G__7699, seq7697__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var G__7707 = arguments.length;
  switch(G__7707) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq7703) {
  var G__7704 = cljs.core.first(seq7703);
  var seq7703__$1 = cljs.core.next(seq7703);
  var G__7705 = cljs.core.first(seq7703__$1);
  var seq7703__$2 = cljs.core.next(seq7703__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__7704, G__7705, seq7703__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var G__7713 = arguments.length;
  switch(G__7713) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq7709) {
  var G__7710 = cljs.core.first(seq7709);
  var seq7709__$1 = cljs.core.next(seq7709);
  var G__7711 = cljs.core.first(seq7709__$1);
  var seq7709__$2 = cljs.core.next(seq7709__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__7710, G__7711, seq7709__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var G__7719 = arguments.length;
  switch(G__7719) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq7715) {
  var G__7716 = cljs.core.first(seq7715);
  var seq7715__$1 = cljs.core.next(seq7715);
  var G__7717 = cljs.core.first(seq7715__$1);
  var seq7715__$2 = cljs.core.next(seq7715__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__7716, G__7717, seq7715__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var G__7725 = arguments.length;
  switch(G__7725) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq7721) {
  var G__7722 = cljs.core.first(seq7721);
  var seq7721__$1 = cljs.core.next(seq7721);
  var G__7723 = cljs.core.first(seq7721__$1);
  var seq7721__$2 = cljs.core.next(seq7721__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__7722, G__7723, seq7721__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__7729 = x;
  var G__7730 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__7729, G__7730) : cljs.core.mod.call(null, G__7729, G__7730);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var G__7735 = arguments.length;
  switch(G__7735) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return-x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq7731) {
  var G__7732 = cljs.core.first(seq7731);
  var seq7731__$1 = cljs.core.next(seq7731);
  var G__7733 = cljs.core.first(seq7731__$1);
  var seq7731__$2 = cljs.core.next(seq7731__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__7732, G__7733, seq7731__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var G__7741 = arguments.length;
  switch(G__7741) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return-x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq7737) {
  var G__7738 = cljs.core.first(seq7737);
  var seq7737__$1 = cljs.core.next(seq7737);
  var G__7739 = cljs.core.first(seq7737__$1);
  var seq7737__$2 = cljs.core.next(seq7737__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__7738, G__7739, seq7737__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__7745 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__7745) : Math.floor.call(null, G__7745);
  } else {
    var G__7746 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__7746) : Math.ceil.call(null, G__7746);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var G__7751 = arguments.length;
  switch(G__7751) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq7747) {
  var G__7748 = cljs.core.first(seq7747);
  var seq7747__$1 = cljs.core.next(seq7747);
  var G__7749 = cljs.core.first(seq7747__$1);
  var seq7747__$2 = cljs.core.next(seq7747__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__7748, G__7749, seq7747__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var G__7757 = arguments.length;
  switch(G__7757) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq7753) {
  var G__7754 = cljs.core.first(seq7753);
  var seq7753__$1 = cljs.core.next(seq7753);
  var G__7755 = cljs.core.first(seq7753__$1);
  var seq7753__$2 = cljs.core.next(seq7753__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__7754, G__7755, seq7753__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var G__7763 = arguments.length;
  switch(G__7763) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq7759) {
  var G__7760 = cljs.core.first(seq7759);
  var seq7759__$1 = cljs.core.next(seq7759);
  var G__7761 = cljs.core.first(seq7759__$1);
  var seq7759__$2 = cljs.core.next(seq7759__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__7760, G__7761, seq7759__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var G__7769 = arguments.length;
  switch(G__7769) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq7765) {
  var G__7766 = cljs.core.first(seq7765);
  var seq7765__$1 = cljs.core.next(seq7765);
  var G__7767 = cljs.core.first(seq7765__$1);
  var seq7765__$2 = cljs.core.next(seq7765__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__7766, G__7767, seq7765__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var G__7775 = arguments.length;
  switch(G__7775) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__7777 = y;
        var G__7778 = cljs.core.first(more);
        var G__7779 = cljs.core.next(more);
        x = G__7777;
        y = G__7778;
        more = G__7779;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq7771) {
  var G__7772 = cljs.core.first(seq7771);
  var seq7771__$1 = cljs.core.next(seq7771);
  var G__7773 = cljs.core.first(seq7771__$1);
  var seq7771__$2 = cljs.core.next(seq7771__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__7772, G__7773, seq7771__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__7780 = n__$1 - 1;
      var G__7781 = cljs.core.next(xs);
      n__$1 = G__7780;
      xs = G__7781;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var G__7785 = arguments.length;
  switch(G__7785) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5342__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    var G__7786 = x;
    return goog.string.buildString(G__7786);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__7788 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__7789 = cljs.core.next(more);
      sb = G__7788;
      more = G__7789;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq7782) {
  var G__7783 = cljs.core.first(seq7782);
  var seq7782__$1 = cljs.core.next(seq7782);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__7783, seq7782__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var G__7791 = arguments.length;
  switch(G__7791) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__7793 = cljs.core.next(xs);
            var G__7794 = cljs.core.next(ys);
            xs = G__7793;
            ys = G__7794;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__7795 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__7796 = cljs.core.next(s);
        res = G__7795;
        s = G__7796;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__7801 = (h + (cljs.core.hash(function() {
        var G__7799 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__7799) : cljs.core.key.call(null, G__7799);
      }()) ^ cljs.core.hash(function() {
        var G__7800 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__7800) : cljs.core.val.call(null, G__7800);
      }()))) % 4503599627370496;
      var G__7802 = cljs.core.next(s);
      h = G__7801;
      s = G__7802;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__7803 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__7804 = cljs.core.next(s__$1);
      h = G__7803;
      s__$1 = G__7804;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__7815_7825 = cljs.core.seq(fn_map);
  var chunk__7816_7826 = null;
  var count__7817_7827 = 0;
  var i__7818_7828 = 0;
  while (true) {
    if (i__7818_7828 < count__7817_7827) {
      var vec__7819_7829 = chunk__7816_7826.cljs$core$IIndexed$_nth$arity$2(null, i__7818_7828);
      var key_name_7830 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7819_7829, 0, null);
      var f_7831 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7819_7829, 1, null);
      var str_name_7832 = function() {
        var G__7820 = key_name_7830;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7820) : cljs.core.name.call(null, G__7820);
      }();
      obj[str_name_7832] = f_7831;
      var G__7833 = seq__7815_7825;
      var G__7834 = chunk__7816_7826;
      var G__7835 = count__7817_7827;
      var G__7836 = i__7818_7828 + 1;
      seq__7815_7825 = G__7833;
      chunk__7816_7826 = G__7834;
      count__7817_7827 = G__7835;
      i__7818_7828 = G__7836;
      continue;
    } else {
      var temp__4126__auto___7837 = cljs.core.seq(seq__7815_7825);
      if (temp__4126__auto___7837) {
        var seq__7815_7838__$1 = temp__4126__auto___7837;
        if (cljs.core.chunked_seq_QMARK_(seq__7815_7838__$1)) {
          var c__5075__auto___7839 = function() {
            var G__7821 = seq__7815_7838__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__7821) : cljs.core.chunk_first.call(null, G__7821);
          }();
          var G__7840 = function() {
            var G__7822 = seq__7815_7838__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__7822) : cljs.core.chunk_rest.call(null, G__7822);
          }();
          var G__7841 = c__5075__auto___7839;
          var G__7842 = cljs.core.count(c__5075__auto___7839);
          var G__7843 = 0;
          seq__7815_7825 = G__7840;
          chunk__7816_7826 = G__7841;
          count__7817_7827 = G__7842;
          i__7818_7828 = G__7843;
          continue;
        } else {
          var vec__7823_7844 = cljs.core.first(seq__7815_7838__$1);
          var key_name_7845 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7823_7844, 0, null);
          var f_7846 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7823_7844, 1, null);
          var str_name_7847 = function() {
            var G__7824 = key_name_7845;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7824) : cljs.core.name.call(null, G__7824);
          }();
          obj[str_name_7847] = f_7846;
          var G__7848 = cljs.core.next(seq__7815_7838__$1);
          var G__7849 = null;
          var G__7850 = 0;
          var G__7851 = 0;
          seq__7815_7825 = G__7848;
          chunk__7816_7826 = G__7849;
          count__7817_7827 = G__7850;
          i__7818_7828 = G__7851;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__7853 = coll;
  if (G__7853) {
    var bit__4964__auto__ = G__7853.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4964__auto__ || G__7853.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__7853.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__7853);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__7853);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__7855 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__7855;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__7856 = i - 1;
      var G__7857 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__7856;
      r = G__7857;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq7854) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq7854));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4290__auto__ = coll == null;
    if (or__4290__auto__) {
      return or__4290__auto__;
    } else {
      var G__7861 = coll;
      if (G__7861) {
        var bit__4957__auto__ = G__7861.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4957__auto__ || G__7861.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__7863 = x;
  if (G__7863) {
    var bit__4964__auto__ = G__7863.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4964__auto__ || G__7863.cljs$core$IList$) {
      return true;
    } else {
      if (!G__7863.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__7863);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__7863);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4278__auto__ = cljs.core.not(a.ns);
      if (and__4278__auto__) {
        return b.ns;
      } else {
        return and__4278__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__7870 = a.ns;
            var G__7871 = b.ns;
            return goog.array.defaultCompare(G__7870, G__7871);
          }();
          if (0 === nsc) {
            var G__7872 = a.name;
            var G__7873 = b.name;
            return goog.array.defaultCompare(G__7872, G__7873);
          } else {
            return nsc;
          }
        }
      } else {
        var G__7874 = a.name;
        var G__7875 = b.name;
        return goog.array.defaultCompare(G__7874, G__7875);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4706__auto__ = self__._hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__7877 = null;
  var G__7877__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__7877__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__7877 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__7877__2.call(this, self__, coll);
      case 3:
        return G__7877__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__7877.cljs$core$IFn$_invoke$arity$2 = G__7877__2;
  G__7877.cljs$core$IFn$_invoke$arity$3 = G__7877__3;
  return G__7877;
}();
cljs.core.Keyword.prototype.apply = function(self__, args7876) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args7876)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__7879 = x;
    if (G__7879) {
      var bit__4957__auto__ = G__7879.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4957__auto__ || G__7879.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var G__7881 = arguments.length;
  switch(G__7881) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), function() {
        var G__7882 = name;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__7882) : cljs.core.name.call(null, G__7882);
      }(), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__7884 = ls.sval();
        ls = G__7884;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var G__7886 = arguments.length;
  switch(G__7886) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__7889 = s;
    if (G__7889) {
      var bit__4957__auto__ = G__7889.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4957__auto__ || G__7889.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__7890 = cljs.core.next(s__$1);
      s__$1 = G__7890;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_7891 = 0;
  var xs_7892 = cljs.core.seq(coll);
  while (true) {
    if (xs_7892) {
      ret[i_7891] = cljs.core.to_array(cljs.core.first(xs_7892));
      var G__7893 = i_7891 + 1;
      var G__7894 = cljs.core.next(xs_7892);
      i_7891 = G__7893;
      xs_7892 = G__7894;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var G__7896 = arguments.length;
  switch(G__7896) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7898 = i + 1;
        var G__7899 = cljs.core.next(s__$1);
        i = G__7898;
        s__$1 = G__7899;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5175__auto___7900 = size;
    var i_7901 = 0;
    while (true) {
      if (i_7901 < n__5175__auto___7900) {
        a[i_7901] = init_val_or_seq;
        var G__7902 = i_7901 + 1;
        i_7901 = G__7902;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var G__7904 = arguments.length;
  switch(G__7904) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7906 = i + 1;
        var G__7907 = cljs.core.next(s__$1);
        i = G__7906;
        s__$1 = G__7907;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5175__auto___7908 = size;
    var i_7909 = 0;
    while (true) {
      if (i_7909 < n__5175__auto___7908) {
        a[i_7909] = init_val_or_seq;
        var G__7910 = i_7909 + 1;
        i_7909 = G__7910;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var G__7912 = arguments.length;
  switch(G__7912) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7914 = i + 1;
        var G__7915 = cljs.core.next(s__$1);
        i = G__7914;
        s__$1 = G__7915;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5175__auto___7916 = size;
    var i_7917 = 0;
    while (true) {
      if (i_7917 < n__5175__auto___7916) {
        a[i_7917] = init_val_or_seq;
        var G__7918 = i_7917 + 1;
        i_7917 = G__7918;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var G__7920 = arguments.length;
  switch(G__7920) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__7922 = i + 1;
        var G__7923 = cljs.core.next(s__$1);
        i = G__7922;
        s__$1 = G__7923;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5175__auto___7924 = size;
    var i_7925 = 0;
    while (true) {
      if (i_7925 < n__5175__auto___7924) {
        a[i_7925] = init_val_or_seq;
        var G__7926 = i_7925 + 1;
        i_7925 = G__7926;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__7927 = cljs.core.next(s__$1);
        var G__7928 = i - 1;
        var G__7929 = sum + 1;
        s__$1 = G__7927;
        i = G__7928;
        sum = G__7929;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var G__7935 = arguments.length;
  switch(G__7935) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq7931) {
  var G__7932 = cljs.core.first(seq7931);
  var seq7931__$1 = cljs.core.next(seq7931);
  var G__7933 = cljs.core.first(seq7931__$1);
  var seq7931__$2 = cljs.core.next(seq7931__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__7932, G__7933, seq7931__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var G__7949 = arguments.length;
  switch(G__7949) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5342__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq7943) {
  var G__7944 = cljs.core.first(seq7943);
  var seq7943__$1 = cljs.core.next(seq7943);
  var G__7945 = cljs.core.first(seq7943__$1);
  var seq7943__$2 = cljs.core.next(seq7943__$1);
  var G__7946 = cljs.core.first(seq7943__$2);
  var seq7943__$3 = cljs.core.next(seq7943__$2);
  var G__7947 = cljs.core.first(seq7943__$3);
  var seq7943__$4 = cljs.core.next(seq7943__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__7944, G__7945, G__7946, G__7947, seq7943__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var G__7955 = arguments.length;
  switch(G__7955) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__7957 = ntcoll;
      var G__7958 = cljs.core.first(vals);
      var G__7959 = cljs.core.next(vals);
      tcoll = G__7957;
      val = G__7958;
      vals = G__7959;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq7951) {
  var G__7952 = cljs.core.first(seq7951);
  var seq7951__$1 = cljs.core.next(seq7951);
  var G__7953 = cljs.core.first(seq7951__$1);
  var seq7951__$2 = cljs.core.next(seq7951__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7952, G__7953, seq7951__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var G__7965 = arguments.length;
  switch(G__7965) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__7967 = ntcoll;
      var G__7968 = cljs.core.first(kvs);
      var G__7969 = cljs.core.second(kvs);
      var G__7970 = cljs.core.nnext(kvs);
      tcoll = G__7967;
      key = G__7968;
      val = G__7969;
      kvs = G__7970;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq7960) {
  var G__7961 = cljs.core.first(seq7960);
  var seq7960__$1 = cljs.core.next(seq7960);
  var G__7962 = cljs.core.first(seq7960__$1);
  var seq7960__$2 = cljs.core.next(seq7960__$1);
  var G__7963 = cljs.core.first(seq7960__$2);
  var seq7960__$3 = cljs.core.next(seq7960__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7961, G__7962, G__7963, seq7960__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var G__7975 = arguments.length;
  switch(G__7975) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__7977 = ntcoll;
      var G__7978 = cljs.core.first(ks);
      var G__7979 = cljs.core.next(ks);
      tcoll = G__7977;
      key = G__7978;
      ks = G__7979;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq7971) {
  var G__7972 = cljs.core.first(seq7971);
  var seq7971__$1 = cljs.core.next(seq7971);
  var G__7973 = cljs.core.first(seq7971__$1);
  var seq7971__$2 = cljs.core.next(seq7971__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7972, G__7973, seq7971__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var G__7984 = arguments.length;
  switch(G__7984) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__7986 = ntcoll;
      var G__7987 = cljs.core.first(vals);
      var G__7988 = cljs.core.next(vals);
      tcoll = G__7986;
      val = G__7987;
      vals = G__7988;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq7980) {
  var G__7981 = cljs.core.first(seq7980);
  var seq7980__$1 = cljs.core.next(seq7980);
  var G__7982 = cljs.core.first(seq7980__$1);
  var seq7980__$2 = cljs.core.next(seq7980__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7981, G__7982, seq7980__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5219 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5219);
      } else {
        var G__8199 = a5219;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8199) : f.call(null, G__8199);
      }
    } else {
      var b5220 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5219, b5220);
        } else {
          var G__8200 = a5219;
          var G__8201 = b5220;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8200, G__8201) : f.call(null, G__8200, G__8201);
        }
      } else {
        var c5221 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5219, b5220, c5221);
          } else {
            var G__8202 = a5219;
            var G__8203 = b5220;
            var G__8204 = c5221;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8202, G__8203, G__8204) : f.call(null, G__8202, G__8203, G__8204);
          }
        } else {
          var d5222 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5219, b5220, c5221, d5222);
            } else {
              var G__8205 = a5219;
              var G__8206 = b5220;
              var G__8207 = c5221;
              var G__8208 = d5222;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8205, G__8206, G__8207, G__8208) : f.call(null, G__8205, G__8206, G__8207, G__8208);
            }
          } else {
            var e5223 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5219, b5220, c5221, d5222, e5223);
              } else {
                var G__8209 = a5219;
                var G__8210 = b5220;
                var G__8211 = c5221;
                var G__8212 = d5222;
                var G__8213 = e5223;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8209, G__8210, G__8211, G__8212, G__8213) : f.call(null, G__8209, G__8210, G__8211, G__8212, G__8213);
              }
            } else {
              var f5224 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5219, b5220, c5221, d5222, e5223, f5224);
                } else {
                  var G__8214 = a5219;
                  var G__8215 = b5220;
                  var G__8216 = c5221;
                  var G__8217 = d5222;
                  var G__8218 = e5223;
                  var G__8219 = f5224;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8214, G__8215, G__8216, G__8217, G__8218, G__8219) : f.call(null, G__8214, G__8215, G__8216, G__8217, G__8218, G__8219);
                }
              } else {
                var g5225 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5219, b5220, c5221, d5222, e5223, f5224, g5225);
                  } else {
                    var G__8220 = a5219;
                    var G__8221 = b5220;
                    var G__8222 = c5221;
                    var G__8223 = d5222;
                    var G__8224 = e5223;
                    var G__8225 = f5224;
                    var G__8226 = g5225;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__8220, G__8221, G__8222, G__8223, G__8224, G__8225, G__8226) : f.call(null, G__8220, G__8221, G__8222, G__8223, G__8224, G__8225, G__8226);
                  }
                } else {
                  var h5226 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226);
                    } else {
                      var G__8227 = a5219;
                      var G__8228 = b5220;
                      var G__8229 = c5221;
                      var G__8230 = d5222;
                      var G__8231 = e5223;
                      var G__8232 = f5224;
                      var G__8233 = g5225;
                      var G__8234 = h5226;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__8227, G__8228, G__8229, G__8230, G__8231, G__8232, G__8233, G__8234) : f.call(null, G__8227, G__8228, G__8229, G__8230, G__8231, G__8232, G__8233, G__8234);
                    }
                  } else {
                    var i5227 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227);
                      } else {
                        var G__8235 = a5219;
                        var G__8236 = b5220;
                        var G__8237 = c5221;
                        var G__8238 = d5222;
                        var G__8239 = e5223;
                        var G__8240 = f5224;
                        var G__8241 = g5225;
                        var G__8242 = h5226;
                        var G__8243 = i5227;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__8235, G__8236, G__8237, G__8238, G__8239, G__8240, G__8241, G__8242, G__8243) : f.call(null, G__8235, G__8236, G__8237, G__8238, G__8239, G__8240, G__8241, G__8242, G__8243);
                      }
                    } else {
                      var j5228 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228);
                        } else {
                          var G__8244 = a5219;
                          var G__8245 = b5220;
                          var G__8246 = c5221;
                          var G__8247 = d5222;
                          var G__8248 = e5223;
                          var G__8249 = f5224;
                          var G__8250 = g5225;
                          var G__8251 = h5226;
                          var G__8252 = i5227;
                          var G__8253 = j5228;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__8244, G__8245, G__8246, G__8247, G__8248, G__8249, G__8250, G__8251, G__8252, G__8253) : f.call(null, G__8244, G__8245, G__8246, G__8247, G__8248, G__8249, G__8250, G__8251, G__8252, G__8253);
                        }
                      } else {
                        var k5229 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229);
                          } else {
                            var G__8254 = a5219;
                            var G__8255 = b5220;
                            var G__8256 = c5221;
                            var G__8257 = d5222;
                            var G__8258 = e5223;
                            var G__8259 = f5224;
                            var G__8260 = g5225;
                            var G__8261 = h5226;
                            var G__8262 = i5227;
                            var G__8263 = j5228;
                            var G__8264 = k5229;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__8254, G__8255, G__8256, G__8257, G__8258, G__8259, G__8260, G__8261, G__8262, G__8263, G__8264) : f.call(null, G__8254, G__8255, G__8256, G__8257, G__8258, G__8259, G__8260, G__8261, G__8262, G__8263, G__8264);
                          }
                        } else {
                          var l5230 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230);
                            } else {
                              var G__8265 = a5219;
                              var G__8266 = b5220;
                              var G__8267 = c5221;
                              var G__8268 = d5222;
                              var G__8269 = e5223;
                              var G__8270 = f5224;
                              var G__8271 = g5225;
                              var G__8272 = h5226;
                              var G__8273 = i5227;
                              var G__8274 = j5228;
                              var G__8275 = k5229;
                              var G__8276 = l5230;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__8265, G__8266, G__8267, G__8268, G__8269, G__8270, G__8271, G__8272, G__8273, G__8274, G__8275, G__8276) : f.call(null, G__8265, G__8266, G__8267, G__8268, G__8269, G__8270, G__8271, G__8272, G__8273, G__8274, G__8275, G__8276);
                            }
                          } else {
                            var m5231 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230, m5231);
                              } else {
                                var G__8277 = a5219;
                                var G__8278 = b5220;
                                var G__8279 = c5221;
                                var G__8280 = d5222;
                                var G__8281 = e5223;
                                var G__8282 = f5224;
                                var G__8283 = g5225;
                                var G__8284 = h5226;
                                var G__8285 = i5227;
                                var G__8286 = j5228;
                                var G__8287 = k5229;
                                var G__8288 = l5230;
                                var G__8289 = m5231;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__8277, G__8278, G__8279, G__8280, G__8281, G__8282, G__8283, G__8284, G__8285, G__8286, G__8287, G__8288, G__8289) : f.call(null, G__8277, G__8278, G__8279, G__8280, G__8281, G__8282, G__8283, G__8284, G__8285, G__8286, G__8287, G__8288, G__8289);
                              }
                            } else {
                              var n5232 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230, m5231, n5232);
                                } else {
                                  var G__8290 = a5219;
                                  var G__8291 = b5220;
                                  var G__8292 = c5221;
                                  var G__8293 = d5222;
                                  var G__8294 = e5223;
                                  var G__8295 = f5224;
                                  var G__8296 = g5225;
                                  var G__8297 = h5226;
                                  var G__8298 = i5227;
                                  var G__8299 = j5228;
                                  var G__8300 = k5229;
                                  var G__8301 = l5230;
                                  var G__8302 = m5231;
                                  var G__8303 = n5232;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__8290, G__8291, G__8292, G__8293, G__8294, G__8295, G__8296, G__8297, G__8298, G__8299, G__8300, G__8301, G__8302, G__8303) : f.call(null, G__8290, G__8291, G__8292, G__8293, G__8294, G__8295, G__8296, G__8297, G__8298, G__8299, G__8300, G__8301, G__8302, G__8303);
                                }
                              } else {
                                var o5233 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230, m5231, n5232, o5233);
                                  } else {
                                    var G__8304 = a5219;
                                    var G__8305 = b5220;
                                    var G__8306 = c5221;
                                    var G__8307 = d5222;
                                    var G__8308 = e5223;
                                    var G__8309 = f5224;
                                    var G__8310 = g5225;
                                    var G__8311 = h5226;
                                    var G__8312 = i5227;
                                    var G__8313 = j5228;
                                    var G__8314 = k5229;
                                    var G__8315 = l5230;
                                    var G__8316 = m5231;
                                    var G__8317 = n5232;
                                    var G__8318 = o5233;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__8304, G__8305, G__8306, G__8307, G__8308, G__8309, G__8310, G__8311, G__8312, G__8313, G__8314, G__8315, G__8316, G__8317, G__8318) : f.call(null, G__8304, G__8305, G__8306, G__8307, G__8308, G__8309, G__8310, G__8311, G__8312, G__8313, G__8314, G__8315, G__8316, G__8317, G__8318);
                                  }
                                } else {
                                  var p5234 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230, m5231, n5232, o5233, p5234);
                                    } else {
                                      var G__8319 = a5219;
                                      var G__8320 = b5220;
                                      var G__8321 = c5221;
                                      var G__8322 = d5222;
                                      var G__8323 = e5223;
                                      var G__8324 = f5224;
                                      var G__8325 = g5225;
                                      var G__8326 = h5226;
                                      var G__8327 = i5227;
                                      var G__8328 = j5228;
                                      var G__8329 = k5229;
                                      var G__8330 = l5230;
                                      var G__8331 = m5231;
                                      var G__8332 = n5232;
                                      var G__8333 = o5233;
                                      var G__8334 = p5234;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__8319, G__8320, G__8321, G__8322, G__8323, G__8324, G__8325, G__8326, G__8327, G__8328, G__8329, G__8330, G__8331, G__8332, G__8333, G__8334) : f.call(null, G__8319, G__8320, G__8321, G__8322, G__8323, G__8324, G__8325, G__8326, G__8327, G__8328, G__8329, G__8330, G__8331, G__8332, G__8333, G__8334);
                                    }
                                  } else {
                                    var q5235 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230, m5231, n5232, o5233, p5234, q5235);
                                      } else {
                                        var G__8335 = a5219;
                                        var G__8336 = b5220;
                                        var G__8337 = c5221;
                                        var G__8338 = d5222;
                                        var G__8339 = e5223;
                                        var G__8340 = f5224;
                                        var G__8341 = g5225;
                                        var G__8342 = h5226;
                                        var G__8343 = i5227;
                                        var G__8344 = j5228;
                                        var G__8345 = k5229;
                                        var G__8346 = l5230;
                                        var G__8347 = m5231;
                                        var G__8348 = n5232;
                                        var G__8349 = o5233;
                                        var G__8350 = p5234;
                                        var G__8351 = q5235;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__8335, G__8336, G__8337, G__8338, G__8339, G__8340, G__8341, G__8342, G__8343, G__8344, G__8345, G__8346, G__8347, G__8348, G__8349, G__8350, G__8351) : f.call(null, G__8335, G__8336, G__8337, G__8338, G__8339, G__8340, G__8341, G__8342, G__8343, G__8344, G__8345, G__8346, G__8347, G__8348, G__8349, G__8350, G__8351);
                                      }
                                    } else {
                                      var r5236 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230, m5231, n5232, o5233, p5234, q5235, r5236);
                                        } else {
                                          var G__8352 = a5219;
                                          var G__8353 = b5220;
                                          var G__8354 = c5221;
                                          var G__8355 = d5222;
                                          var G__8356 = e5223;
                                          var G__8357 = f5224;
                                          var G__8358 = g5225;
                                          var G__8359 = h5226;
                                          var G__8360 = i5227;
                                          var G__8361 = j5228;
                                          var G__8362 = k5229;
                                          var G__8363 = l5230;
                                          var G__8364 = m5231;
                                          var G__8365 = n5232;
                                          var G__8366 = o5233;
                                          var G__8367 = p5234;
                                          var G__8368 = q5235;
                                          var G__8369 = r5236;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__8352, G__8353, G__8354, G__8355, G__8356, G__8357, G__8358, G__8359, G__8360, G__8361, G__8362, G__8363, G__8364, G__8365, G__8366, G__8367, G__8368, G__8369) : f.call(null, G__8352, G__8353, G__8354, G__8355, G__8356, G__8357, G__8358, G__8359, G__8360, G__8361, G__8362, G__8363, G__8364, G__8365, G__8366, G__8367, G__8368, G__8369);
                                        }
                                      } else {
                                        var s5237 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230, m5231, n5232, o5233, p5234, q5235, r5236, s5237);
                                          } else {
                                            var G__8370 = a5219;
                                            var G__8371 = b5220;
                                            var G__8372 = c5221;
                                            var G__8373 = d5222;
                                            var G__8374 = e5223;
                                            var G__8375 = f5224;
                                            var G__8376 = g5225;
                                            var G__8377 = h5226;
                                            var G__8378 = i5227;
                                            var G__8379 = j5228;
                                            var G__8380 = k5229;
                                            var G__8381 = l5230;
                                            var G__8382 = m5231;
                                            var G__8383 = n5232;
                                            var G__8384 = o5233;
                                            var G__8385 = p5234;
                                            var G__8386 = q5235;
                                            var G__8387 = r5236;
                                            var G__8388 = s5237;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__8370, G__8371, G__8372, G__8373, G__8374, G__8375, G__8376, G__8377, G__8378, G__8379, G__8380, G__8381, G__8382, G__8383, G__8384, G__8385, G__8386, G__8387, G__8388) : f.call(null, G__8370, G__8371, G__8372, G__8373, G__8374, G__8375, G__8376, G__8377, G__8378, G__8379, G__8380, G__8381, G__8382, G__8383, G__8384, G__8385, G__8386, G__8387, G__8388);
                                          }
                                        } else {
                                          var t5238 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5219, b5220, c5221, d5222, e5223, f5224, g5225, h5226, i5227, j5228, k5229, l5230, m5231, n5232, o5233, p5234, q5235, r5236, s5237, t5238);
                                            } else {
                                              var G__8389 = a5219;
                                              var G__8390 = b5220;
                                              var G__8391 = c5221;
                                              var G__8392 = d5222;
                                              var G__8393 = e5223;
                                              var G__8394 = f5224;
                                              var G__8395 = g5225;
                                              var G__8396 = h5226;
                                              var G__8397 = i5227;
                                              var G__8398 = j5228;
                                              var G__8399 = k5229;
                                              var G__8400 = l5230;
                                              var G__8401 = m5231;
                                              var G__8402 = n5232;
                                              var G__8403 = o5233;
                                              var G__8404 = p5234;
                                              var G__8405 = q5235;
                                              var G__8406 = r5236;
                                              var G__8407 = s5237;
                                              var G__8408 = t5238;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__8389, G__8390, G__8391, G__8392, G__8393, G__8394, G__8395, G__8396, G__8397, G__8398, G__8399, G__8400, G__8401, G__8402, G__8403, G__8404, G__8405, G__8406, G__8407, G__8408) : f.call(null, G__8389, G__8390, G__8391, G__8392, G__8393, G__8394, G__8395, G__8396, G__8397, G__8398, G__8399, G__8400, G__8401, G__8402, G__8403, G__8404, G__8405, G__8406, G__8407, G__8408);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var G__8416 = arguments.length;
  switch(G__8416) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5342__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq8409) {
  var G__8410 = cljs.core.first(seq8409);
  var seq8409__$1 = cljs.core.next(seq8409);
  var G__8411 = cljs.core.first(seq8409__$1);
  var seq8409__$2 = cljs.core.next(seq8409__$1);
  var G__8412 = cljs.core.first(seq8409__$2);
  var seq8409__$3 = cljs.core.next(seq8409__$2);
  var G__8413 = cljs.core.first(seq8409__$3);
  var seq8409__$4 = cljs.core.next(seq8409__$3);
  var G__8414 = cljs.core.first(seq8409__$4);
  var seq8409__$5 = cljs.core.next(seq8409__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__8410, G__8411, G__8412, G__8413, G__8414, seq8409__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var G__8426 = arguments.length;
  switch(G__8426) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5342__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__8427 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8427) : f.call(null, G__8427);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__8428 = cljs.core.meta(obj);
    var G__8429 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8428, G__8429) : f.call(null, G__8428, G__8429);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__8430 = cljs.core.meta(obj);
    var G__8431 = a;
    var G__8432 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8430, G__8431, G__8432) : f.call(null, G__8430, G__8431, G__8432);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__8433 = cljs.core.meta(obj);
    var G__8434 = a;
    var G__8435 = b;
    var G__8436 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8433, G__8434, G__8435, G__8436) : f.call(null, G__8433, G__8434, G__8435, G__8436);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__8437 = cljs.core.meta(obj);
    var G__8438 = a;
    var G__8439 = b;
    var G__8440 = c;
    var G__8441 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8437, G__8438, G__8439, G__8440, G__8441) : f.call(null, G__8437, G__8438, G__8439, G__8440, G__8441);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq8418) {
  var G__8419 = cljs.core.first(seq8418);
  var seq8418__$1 = cljs.core.next(seq8418);
  var G__8420 = cljs.core.first(seq8418__$1);
  var seq8418__$2 = cljs.core.next(seq8418__$1);
  var G__8421 = cljs.core.first(seq8418__$2);
  var seq8418__$3 = cljs.core.next(seq8418__$2);
  var G__8422 = cljs.core.first(seq8418__$3);
  var seq8418__$4 = cljs.core.next(seq8418__$3);
  var G__8423 = cljs.core.first(seq8418__$4);
  var seq8418__$5 = cljs.core.next(seq8418__$4);
  var G__8424 = cljs.core.first(seq8418__$5);
  var seq8418__$6 = cljs.core.next(seq8418__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__8419, G__8420, G__8421, G__8422, G__8423, G__8424, seq8418__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var G__8447 = arguments.length;
  switch(G__8447) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq8443) {
  var G__8444 = cljs.core.first(seq8443);
  var seq8443__$1 = cljs.core.next(seq8443);
  var G__8445 = cljs.core.first(seq8443__$1);
  var seq8443__$2 = cljs.core.next(seq8443__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__8444, G__8445, seq8443__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t8452 !== "undefined") {
  } else {
    cljs.core.t8452 = function(nil_iter, meta8453) {
      this.nil_iter = nil_iter;
      this.meta8453 = meta8453;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t8452.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t8452.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t8452.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t8452.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8454) {
      var self__ = this;
      var _8454__$1 = this;
      return self__.meta8453;
    };
    cljs.core.t8452.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8454, meta8453__$1) {
      var self__ = this;
      var _8454__$1 = this;
      return new cljs.core.t8452(self__.nil_iter, meta8453__$1);
    };
    cljs.core.t8452.cljs$lang$type = true;
    cljs.core.t8452.cljs$lang$ctorStr = "cljs.core/t8452";
    cljs.core.t8452.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
      return cljs.core._write(writer__4870__auto__, "cljs.core/t8452");
    };
    cljs.core.__GT_t8452 = function cljs$core$nil_iter_$___GT_t8452(nil_iter__$1, meta8453) {
      return new cljs.core.t8452(nil_iter__$1, meta8453);
    };
  }
  return new cljs.core.t8452(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4278__auto__ = !(lt.stepper == null);
      if (and__4278__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4278__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__8455 = lt;
        var G__8456 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__8455, G__8456) : self__.xform.call(null, G__8455, G__8456);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__8457 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8457) : self__.xform.call(null, G__8457);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__8459 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8459) : xform.call(null, G__8459);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__8461 = cljs.core.next(iters__$1);
        iters__$1 = G__8461;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5175__auto___8462 = self__.iters.length;
  var i_8463 = 0;
  while (true) {
    if (i_8463 < n__5175__auto___8462) {
      self__.nexts[i_8463] = self__.iters[i_8463].next();
      var G__8464 = i_8463 + 1;
      i_8463 = G__8464;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4278__auto__ = !(lt.stepper == null);
      if (and__4278__auto__) {
        return this$.hasNext();
      } else {
        return and__4278__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__8460 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__8460) : self__.xform.call(null, G__8460);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var G__8466 = arguments.length;
  switch(G__8466) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(function() {
    var G__8467 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__8467) : xform.call(null, G__8467);
  }(), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__8469_8473 = cljs.core.seq(colls);
  var chunk__8470_8474 = null;
  var count__8471_8475 = 0;
  var i__8472_8476 = 0;
  while (true) {
    if (i__8472_8476 < count__8471_8475) {
      var coll_8477 = chunk__8470_8474.cljs$core$IIndexed$_nth$arity$2(null, i__8472_8476);
      iters.push(cljs.core.iter(coll_8477));
      var G__8478 = seq__8469_8473;
      var G__8479 = chunk__8470_8474;
      var G__8480 = count__8471_8475;
      var G__8481 = i__8472_8476 + 1;
      seq__8469_8473 = G__8478;
      chunk__8470_8474 = G__8479;
      count__8471_8475 = G__8480;
      i__8472_8476 = G__8481;
      continue;
    } else {
      var temp__4126__auto___8482 = cljs.core.seq(seq__8469_8473);
      if (temp__4126__auto___8482) {
        var seq__8469_8483__$1 = temp__4126__auto___8482;
        if (cljs.core.chunked_seq_QMARK_(seq__8469_8483__$1)) {
          var c__5075__auto___8484 = cljs.core.chunk_first(seq__8469_8483__$1);
          var G__8485 = cljs.core.chunk_rest(seq__8469_8483__$1);
          var G__8486 = c__5075__auto___8484;
          var G__8487 = cljs.core.count(c__5075__auto___8484);
          var G__8488 = 0;
          seq__8469_8473 = G__8485;
          chunk__8470_8474 = G__8486;
          count__8471_8475 = G__8487;
          i__8472_8476 = G__8488;
          continue;
        } else {
          var coll_8489 = cljs.core.first(seq__8469_8483__$1);
          iters.push(cljs.core.iter(coll_8489));
          var G__8490 = cljs.core.next(seq__8469_8483__$1);
          var G__8491 = null;
          var G__8492 = 0;
          var G__8493 = 0;
          seq__8469_8473 = G__8490;
          chunk__8470_8474 = G__8491;
          count__8471_8475 = G__8492;
          i__8472_8476 = G__8493;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var G__8498 = arguments.length;
  switch(G__8498) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4290__auto__ = cljs.core.seq(coll);
    if (or__4290__auto__) {
      return or__4290__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq8494) {
  var G__8495 = cljs.core.first(seq8494);
  var seq8494__$1 = cljs.core.next(seq8494);
  var G__8496 = cljs.core.first(seq8494__$1);
  var seq8494__$2 = cljs.core.next(seq8494__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__8495, G__8496, seq8494__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__8501 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8501) : pred.call(null, G__8501);
      }())) {
        var G__8502 = pred;
        var G__8503 = cljs.core.next(coll);
        pred = G__8502;
        coll = G__8503;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4290__auto__ = function() {
        var G__8507 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__8507) : pred.call(null, G__8507);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var G__8508 = pred;
        var G__8509 = cljs.core.next(coll);
        pred = G__8508;
        coll = G__8509;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__8516 = null;
    var G__8516__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__8516__1 = function(x) {
      return cljs.core.not(function() {
        var G__8513 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8513) : f.call(null, G__8513);
      }());
    };
    var G__8516__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__8514 = x;
        var G__8515 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8514, G__8515) : f.call(null, G__8514, G__8515);
      }());
    };
    var G__8516__3 = function() {
      var G__8517__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__8517 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__8518__i = 0, G__8518__a = new Array(arguments.length - 2);
          while (G__8518__i < G__8518__a.length) {
            G__8518__a[G__8518__i] = arguments[G__8518__i + 2];
            ++G__8518__i;
          }
          zs = new cljs.core.IndexedSeq(G__8518__a, 0);
        }
        return G__8517__delegate.call(this, x, y, zs);
      };
      G__8517.cljs$lang$maxFixedArity = 2;
      G__8517.cljs$lang$applyTo = function(arglist__8519) {
        var x = cljs.core.first(arglist__8519);
        arglist__8519 = cljs.core.next(arglist__8519);
        var y = cljs.core.first(arglist__8519);
        var zs = cljs.core.rest(arglist__8519);
        return G__8517__delegate(x, y, zs);
      };
      G__8517.cljs$core$IFn$_invoke$arity$variadic = G__8517__delegate;
      return G__8517;
    }();
    G__8516 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__8516__0.call(this);
        case 1:
          return G__8516__1.call(this, x);
        case 2:
          return G__8516__2.call(this, x, y);
        default:
          var G__8520 = null;
          if (arguments.length > 2) {
            var G__8521__i = 0, G__8521__a = new Array(arguments.length - 2);
            while (G__8521__i < G__8521__a.length) {
              G__8521__a[G__8521__i] = arguments[G__8521__i + 2];
              ++G__8521__i;
            }
            G__8520 = new cljs.core.IndexedSeq(G__8521__a, 0);
          }
          return G__8516__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__8520);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8516.cljs$lang$maxFixedArity = 2;
    G__8516.cljs$lang$applyTo = G__8516__3.cljs$lang$applyTo;
    G__8516.cljs$core$IFn$_invoke$arity$0 = G__8516__0;
    G__8516.cljs$core$IFn$_invoke$arity$1 = G__8516__1;
    G__8516.cljs$core$IFn$_invoke$arity$2 = G__8516__2;
    G__8516.cljs$core$IFn$_invoke$arity$variadic = G__8516__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__8516;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__8522__delegate = function(args) {
      return x;
    };
    var G__8522 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8523__i = 0, G__8523__a = new Array(arguments.length - 0);
        while (G__8523__i < G__8523__a.length) {
          G__8523__a[G__8523__i] = arguments[G__8523__i + 0];
          ++G__8523__i;
        }
        args = new cljs.core.IndexedSeq(G__8523__a, 0);
      }
      return G__8522__delegate.call(this, args);
    };
    G__8522.cljs$lang$maxFixedArity = 0;
    G__8522.cljs$lang$applyTo = function(arglist__8524) {
      var args = cljs.core.seq(arglist__8524);
      return G__8522__delegate(args);
    };
    G__8522.cljs$core$IFn$_invoke$arity$variadic = G__8522__delegate;
    return G__8522;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var G__8530 = arguments.length;
  switch(G__8530) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__8559 = null;
    var G__8559__0 = function() {
      var G__8531 = function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8531) : f.call(null, G__8531);
    };
    var G__8559__1 = function(x) {
      var G__8532 = function() {
        var G__8533 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8533) : g.call(null, G__8533);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8532) : f.call(null, G__8532);
    };
    var G__8559__2 = function(x, y) {
      var G__8534 = function() {
        var G__8535 = x;
        var G__8536 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__8535, G__8536) : g.call(null, G__8535, G__8536);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8534) : f.call(null, G__8534);
    };
    var G__8559__3 = function(x, y, z) {
      var G__8537 = function() {
        var G__8538 = x;
        var G__8539 = y;
        var G__8540 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__8538, G__8539, G__8540) : g.call(null, G__8538, G__8539, G__8540);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8537) : f.call(null, G__8537);
    };
    var G__8559__4 = function() {
      var G__8560__delegate = function(x, y, z, args) {
        var G__8541 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8541) : f.call(null, G__8541);
      };
      var G__8560 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8561__i = 0, G__8561__a = new Array(arguments.length - 3);
          while (G__8561__i < G__8561__a.length) {
            G__8561__a[G__8561__i] = arguments[G__8561__i + 3];
            ++G__8561__i;
          }
          args = new cljs.core.IndexedSeq(G__8561__a, 0);
        }
        return G__8560__delegate.call(this, x, y, z, args);
      };
      G__8560.cljs$lang$maxFixedArity = 3;
      G__8560.cljs$lang$applyTo = function(arglist__8562) {
        var x = cljs.core.first(arglist__8562);
        arglist__8562 = cljs.core.next(arglist__8562);
        var y = cljs.core.first(arglist__8562);
        arglist__8562 = cljs.core.next(arglist__8562);
        var z = cljs.core.first(arglist__8562);
        var args = cljs.core.rest(arglist__8562);
        return G__8560__delegate(x, y, z, args);
      };
      G__8560.cljs$core$IFn$_invoke$arity$variadic = G__8560__delegate;
      return G__8560;
    }();
    G__8559 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8559__0.call(this);
        case 1:
          return G__8559__1.call(this, x);
        case 2:
          return G__8559__2.call(this, x, y);
        case 3:
          return G__8559__3.call(this, x, y, z);
        default:
          var G__8563 = null;
          if (arguments.length > 3) {
            var G__8564__i = 0, G__8564__a = new Array(arguments.length - 3);
            while (G__8564__i < G__8564__a.length) {
              G__8564__a[G__8564__i] = arguments[G__8564__i + 3];
              ++G__8564__i;
            }
            G__8563 = new cljs.core.IndexedSeq(G__8564__a, 0);
          }
          return G__8559__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8563);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8559.cljs$lang$maxFixedArity = 3;
    G__8559.cljs$lang$applyTo = G__8559__4.cljs$lang$applyTo;
    G__8559.cljs$core$IFn$_invoke$arity$0 = G__8559__0;
    G__8559.cljs$core$IFn$_invoke$arity$1 = G__8559__1;
    G__8559.cljs$core$IFn$_invoke$arity$2 = G__8559__2;
    G__8559.cljs$core$IFn$_invoke$arity$3 = G__8559__3;
    G__8559.cljs$core$IFn$_invoke$arity$variadic = G__8559__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8559;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__8565 = null;
    var G__8565__0 = function() {
      var G__8542 = function() {
        var G__8543 = function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8543) : g.call(null, G__8543);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8542) : f.call(null, G__8542);
    };
    var G__8565__1 = function(x) {
      var G__8544 = function() {
        var G__8545 = function() {
          var G__8546 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__8546) : h.call(null, G__8546);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8545) : g.call(null, G__8545);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8544) : f.call(null, G__8544);
    };
    var G__8565__2 = function(x, y) {
      var G__8547 = function() {
        var G__8548 = function() {
          var G__8549 = x;
          var G__8550 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__8549, G__8550) : h.call(null, G__8549, G__8550);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8548) : g.call(null, G__8548);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8547) : f.call(null, G__8547);
    };
    var G__8565__3 = function(x, y, z) {
      var G__8551 = function() {
        var G__8552 = function() {
          var G__8553 = x;
          var G__8554 = y;
          var G__8555 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__8553, G__8554, G__8555) : h.call(null, G__8553, G__8554, G__8555);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8552) : g.call(null, G__8552);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8551) : f.call(null, G__8551);
    };
    var G__8565__4 = function() {
      var G__8566__delegate = function(x, y, z, args) {
        var G__8556 = function() {
          var G__8557 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__8557) : g.call(null, G__8557);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8556) : f.call(null, G__8556);
      };
      var G__8566 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8567__i = 0, G__8567__a = new Array(arguments.length - 3);
          while (G__8567__i < G__8567__a.length) {
            G__8567__a[G__8567__i] = arguments[G__8567__i + 3];
            ++G__8567__i;
          }
          args = new cljs.core.IndexedSeq(G__8567__a, 0);
        }
        return G__8566__delegate.call(this, x, y, z, args);
      };
      G__8566.cljs$lang$maxFixedArity = 3;
      G__8566.cljs$lang$applyTo = function(arglist__8568) {
        var x = cljs.core.first(arglist__8568);
        arglist__8568 = cljs.core.next(arglist__8568);
        var y = cljs.core.first(arglist__8568);
        arglist__8568 = cljs.core.next(arglist__8568);
        var z = cljs.core.first(arglist__8568);
        var args = cljs.core.rest(arglist__8568);
        return G__8566__delegate(x, y, z, args);
      };
      G__8566.cljs$core$IFn$_invoke$arity$variadic = G__8566__delegate;
      return G__8566;
    }();
    G__8565 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8565__0.call(this);
        case 1:
          return G__8565__1.call(this, x);
        case 2:
          return G__8565__2.call(this, x, y);
        case 3:
          return G__8565__3.call(this, x, y, z);
        default:
          var G__8569 = null;
          if (arguments.length > 3) {
            var G__8570__i = 0, G__8570__a = new Array(arguments.length - 3);
            while (G__8570__i < G__8570__a.length) {
              G__8570__a[G__8570__i] = arguments[G__8570__i + 3];
              ++G__8570__i;
            }
            G__8569 = new cljs.core.IndexedSeq(G__8570__a, 0);
          }
          return G__8565__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8569);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8565.cljs$lang$maxFixedArity = 3;
    G__8565.cljs$lang$applyTo = G__8565__4.cljs$lang$applyTo;
    G__8565.cljs$core$IFn$_invoke$arity$0 = G__8565__0;
    G__8565.cljs$core$IFn$_invoke$arity$1 = G__8565__1;
    G__8565.cljs$core$IFn$_invoke$arity$2 = G__8565__2;
    G__8565.cljs$core$IFn$_invoke$arity$3 = G__8565__3;
    G__8565.cljs$core$IFn$_invoke$arity$variadic = G__8565__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8565;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__8571__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__8572 = cljs.core.first(fs__$2).call(null, ret);
            var G__8573 = cljs.core.next(fs__$2);
            ret = G__8572;
            fs__$2 = G__8573;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__8571 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__8574__i = 0, G__8574__a = new Array(arguments.length - 0);
          while (G__8574__i < G__8574__a.length) {
            G__8574__a[G__8574__i] = arguments[G__8574__i + 0];
            ++G__8574__i;
          }
          args = new cljs.core.IndexedSeq(G__8574__a, 0);
        }
        return G__8571__delegate.call(this, args);
      };
      G__8571.cljs$lang$maxFixedArity = 0;
      G__8571.cljs$lang$applyTo = function(arglist__8575) {
        var args = cljs.core.seq(arglist__8575);
        return G__8571__delegate(args);
      };
      G__8571.cljs$core$IFn$_invoke$arity$variadic = G__8571__delegate;
      return G__8571;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq8525) {
  var G__8526 = cljs.core.first(seq8525);
  var seq8525__$1 = cljs.core.next(seq8525);
  var G__8527 = cljs.core.first(seq8525__$1);
  var seq8525__$2 = cljs.core.next(seq8525__$1);
  var G__8528 = cljs.core.first(seq8525__$2);
  var seq8525__$3 = cljs.core.next(seq8525__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__8526, G__8527, G__8528, seq8525__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var G__8582 = arguments.length;
  switch(G__8582) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5342__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__8626 = null;
    var G__8626__0 = function() {
      var G__8583 = arg1;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8583) : f.call(null, G__8583);
    };
    var G__8626__1 = function(x) {
      var G__8584 = arg1;
      var G__8585 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8584, G__8585) : f.call(null, G__8584, G__8585);
    };
    var G__8626__2 = function(x, y) {
      var G__8586 = arg1;
      var G__8587 = x;
      var G__8588 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8586, G__8587, G__8588) : f.call(null, G__8586, G__8587, G__8588);
    };
    var G__8626__3 = function(x, y, z) {
      var G__8589 = arg1;
      var G__8590 = x;
      var G__8591 = y;
      var G__8592 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8589, G__8590, G__8591, G__8592) : f.call(null, G__8589, G__8590, G__8591, G__8592);
    };
    var G__8626__4 = function() {
      var G__8627__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__8627 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8628__i = 0, G__8628__a = new Array(arguments.length - 3);
          while (G__8628__i < G__8628__a.length) {
            G__8628__a[G__8628__i] = arguments[G__8628__i + 3];
            ++G__8628__i;
          }
          args = new cljs.core.IndexedSeq(G__8628__a, 0);
        }
        return G__8627__delegate.call(this, x, y, z, args);
      };
      G__8627.cljs$lang$maxFixedArity = 3;
      G__8627.cljs$lang$applyTo = function(arglist__8629) {
        var x = cljs.core.first(arglist__8629);
        arglist__8629 = cljs.core.next(arglist__8629);
        var y = cljs.core.first(arglist__8629);
        arglist__8629 = cljs.core.next(arglist__8629);
        var z = cljs.core.first(arglist__8629);
        var args = cljs.core.rest(arglist__8629);
        return G__8627__delegate(x, y, z, args);
      };
      G__8627.cljs$core$IFn$_invoke$arity$variadic = G__8627__delegate;
      return G__8627;
    }();
    G__8626 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8626__0.call(this);
        case 1:
          return G__8626__1.call(this, x);
        case 2:
          return G__8626__2.call(this, x, y);
        case 3:
          return G__8626__3.call(this, x, y, z);
        default:
          var G__8630 = null;
          if (arguments.length > 3) {
            var G__8631__i = 0, G__8631__a = new Array(arguments.length - 3);
            while (G__8631__i < G__8631__a.length) {
              G__8631__a[G__8631__i] = arguments[G__8631__i + 3];
              ++G__8631__i;
            }
            G__8630 = new cljs.core.IndexedSeq(G__8631__a, 0);
          }
          return G__8626__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8630);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8626.cljs$lang$maxFixedArity = 3;
    G__8626.cljs$lang$applyTo = G__8626__4.cljs$lang$applyTo;
    G__8626.cljs$core$IFn$_invoke$arity$0 = G__8626__0;
    G__8626.cljs$core$IFn$_invoke$arity$1 = G__8626__1;
    G__8626.cljs$core$IFn$_invoke$arity$2 = G__8626__2;
    G__8626.cljs$core$IFn$_invoke$arity$3 = G__8626__3;
    G__8626.cljs$core$IFn$_invoke$arity$variadic = G__8626__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8626;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__8632 = null;
    var G__8632__0 = function() {
      var G__8593 = arg1;
      var G__8594 = arg2;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8593, G__8594) : f.call(null, G__8593, G__8594);
    };
    var G__8632__1 = function(x) {
      var G__8595 = arg1;
      var G__8596 = arg2;
      var G__8597 = x;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8595, G__8596, G__8597) : f.call(null, G__8595, G__8596, G__8597);
    };
    var G__8632__2 = function(x, y) {
      var G__8598 = arg1;
      var G__8599 = arg2;
      var G__8600 = x;
      var G__8601 = y;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8598, G__8599, G__8600, G__8601) : f.call(null, G__8598, G__8599, G__8600, G__8601);
    };
    var G__8632__3 = function(x, y, z) {
      var G__8602 = arg1;
      var G__8603 = arg2;
      var G__8604 = x;
      var G__8605 = y;
      var G__8606 = z;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8602, G__8603, G__8604, G__8605, G__8606) : f.call(null, G__8602, G__8603, G__8604, G__8605, G__8606);
    };
    var G__8632__4 = function() {
      var G__8633__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__8633 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8634__i = 0, G__8634__a = new Array(arguments.length - 3);
          while (G__8634__i < G__8634__a.length) {
            G__8634__a[G__8634__i] = arguments[G__8634__i + 3];
            ++G__8634__i;
          }
          args = new cljs.core.IndexedSeq(G__8634__a, 0);
        }
        return G__8633__delegate.call(this, x, y, z, args);
      };
      G__8633.cljs$lang$maxFixedArity = 3;
      G__8633.cljs$lang$applyTo = function(arglist__8635) {
        var x = cljs.core.first(arglist__8635);
        arglist__8635 = cljs.core.next(arglist__8635);
        var y = cljs.core.first(arglist__8635);
        arglist__8635 = cljs.core.next(arglist__8635);
        var z = cljs.core.first(arglist__8635);
        var args = cljs.core.rest(arglist__8635);
        return G__8633__delegate(x, y, z, args);
      };
      G__8633.cljs$core$IFn$_invoke$arity$variadic = G__8633__delegate;
      return G__8633;
    }();
    G__8632 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8632__0.call(this);
        case 1:
          return G__8632__1.call(this, x);
        case 2:
          return G__8632__2.call(this, x, y);
        case 3:
          return G__8632__3.call(this, x, y, z);
        default:
          var G__8636 = null;
          if (arguments.length > 3) {
            var G__8637__i = 0, G__8637__a = new Array(arguments.length - 3);
            while (G__8637__i < G__8637__a.length) {
              G__8637__a[G__8637__i] = arguments[G__8637__i + 3];
              ++G__8637__i;
            }
            G__8636 = new cljs.core.IndexedSeq(G__8637__a, 0);
          }
          return G__8632__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8636);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8632.cljs$lang$maxFixedArity = 3;
    G__8632.cljs$lang$applyTo = G__8632__4.cljs$lang$applyTo;
    G__8632.cljs$core$IFn$_invoke$arity$0 = G__8632__0;
    G__8632.cljs$core$IFn$_invoke$arity$1 = G__8632__1;
    G__8632.cljs$core$IFn$_invoke$arity$2 = G__8632__2;
    G__8632.cljs$core$IFn$_invoke$arity$3 = G__8632__3;
    G__8632.cljs$core$IFn$_invoke$arity$variadic = G__8632__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8632;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__8638 = null;
    var G__8638__0 = function() {
      var G__8607 = arg1;
      var G__8608 = arg2;
      var G__8609 = arg3;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8607, G__8608, G__8609) : f.call(null, G__8607, G__8608, G__8609);
    };
    var G__8638__1 = function(x) {
      var G__8610 = arg1;
      var G__8611 = arg2;
      var G__8612 = arg3;
      var G__8613 = x;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8610, G__8611, G__8612, G__8613) : f.call(null, G__8610, G__8611, G__8612, G__8613);
    };
    var G__8638__2 = function(x, y) {
      var G__8614 = arg1;
      var G__8615 = arg2;
      var G__8616 = arg3;
      var G__8617 = x;
      var G__8618 = y;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__8614, G__8615, G__8616, G__8617, G__8618) : f.call(null, G__8614, G__8615, G__8616, G__8617, G__8618);
    };
    var G__8638__3 = function(x, y, z) {
      var G__8619 = arg1;
      var G__8620 = arg2;
      var G__8621 = arg3;
      var G__8622 = x;
      var G__8623 = y;
      var G__8624 = z;
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__8619, G__8620, G__8621, G__8622, G__8623, G__8624) : f.call(null, G__8619, G__8620, G__8621, G__8622, G__8623, G__8624);
    };
    var G__8638__4 = function() {
      var G__8639__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__8639 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__8640__i = 0, G__8640__a = new Array(arguments.length - 3);
          while (G__8640__i < G__8640__a.length) {
            G__8640__a[G__8640__i] = arguments[G__8640__i + 3];
            ++G__8640__i;
          }
          args = new cljs.core.IndexedSeq(G__8640__a, 0);
        }
        return G__8639__delegate.call(this, x, y, z, args);
      };
      G__8639.cljs$lang$maxFixedArity = 3;
      G__8639.cljs$lang$applyTo = function(arglist__8641) {
        var x = cljs.core.first(arglist__8641);
        arglist__8641 = cljs.core.next(arglist__8641);
        var y = cljs.core.first(arglist__8641);
        arglist__8641 = cljs.core.next(arglist__8641);
        var z = cljs.core.first(arglist__8641);
        var args = cljs.core.rest(arglist__8641);
        return G__8639__delegate(x, y, z, args);
      };
      G__8639.cljs$core$IFn$_invoke$arity$variadic = G__8639__delegate;
      return G__8639;
    }();
    G__8638 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__8638__0.call(this);
        case 1:
          return G__8638__1.call(this, x);
        case 2:
          return G__8638__2.call(this, x, y);
        case 3:
          return G__8638__3.call(this, x, y, z);
        default:
          var G__8642 = null;
          if (arguments.length > 3) {
            var G__8643__i = 0, G__8643__a = new Array(arguments.length - 3);
            while (G__8643__i < G__8643__a.length) {
              G__8643__a[G__8643__i] = arguments[G__8643__i + 3];
              ++G__8643__i;
            }
            G__8642 = new cljs.core.IndexedSeq(G__8643__a, 0);
          }
          return G__8638__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__8642);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8638.cljs$lang$maxFixedArity = 3;
    G__8638.cljs$lang$applyTo = G__8638__4.cljs$lang$applyTo;
    G__8638.cljs$core$IFn$_invoke$arity$0 = G__8638__0;
    G__8638.cljs$core$IFn$_invoke$arity$1 = G__8638__1;
    G__8638.cljs$core$IFn$_invoke$arity$2 = G__8638__2;
    G__8638.cljs$core$IFn$_invoke$arity$3 = G__8638__3;
    G__8638.cljs$core$IFn$_invoke$arity$variadic = G__8638__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8638;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__8644__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__8644 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8645__i = 0, G__8645__a = new Array(arguments.length - 0);
        while (G__8645__i < G__8645__a.length) {
          G__8645__a[G__8645__i] = arguments[G__8645__i + 0];
          ++G__8645__i;
        }
        args = new cljs.core.IndexedSeq(G__8645__a, 0);
      }
      return G__8644__delegate.call(this, args);
    };
    G__8644.cljs$lang$maxFixedArity = 0;
    G__8644.cljs$lang$applyTo = function(arglist__8646) {
      var args = cljs.core.seq(arglist__8646);
      return G__8644__delegate(args);
    };
    G__8644.cljs$core$IFn$_invoke$arity$variadic = G__8644__delegate;
    return G__8644;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq8576) {
  var G__8577 = cljs.core.first(seq8576);
  var seq8576__$1 = cljs.core.next(seq8576);
  var G__8578 = cljs.core.first(seq8576__$1);
  var seq8576__$2 = cljs.core.next(seq8576__$1);
  var G__8579 = cljs.core.first(seq8576__$2);
  var seq8576__$3 = cljs.core.next(seq8576__$2);
  var G__8580 = cljs.core.first(seq8576__$3);
  var seq8576__$4 = cljs.core.next(seq8576__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__8577, G__8578, G__8579, G__8580, seq8576__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var G__8648 = arguments.length;
  switch(G__8648) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__8666 = null;
    var G__8666__1 = function(a) {
      var G__8649 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8649) : f.call(null, G__8649);
    };
    var G__8666__2 = function(a, b) {
      var G__8650 = a == null ? x : a;
      var G__8651 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8650, G__8651) : f.call(null, G__8650, G__8651);
    };
    var G__8666__3 = function(a, b, c) {
      var G__8652 = a == null ? x : a;
      var G__8653 = b;
      var G__8654 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8652, G__8653, G__8654) : f.call(null, G__8652, G__8653, G__8654);
    };
    var G__8666__4 = function() {
      var G__8667__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__8667 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__8668__i = 0, G__8668__a = new Array(arguments.length - 3);
          while (G__8668__i < G__8668__a.length) {
            G__8668__a[G__8668__i] = arguments[G__8668__i + 3];
            ++G__8668__i;
          }
          ds = new cljs.core.IndexedSeq(G__8668__a, 0);
        }
        return G__8667__delegate.call(this, a, b, c, ds);
      };
      G__8667.cljs$lang$maxFixedArity = 3;
      G__8667.cljs$lang$applyTo = function(arglist__8669) {
        var a = cljs.core.first(arglist__8669);
        arglist__8669 = cljs.core.next(arglist__8669);
        var b = cljs.core.first(arglist__8669);
        arglist__8669 = cljs.core.next(arglist__8669);
        var c = cljs.core.first(arglist__8669);
        var ds = cljs.core.rest(arglist__8669);
        return G__8667__delegate(a, b, c, ds);
      };
      G__8667.cljs$core$IFn$_invoke$arity$variadic = G__8667__delegate;
      return G__8667;
    }();
    G__8666 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__8666__1.call(this, a);
        case 2:
          return G__8666__2.call(this, a, b);
        case 3:
          return G__8666__3.call(this, a, b, c);
        default:
          var G__8670 = null;
          if (arguments.length > 3) {
            var G__8671__i = 0, G__8671__a = new Array(arguments.length - 3);
            while (G__8671__i < G__8671__a.length) {
              G__8671__a[G__8671__i] = arguments[G__8671__i + 3];
              ++G__8671__i;
            }
            G__8670 = new cljs.core.IndexedSeq(G__8671__a, 0);
          }
          return G__8666__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__8670);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8666.cljs$lang$maxFixedArity = 3;
    G__8666.cljs$lang$applyTo = G__8666__4.cljs$lang$applyTo;
    G__8666.cljs$core$IFn$_invoke$arity$1 = G__8666__1;
    G__8666.cljs$core$IFn$_invoke$arity$2 = G__8666__2;
    G__8666.cljs$core$IFn$_invoke$arity$3 = G__8666__3;
    G__8666.cljs$core$IFn$_invoke$arity$variadic = G__8666__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8666;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__8672 = null;
    var G__8672__2 = function(a, b) {
      var G__8655 = a == null ? x : a;
      var G__8656 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8655, G__8656) : f.call(null, G__8655, G__8656);
    };
    var G__8672__3 = function(a, b, c) {
      var G__8657 = a == null ? x : a;
      var G__8658 = b == null ? y : b;
      var G__8659 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8657, G__8658, G__8659) : f.call(null, G__8657, G__8658, G__8659);
    };
    var G__8672__4 = function() {
      var G__8673__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__8673 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__8674__i = 0, G__8674__a = new Array(arguments.length - 3);
          while (G__8674__i < G__8674__a.length) {
            G__8674__a[G__8674__i] = arguments[G__8674__i + 3];
            ++G__8674__i;
          }
          ds = new cljs.core.IndexedSeq(G__8674__a, 0);
        }
        return G__8673__delegate.call(this, a, b, c, ds);
      };
      G__8673.cljs$lang$maxFixedArity = 3;
      G__8673.cljs$lang$applyTo = function(arglist__8675) {
        var a = cljs.core.first(arglist__8675);
        arglist__8675 = cljs.core.next(arglist__8675);
        var b = cljs.core.first(arglist__8675);
        arglist__8675 = cljs.core.next(arglist__8675);
        var c = cljs.core.first(arglist__8675);
        var ds = cljs.core.rest(arglist__8675);
        return G__8673__delegate(a, b, c, ds);
      };
      G__8673.cljs$core$IFn$_invoke$arity$variadic = G__8673__delegate;
      return G__8673;
    }();
    G__8672 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__8672__2.call(this, a, b);
        case 3:
          return G__8672__3.call(this, a, b, c);
        default:
          var G__8676 = null;
          if (arguments.length > 3) {
            var G__8677__i = 0, G__8677__a = new Array(arguments.length - 3);
            while (G__8677__i < G__8677__a.length) {
              G__8677__a[G__8677__i] = arguments[G__8677__i + 3];
              ++G__8677__i;
            }
            G__8676 = new cljs.core.IndexedSeq(G__8677__a, 0);
          }
          return G__8672__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__8676);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8672.cljs$lang$maxFixedArity = 3;
    G__8672.cljs$lang$applyTo = G__8672__4.cljs$lang$applyTo;
    G__8672.cljs$core$IFn$_invoke$arity$2 = G__8672__2;
    G__8672.cljs$core$IFn$_invoke$arity$3 = G__8672__3;
    G__8672.cljs$core$IFn$_invoke$arity$variadic = G__8672__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8672;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__8678 = null;
    var G__8678__2 = function(a, b) {
      var G__8660 = a == null ? x : a;
      var G__8661 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8660, G__8661) : f.call(null, G__8660, G__8661);
    };
    var G__8678__3 = function(a, b, c) {
      var G__8662 = a == null ? x : a;
      var G__8663 = b == null ? y : b;
      var G__8664 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8662, G__8663, G__8664) : f.call(null, G__8662, G__8663, G__8664);
    };
    var G__8678__4 = function() {
      var G__8679__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__8679 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__8680__i = 0, G__8680__a = new Array(arguments.length - 3);
          while (G__8680__i < G__8680__a.length) {
            G__8680__a[G__8680__i] = arguments[G__8680__i + 3];
            ++G__8680__i;
          }
          ds = new cljs.core.IndexedSeq(G__8680__a, 0);
        }
        return G__8679__delegate.call(this, a, b, c, ds);
      };
      G__8679.cljs$lang$maxFixedArity = 3;
      G__8679.cljs$lang$applyTo = function(arglist__8681) {
        var a = cljs.core.first(arglist__8681);
        arglist__8681 = cljs.core.next(arglist__8681);
        var b = cljs.core.first(arglist__8681);
        arglist__8681 = cljs.core.next(arglist__8681);
        var c = cljs.core.first(arglist__8681);
        var ds = cljs.core.rest(arglist__8681);
        return G__8679__delegate(a, b, c, ds);
      };
      G__8679.cljs$core$IFn$_invoke$arity$variadic = G__8679__delegate;
      return G__8679;
    }();
    G__8678 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__8678__2.call(this, a, b);
        case 3:
          return G__8678__3.call(this, a, b, c);
        default:
          var G__8682 = null;
          if (arguments.length > 3) {
            var G__8683__i = 0, G__8683__a = new Array(arguments.length - 3);
            while (G__8683__i < G__8683__a.length) {
              G__8683__a[G__8683__i] = arguments[G__8683__i + 3];
              ++G__8683__i;
            }
            G__8682 = new cljs.core.IndexedSeq(G__8683__a, 0);
          }
          return G__8678__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__8682);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__8678.cljs$lang$maxFixedArity = 3;
    G__8678.cljs$lang$applyTo = G__8678__4.cljs$lang$applyTo;
    G__8678.cljs$core$IFn$_invoke$arity$2 = G__8678__2;
    G__8678.cljs$core$IFn$_invoke$arity$3 = G__8678__3;
    G__8678.cljs$core$IFn$_invoke$arity$variadic = G__8678__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__8678;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var G__8685 = arguments.length;
  switch(G__8685) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = function() {
      var G__8686 = -1;
      return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__8686) : cljs.core.volatile_BANG_.call(null, G__8686);
    }();
    return function(i) {
      return function() {
        var G__8717 = null;
        var G__8717__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8717__1 = function(result) {
          var G__8687 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8687) : rf.call(null, G__8687);
        };
        var G__8717__2 = function(result, input) {
          var G__8688 = result;
          var G__8689 = function() {
            var G__8690 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__8691 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8690, G__8691) : f.call(null, G__8690, G__8691);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8688, G__8689) : rf.call(null, G__8688, G__8689);
        };
        G__8717 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8717__0.call(this);
            case 1:
              return G__8717__1.call(this, result);
            case 2:
              return G__8717__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8717.cljs$core$IFn$_invoke$arity$0 = G__8717__0;
        G__8717.cljs$core$IFn$_invoke$arity$1 = G__8717__1;
        G__8717.cljs$core$IFn$_invoke$arity$2 = G__8717__2;
        return G__8717;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5175__auto___8718 = size;
          var i_8719 = 0;
          while (true) {
            if (i_8719 < n__5175__auto___8718) {
              cljs.core.chunk_append(b, function() {
                var G__8712 = idx + i_8719;
                var G__8713 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8719);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8712, G__8713) : f.call(null, G__8712, G__8713);
              }());
              var G__8720 = i_8719 + 1;
              i_8719 = G__8720;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__8714 = idx;
            var G__8715 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8714, G__8715) : f.call(null, G__8714, G__8715);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var G__8722 = arguments.length;
  switch(G__8722) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__8730 = null;
      var G__8730__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__8730__1 = function(result) {
        var G__8723 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8723) : rf.call(null, G__8723);
      };
      var G__8730__2 = function(result, input) {
        var v = function() {
          var G__8724 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8724) : f.call(null, G__8724);
        }();
        if (v == null) {
          return result;
        } else {
          var G__8725 = result;
          var G__8726 = v;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8725, G__8726) : rf.call(null, G__8725, G__8726);
        }
      };
      G__8730 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__8730__0.call(this);
          case 1:
            return G__8730__1.call(this, result);
          case 2:
            return G__8730__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__8730.cljs$core$IFn$_invoke$arity$0 = G__8730__0;
      G__8730.cljs$core$IFn$_invoke$arity$1 = G__8730__1;
      G__8730.cljs$core$IFn$_invoke$arity$2 = G__8730__2;
      return G__8730;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5175__auto___8731 = size;
        var i_8732 = 0;
        while (true) {
          if (i_8732 < n__5175__auto___8731) {
            var x_8733 = function() {
              var G__8727 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8732);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8727) : f.call(null, G__8727);
            }();
            if (x_8733 == null) {
            } else {
              cljs.core.chunk_append(b, x_8733);
            }
            var G__8734 = i_8732 + 1;
            i_8732 = G__8734;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__8728 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8728) : f.call(null, G__8728);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__8735 = this$__$1;
  return goog.getUid(G__8735);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__8736 = cljs.core.seq(self__.watches);
  var chunk__8737 = null;
  var count__8738 = 0;
  var i__8739 = 0;
  while (true) {
    if (i__8739 < count__8738) {
      var vec__8740 = chunk__8737.cljs$core$IIndexed$_nth$arity$2(null, i__8739);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8740, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8740, 1, null);
      var G__8741_8750 = key;
      var G__8742_8751 = this$__$1;
      var G__8743_8752 = oldval;
      var G__8744_8753 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8741_8750, G__8742_8751, G__8743_8752, G__8744_8753) : f.call(null, G__8741_8750, G__8742_8751, G__8743_8752, G__8744_8753);
      var G__8754 = seq__8736;
      var G__8755 = chunk__8737;
      var G__8756 = count__8738;
      var G__8757 = i__8739 + 1;
      seq__8736 = G__8754;
      chunk__8737 = G__8755;
      count__8738 = G__8756;
      i__8739 = G__8757;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__8736);
      if (temp__4126__auto__) {
        var seq__8736__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__8736__$1)) {
          var c__5075__auto__ = cljs.core.chunk_first(seq__8736__$1);
          var G__8758 = cljs.core.chunk_rest(seq__8736__$1);
          var G__8759 = c__5075__auto__;
          var G__8760 = cljs.core.count(c__5075__auto__);
          var G__8761 = 0;
          seq__8736 = G__8758;
          chunk__8737 = G__8759;
          count__8738 = G__8760;
          i__8739 = G__8761;
          continue;
        } else {
          var vec__8745 = cljs.core.first(seq__8736__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8745, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__8745, 1, null);
          var G__8746_8762 = key;
          var G__8747_8763 = this$__$1;
          var G__8748_8764 = oldval;
          var G__8749_8765 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__8746_8762, G__8747_8763, G__8748_8764, G__8749_8765) : f.call(null, G__8746_8762, G__8747_8763, G__8748_8764, G__8749_8765);
          var G__8766 = cljs.core.next(seq__8736__$1);
          var G__8767 = null;
          var G__8768 = 0;
          var G__8769 = 0;
          seq__8736 = G__8766;
          chunk__8737 = G__8767;
          count__8738 = G__8768;
          i__8739 = G__8769;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var G__8773 = arguments.length;
  switch(G__8773) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5342__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__8774) {
  var map__8775 = p__8774;
  var map__8775__$1 = cljs.core.seq_QMARK_(map__8775) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__8775) : map__8775;
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8775__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__8775__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq8770) {
  var G__8771 = cljs.core.first(seq8770);
  var seq8770__$1 = cljs.core.next(seq8770);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__8771, seq8770__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__8779 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__8779) : validate.call(null, G__8779);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__8780 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__8780) : cljs.core.pr_str.call(null, G__8780);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var G__8787 = arguments.length;
  switch(G__8787) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5342__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__8788 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__8788) : f.call(null, G__8788);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__8789 = a.state;
      var G__8790 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8789, G__8790) : f.call(null, G__8789, G__8790);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__8791 = a.state;
      var G__8792 = x;
      var G__8793 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__8791, G__8792, G__8793) : f.call(null, G__8791, G__8792, G__8793);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq8781) {
  var G__8782 = cljs.core.first(seq8781);
  var seq8781__$1 = cljs.core.next(seq8781);
  var G__8783 = cljs.core.first(seq8781__$1);
  var seq8781__$2 = cljs.core.next(seq8781__$1);
  var G__8784 = cljs.core.first(seq8781__$2);
  var seq8781__$3 = cljs.core.next(seq8781__$2);
  var G__8785 = cljs.core.first(seq8781__$3);
  var seq8781__$4 = cljs.core.next(seq8781__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__8782, G__8783, G__8784, G__8785, seq8781__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var G__8796 = arguments.length;
  switch(G__8796) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__8831 = null;
        var G__8831__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__8831__1 = function(result) {
          var G__8797 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__8797) : rf.call(null, G__8797);
        };
        var G__8831__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = function() {
            var G__8798 = i;
            var G__8799 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8798, G__8799) : f.call(null, G__8798, G__8799);
          }();
          if (v == null) {
            return result;
          } else {
            var G__8800 = result;
            var G__8801 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__8800, G__8801) : rf.call(null, G__8800, G__8801);
          }
        };
        G__8831 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__8831__0.call(this);
            case 1:
              return G__8831__1.call(this, result);
            case 2:
              return G__8831__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__8831.cljs$core$IFn$_invoke$arity$0 = G__8831__0;
        G__8831.cljs$core$IFn$_invoke$arity$1 = G__8831__1;
        G__8831.cljs$core$IFn$_invoke$arity$2 = G__8831__2;
        return G__8831;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5175__auto___8832 = size;
          var i_8833 = 0;
          while (true) {
            if (i_8833 < n__5175__auto___8832) {
              var x_8834 = function() {
                var G__8826 = idx + i_8833;
                var G__8827 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_8833);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8826, G__8827) : f.call(null, G__8826, G__8827);
              }();
              if (x_8834 == null) {
              } else {
                cljs.core.chunk_append(b, x_8834);
              }
              var G__8835 = i_8833 + 1;
              i_8833 = G__8835;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__8828 = idx;
            var G__8829 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__8828, G__8829) : f.call(null, G__8828, G__8829);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var G__8847 = arguments.length;
  switch(G__8847) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(function() {
        var G__8863 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8863) : p.call(null, G__8863);
      }());
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4278__auto__ = function() {
          var G__8865 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8865) : p.call(null, G__8865);
        }();
        if (cljs.core.truth_(and__4278__auto__)) {
          var G__8866 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8866) : p.call(null, G__8866);
        } else {
          return and__4278__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4278__auto__ = function() {
          var G__8868 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8868) : p.call(null, G__8868);
        }();
        if (cljs.core.truth_(and__4278__auto__)) {
          var and__4278__auto____$1 = function() {
            var G__8870 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8870) : p.call(null, G__8870);
          }();
          if (cljs.core.truth_(and__4278__auto____$1)) {
            var G__8871 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__8871) : p.call(null, G__8871);
          } else {
            return and__4278__auto____$1;
          }
        } else {
          return and__4278__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__9033__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4278__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4278__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4278__auto__;
          }
        }());
      };
      var G__9033 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9034__i = 0, G__9034__a = new Array(arguments.length - 3);
          while (G__9034__i < G__9034__a.length) {
            G__9034__a[G__9034__i] = arguments[G__9034__i + 3];
            ++G__9034__i;
          }
          args = new cljs.core.IndexedSeq(G__9034__a, 0);
        }
        return G__9033__delegate.call(this, x, y, z, args);
      };
      G__9033.cljs$lang$maxFixedArity = 3;
      G__9033.cljs$lang$applyTo = function(arglist__9035) {
        var x = cljs.core.first(arglist__9035);
        arglist__9035 = cljs.core.next(arglist__9035);
        var y = cljs.core.first(arglist__9035);
        arglist__9035 = cljs.core.next(arglist__9035);
        var z = cljs.core.first(arglist__9035);
        var args = cljs.core.rest(arglist__9035);
        return G__9033__delegate(x, y, z, args);
      };
      G__9033.cljs$core$IFn$_invoke$arity$variadic = G__9033__delegate;
      return G__9033;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__9036 = null;
          if (arguments.length > 3) {
            var G__9037__i = 0, G__9037__a = new Array(arguments.length - 3);
            while (G__9037__i < G__9037__a.length) {
              G__9037__a[G__9037__i] = arguments[G__9037__i + 3];
              ++G__9037__i;
            }
            G__9036 = new cljs.core.IndexedSeq(G__9037__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9036);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4278__auto__ = function() {
          var G__8903 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8903) : p1.call(null, G__8903);
        }();
        if (cljs.core.truth_(and__4278__auto__)) {
          var G__8904 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8904) : p2.call(null, G__8904);
        } else {
          return and__4278__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4278__auto__ = function() {
          var G__8906 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8906) : p1.call(null, G__8906);
        }();
        if (cljs.core.truth_(and__4278__auto__)) {
          var and__4278__auto____$1 = function() {
            var G__8908 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8908) : p1.call(null, G__8908);
          }();
          if (cljs.core.truth_(and__4278__auto____$1)) {
            var and__4278__auto____$2 = function() {
              var G__8910 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8910) : p2.call(null, G__8910);
            }();
            if (cljs.core.truth_(and__4278__auto____$2)) {
              var G__8911 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8911) : p2.call(null, G__8911);
            } else {
              return and__4278__auto____$2;
            }
          } else {
            return and__4278__auto____$1;
          }
        } else {
          return and__4278__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4278__auto__ = function() {
          var G__8913 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8913) : p1.call(null, G__8913);
        }();
        if (cljs.core.truth_(and__4278__auto__)) {
          var and__4278__auto____$1 = function() {
            var G__8915 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8915) : p1.call(null, G__8915);
          }();
          if (cljs.core.truth_(and__4278__auto____$1)) {
            var and__4278__auto____$2 = function() {
              var G__8917 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8917) : p1.call(null, G__8917);
            }();
            if (cljs.core.truth_(and__4278__auto____$2)) {
              var and__4278__auto____$3 = function() {
                var G__8919 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8919) : p2.call(null, G__8919);
              }();
              if (cljs.core.truth_(and__4278__auto____$3)) {
                var and__4278__auto____$4 = function() {
                  var G__8921 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8921) : p2.call(null, G__8921);
                }();
                if (cljs.core.truth_(and__4278__auto____$4)) {
                  var G__8922 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8922) : p2.call(null, G__8922);
                } else {
                  return and__4278__auto____$4;
                }
              } else {
                return and__4278__auto____$3;
              }
            } else {
              return and__4278__auto____$2;
            }
          } else {
            return and__4278__auto____$1;
          }
        } else {
          return and__4278__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__9038__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4278__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4278__auto__)) {
            return cljs.core.every_QMARK_(function(and__4278__auto__) {
              return function(p1__8836_SHARP_) {
                var and__4278__auto____$1 = function() {
                  var G__8924 = p1__8836_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8924) : p1.call(null, G__8924);
                }();
                if (cljs.core.truth_(and__4278__auto____$1)) {
                  var G__8925 = p1__8836_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8925) : p2.call(null, G__8925);
                } else {
                  return and__4278__auto____$1;
                }
              };
            }(and__4278__auto__), args);
          } else {
            return and__4278__auto__;
          }
        }());
      };
      var G__9038 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9039__i = 0, G__9039__a = new Array(arguments.length - 3);
          while (G__9039__i < G__9039__a.length) {
            G__9039__a[G__9039__i] = arguments[G__9039__i + 3];
            ++G__9039__i;
          }
          args = new cljs.core.IndexedSeq(G__9039__a, 0);
        }
        return G__9038__delegate.call(this, x, y, z, args);
      };
      G__9038.cljs$lang$maxFixedArity = 3;
      G__9038.cljs$lang$applyTo = function(arglist__9040) {
        var x = cljs.core.first(arglist__9040);
        arglist__9040 = cljs.core.next(arglist__9040);
        var y = cljs.core.first(arglist__9040);
        arglist__9040 = cljs.core.next(arglist__9040);
        var z = cljs.core.first(arglist__9040);
        var args = cljs.core.rest(arglist__9040);
        return G__9038__delegate(x, y, z, args);
      };
      G__9038.cljs$core$IFn$_invoke$arity$variadic = G__9038__delegate;
      return G__9038;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__9041 = null;
          if (arguments.length > 3) {
            var G__9042__i = 0, G__9042__a = new Array(arguments.length - 3);
            while (G__9042__i < G__9042__a.length) {
              G__9042__a[G__9042__i] = arguments[G__9042__i + 3];
              ++G__9042__i;
            }
            G__9041 = new cljs.core.IndexedSeq(G__9042__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9041);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4278__auto__ = function() {
          var G__8971 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8971) : p1.call(null, G__8971);
        }();
        if (cljs.core.truth_(and__4278__auto__)) {
          var and__4278__auto____$1 = function() {
            var G__8973 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8973) : p2.call(null, G__8973);
          }();
          if (cljs.core.truth_(and__4278__auto____$1)) {
            var G__8974 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8974) : p3.call(null, G__8974);
          } else {
            return and__4278__auto____$1;
          }
        } else {
          return and__4278__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4278__auto__ = function() {
          var G__8976 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8976) : p1.call(null, G__8976);
        }();
        if (cljs.core.truth_(and__4278__auto__)) {
          var and__4278__auto____$1 = function() {
            var G__8978 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8978) : p2.call(null, G__8978);
          }();
          if (cljs.core.truth_(and__4278__auto____$1)) {
            var and__4278__auto____$2 = function() {
              var G__8980 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8980) : p3.call(null, G__8980);
            }();
            if (cljs.core.truth_(and__4278__auto____$2)) {
              var and__4278__auto____$3 = function() {
                var G__8982 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8982) : p1.call(null, G__8982);
              }();
              if (cljs.core.truth_(and__4278__auto____$3)) {
                var and__4278__auto____$4 = function() {
                  var G__8984 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8984) : p2.call(null, G__8984);
                }();
                if (cljs.core.truth_(and__4278__auto____$4)) {
                  var G__8985 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8985) : p3.call(null, G__8985);
                } else {
                  return and__4278__auto____$4;
                }
              } else {
                return and__4278__auto____$3;
              }
            } else {
              return and__4278__auto____$2;
            }
          } else {
            return and__4278__auto____$1;
          }
        } else {
          return and__4278__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4278__auto__ = function() {
          var G__8987 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8987) : p1.call(null, G__8987);
        }();
        if (cljs.core.truth_(and__4278__auto__)) {
          var and__4278__auto____$1 = function() {
            var G__8989 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8989) : p2.call(null, G__8989);
          }();
          if (cljs.core.truth_(and__4278__auto____$1)) {
            var and__4278__auto____$2 = function() {
              var G__8991 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8991) : p3.call(null, G__8991);
            }();
            if (cljs.core.truth_(and__4278__auto____$2)) {
              var and__4278__auto____$3 = function() {
                var G__8993 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8993) : p1.call(null, G__8993);
              }();
              if (cljs.core.truth_(and__4278__auto____$3)) {
                var and__4278__auto____$4 = function() {
                  var G__8995 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__8995) : p2.call(null, G__8995);
                }();
                if (cljs.core.truth_(and__4278__auto____$4)) {
                  var and__4278__auto____$5 = function() {
                    var G__8997 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__8997) : p3.call(null, G__8997);
                  }();
                  if (cljs.core.truth_(and__4278__auto____$5)) {
                    var and__4278__auto____$6 = function() {
                      var G__8999 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__8999) : p1.call(null, G__8999);
                    }();
                    if (cljs.core.truth_(and__4278__auto____$6)) {
                      var and__4278__auto____$7 = function() {
                        var G__9001 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9001) : p2.call(null, G__9001);
                      }();
                      if (cljs.core.truth_(and__4278__auto____$7)) {
                        var G__9002 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9002) : p3.call(null, G__9002);
                      } else {
                        return and__4278__auto____$7;
                      }
                    } else {
                      return and__4278__auto____$6;
                    }
                  } else {
                    return and__4278__auto____$5;
                  }
                } else {
                  return and__4278__auto____$4;
                }
              } else {
                return and__4278__auto____$3;
              }
            } else {
              return and__4278__auto____$2;
            }
          } else {
            return and__4278__auto____$1;
          }
        } else {
          return and__4278__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__9043__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4278__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4278__auto__)) {
            return cljs.core.every_QMARK_(function(and__4278__auto__) {
              return function(p1__8837_SHARP_) {
                var and__4278__auto____$1 = function() {
                  var G__9004 = p1__8837_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9004) : p1.call(null, G__9004);
                }();
                if (cljs.core.truth_(and__4278__auto____$1)) {
                  var and__4278__auto____$2 = function() {
                    var G__9006 = p1__8837_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9006) : p2.call(null, G__9006);
                  }();
                  if (cljs.core.truth_(and__4278__auto____$2)) {
                    var G__9007 = p1__8837_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9007) : p3.call(null, G__9007);
                  } else {
                    return and__4278__auto____$2;
                  }
                } else {
                  return and__4278__auto____$1;
                }
              };
            }(and__4278__auto__), args);
          } else {
            return and__4278__auto__;
          }
        }());
      };
      var G__9043 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9044__i = 0, G__9044__a = new Array(arguments.length - 3);
          while (G__9044__i < G__9044__a.length) {
            G__9044__a[G__9044__i] = arguments[G__9044__i + 3];
            ++G__9044__i;
          }
          args = new cljs.core.IndexedSeq(G__9044__a, 0);
        }
        return G__9043__delegate.call(this, x, y, z, args);
      };
      G__9043.cljs$lang$maxFixedArity = 3;
      G__9043.cljs$lang$applyTo = function(arglist__9045) {
        var x = cljs.core.first(arglist__9045);
        arglist__9045 = cljs.core.next(arglist__9045);
        var y = cljs.core.first(arglist__9045);
        arglist__9045 = cljs.core.next(arglist__9045);
        var z = cljs.core.first(arglist__9045);
        var args = cljs.core.rest(arglist__9045);
        return G__9043__delegate(x, y, z, args);
      };
      G__9043.cljs$core$IFn$_invoke$arity$variadic = G__9043__delegate;
      return G__9043;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__9046 = null;
          if (arguments.length > 3) {
            var G__9047__i = 0, G__9047__a = new Array(arguments.length - 3);
            while (G__9047__i < G__9047__a.length) {
              G__9047__a[G__9047__i] = arguments[G__9047__i + 3];
              ++G__9047__i;
            }
            G__9046 = new cljs.core.IndexedSeq(G__9047__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9046);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__8838_SHARP_) {
            var G__9023 = x;
            return p1__8838_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8838_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9023) : p1__8838_SHARP_.call(null, G__9023);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__8839_SHARP_) {
            var and__4278__auto__ = function() {
              var G__9025 = x;
              return p1__8839_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8839_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9025) : p1__8839_SHARP_.call(null, G__9025);
            }();
            if (cljs.core.truth_(and__4278__auto__)) {
              var G__9026 = y;
              return p1__8839_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8839_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9026) : p1__8839_SHARP_.call(null, G__9026);
            } else {
              return and__4278__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__8840_SHARP_) {
            var and__4278__auto__ = function() {
              var G__9028 = x;
              return p1__8840_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8840_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9028) : p1__8840_SHARP_.call(null, G__9028);
            }();
            if (cljs.core.truth_(and__4278__auto__)) {
              var and__4278__auto____$1 = function() {
                var G__9030 = y;
                return p1__8840_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8840_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9030) : p1__8840_SHARP_.call(null, G__9030);
              }();
              if (cljs.core.truth_(and__4278__auto____$1)) {
                var G__9031 = z;
                return p1__8840_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__8840_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9031) : p1__8840_SHARP_.call(null, G__9031);
              } else {
                return and__4278__auto____$1;
              }
            } else {
              return and__4278__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__9048__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4278__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4278__auto__)) {
              return cljs.core.every_QMARK_(function(and__4278__auto__, ps__$1) {
                return function(p1__8841_SHARP_) {
                  return cljs.core.every_QMARK_(p1__8841_SHARP_, args);
                };
              }(and__4278__auto__, ps__$1), ps__$1);
            } else {
              return and__4278__auto__;
            }
          }());
        };
        var G__9048 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9049__i = 0, G__9049__a = new Array(arguments.length - 3);
            while (G__9049__i < G__9049__a.length) {
              G__9049__a[G__9049__i] = arguments[G__9049__i + 3];
              ++G__9049__i;
            }
            args = new cljs.core.IndexedSeq(G__9049__a, 0);
          }
          return G__9048__delegate.call(this, x, y, z, args);
        };
        G__9048.cljs$lang$maxFixedArity = 3;
        G__9048.cljs$lang$applyTo = function(arglist__9050) {
          var x = cljs.core.first(arglist__9050);
          arglist__9050 = cljs.core.next(arglist__9050);
          var y = cljs.core.first(arglist__9050);
          arglist__9050 = cljs.core.next(arglist__9050);
          var z = cljs.core.first(arglist__9050);
          var args = cljs.core.rest(arglist__9050);
          return G__9048__delegate(x, y, z, args);
        };
        G__9048.cljs$core$IFn$_invoke$arity$variadic = G__9048__delegate;
        return G__9048;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__9051 = null;
            if (arguments.length > 3) {
              var G__9052__i = 0, G__9052__a = new Array(arguments.length - 3);
              while (G__9052__i < G__9052__a.length) {
                G__9052__a[G__9052__i] = arguments[G__9052__i + 3];
                ++G__9052__i;
              }
              G__9051 = new cljs.core.IndexedSeq(G__9052__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9051);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq8842) {
  var G__8843 = cljs.core.first(seq8842);
  var seq8842__$1 = cljs.core.next(seq8842);
  var G__8844 = cljs.core.first(seq8842__$1);
  var seq8842__$2 = cljs.core.next(seq8842__$1);
  var G__8845 = cljs.core.first(seq8842__$2);
  var seq8842__$3 = cljs.core.next(seq8842__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__8843, G__8844, G__8845, seq8842__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var G__9064 = arguments.length;
  switch(G__9064) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      var G__9080 = x;
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9080) : p.call(null, G__9080);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4290__auto__ = function() {
        var G__9082 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9082) : p.call(null, G__9082);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var G__9083 = y;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9083) : p.call(null, G__9083);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4290__auto__ = function() {
        var G__9085 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9085) : p.call(null, G__9085);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = function() {
          var G__9087 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9087) : p.call(null, G__9087);
        }();
        if (cljs.core.truth_(or__4290__auto____$1)) {
          return or__4290__auto____$1;
        } else {
          var G__9088 = z;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__9088) : p.call(null, G__9088);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__9250__delegate = function(x, y, z, args) {
        var or__4290__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4290__auto__)) {
          return or__4290__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__9250 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9251__i = 0, G__9251__a = new Array(arguments.length - 3);
          while (G__9251__i < G__9251__a.length) {
            G__9251__a[G__9251__i] = arguments[G__9251__i + 3];
            ++G__9251__i;
          }
          args = new cljs.core.IndexedSeq(G__9251__a, 0);
        }
        return G__9250__delegate.call(this, x, y, z, args);
      };
      G__9250.cljs$lang$maxFixedArity = 3;
      G__9250.cljs$lang$applyTo = function(arglist__9252) {
        var x = cljs.core.first(arglist__9252);
        arglist__9252 = cljs.core.next(arglist__9252);
        var y = cljs.core.first(arglist__9252);
        arglist__9252 = cljs.core.next(arglist__9252);
        var z = cljs.core.first(arglist__9252);
        var args = cljs.core.rest(arglist__9252);
        return G__9250__delegate(x, y, z, args);
      };
      G__9250.cljs$core$IFn$_invoke$arity$variadic = G__9250__delegate;
      return G__9250;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__9253 = null;
          if (arguments.length > 3) {
            var G__9254__i = 0, G__9254__a = new Array(arguments.length - 3);
            while (G__9254__i < G__9254__a.length) {
              G__9254__a[G__9254__i] = arguments[G__9254__i + 3];
              ++G__9254__i;
            }
            G__9253 = new cljs.core.IndexedSeq(G__9254__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9253);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4290__auto__ = function() {
        var G__9120 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9120) : p1.call(null, G__9120);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var G__9121 = x;
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9121) : p2.call(null, G__9121);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4290__auto__ = function() {
        var G__9123 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9123) : p1.call(null, G__9123);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = function() {
          var G__9125 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9125) : p1.call(null, G__9125);
        }();
        if (cljs.core.truth_(or__4290__auto____$1)) {
          return or__4290__auto____$1;
        } else {
          var or__4290__auto____$2 = function() {
            var G__9127 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9127) : p2.call(null, G__9127);
          }();
          if (cljs.core.truth_(or__4290__auto____$2)) {
            return or__4290__auto____$2;
          } else {
            var G__9128 = y;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9128) : p2.call(null, G__9128);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4290__auto__ = function() {
        var G__9130 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9130) : p1.call(null, G__9130);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = function() {
          var G__9132 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9132) : p1.call(null, G__9132);
        }();
        if (cljs.core.truth_(or__4290__auto____$1)) {
          return or__4290__auto____$1;
        } else {
          var or__4290__auto____$2 = function() {
            var G__9134 = z;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9134) : p1.call(null, G__9134);
          }();
          if (cljs.core.truth_(or__4290__auto____$2)) {
            return or__4290__auto____$2;
          } else {
            var or__4290__auto____$3 = function() {
              var G__9136 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9136) : p2.call(null, G__9136);
            }();
            if (cljs.core.truth_(or__4290__auto____$3)) {
              return or__4290__auto____$3;
            } else {
              var or__4290__auto____$4 = function() {
                var G__9138 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9138) : p2.call(null, G__9138);
              }();
              if (cljs.core.truth_(or__4290__auto____$4)) {
                return or__4290__auto____$4;
              } else {
                var G__9139 = z;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9139) : p2.call(null, G__9139);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__9255__delegate = function(x, y, z, args) {
        var or__4290__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4290__auto__)) {
          return or__4290__auto__;
        } else {
          return cljs.core.some(function(or__4290__auto__) {
            return function(p1__9053_SHARP_) {
              var or__4290__auto____$1 = function() {
                var G__9141 = p1__9053_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9141) : p1.call(null, G__9141);
              }();
              if (cljs.core.truth_(or__4290__auto____$1)) {
                return or__4290__auto____$1;
              } else {
                var G__9142 = p1__9053_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9142) : p2.call(null, G__9142);
              }
            };
          }(or__4290__auto__), args);
        }
      };
      var G__9255 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9256__i = 0, G__9256__a = new Array(arguments.length - 3);
          while (G__9256__i < G__9256__a.length) {
            G__9256__a[G__9256__i] = arguments[G__9256__i + 3];
            ++G__9256__i;
          }
          args = new cljs.core.IndexedSeq(G__9256__a, 0);
        }
        return G__9255__delegate.call(this, x, y, z, args);
      };
      G__9255.cljs$lang$maxFixedArity = 3;
      G__9255.cljs$lang$applyTo = function(arglist__9257) {
        var x = cljs.core.first(arglist__9257);
        arglist__9257 = cljs.core.next(arglist__9257);
        var y = cljs.core.first(arglist__9257);
        arglist__9257 = cljs.core.next(arglist__9257);
        var z = cljs.core.first(arglist__9257);
        var args = cljs.core.rest(arglist__9257);
        return G__9255__delegate(x, y, z, args);
      };
      G__9255.cljs$core$IFn$_invoke$arity$variadic = G__9255__delegate;
      return G__9255;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__9258 = null;
          if (arguments.length > 3) {
            var G__9259__i = 0, G__9259__a = new Array(arguments.length - 3);
            while (G__9259__i < G__9259__a.length) {
              G__9259__a[G__9259__i] = arguments[G__9259__i + 3];
              ++G__9259__i;
            }
            G__9258 = new cljs.core.IndexedSeq(G__9259__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9258);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4290__auto__ = function() {
        var G__9188 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9188) : p1.call(null, G__9188);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = function() {
          var G__9190 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9190) : p2.call(null, G__9190);
        }();
        if (cljs.core.truth_(or__4290__auto____$1)) {
          return or__4290__auto____$1;
        } else {
          var G__9191 = x;
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9191) : p3.call(null, G__9191);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4290__auto__ = function() {
        var G__9193 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9193) : p1.call(null, G__9193);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = function() {
          var G__9195 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9195) : p2.call(null, G__9195);
        }();
        if (cljs.core.truth_(or__4290__auto____$1)) {
          return or__4290__auto____$1;
        } else {
          var or__4290__auto____$2 = function() {
            var G__9197 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9197) : p3.call(null, G__9197);
          }();
          if (cljs.core.truth_(or__4290__auto____$2)) {
            return or__4290__auto____$2;
          } else {
            var or__4290__auto____$3 = function() {
              var G__9199 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9199) : p1.call(null, G__9199);
            }();
            if (cljs.core.truth_(or__4290__auto____$3)) {
              return or__4290__auto____$3;
            } else {
              var or__4290__auto____$4 = function() {
                var G__9201 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9201) : p2.call(null, G__9201);
              }();
              if (cljs.core.truth_(or__4290__auto____$4)) {
                return or__4290__auto____$4;
              } else {
                var G__9202 = y;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9202) : p3.call(null, G__9202);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4290__auto__ = function() {
        var G__9204 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9204) : p1.call(null, G__9204);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = function() {
          var G__9206 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9206) : p2.call(null, G__9206);
        }();
        if (cljs.core.truth_(or__4290__auto____$1)) {
          return or__4290__auto____$1;
        } else {
          var or__4290__auto____$2 = function() {
            var G__9208 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9208) : p3.call(null, G__9208);
          }();
          if (cljs.core.truth_(or__4290__auto____$2)) {
            return or__4290__auto____$2;
          } else {
            var or__4290__auto____$3 = function() {
              var G__9210 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9210) : p1.call(null, G__9210);
            }();
            if (cljs.core.truth_(or__4290__auto____$3)) {
              return or__4290__auto____$3;
            } else {
              var or__4290__auto____$4 = function() {
                var G__9212 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9212) : p2.call(null, G__9212);
              }();
              if (cljs.core.truth_(or__4290__auto____$4)) {
                return or__4290__auto____$4;
              } else {
                var or__4290__auto____$5 = function() {
                  var G__9214 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9214) : p3.call(null, G__9214);
                }();
                if (cljs.core.truth_(or__4290__auto____$5)) {
                  return or__4290__auto____$5;
                } else {
                  var or__4290__auto____$6 = function() {
                    var G__9216 = z;
                    return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9216) : p1.call(null, G__9216);
                  }();
                  if (cljs.core.truth_(or__4290__auto____$6)) {
                    return or__4290__auto____$6;
                  } else {
                    var or__4290__auto____$7 = function() {
                      var G__9218 = z;
                      return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9218) : p2.call(null, G__9218);
                    }();
                    if (cljs.core.truth_(or__4290__auto____$7)) {
                      return or__4290__auto____$7;
                    } else {
                      var G__9219 = z;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9219) : p3.call(null, G__9219);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__9260__delegate = function(x, y, z, args) {
        var or__4290__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4290__auto__)) {
          return or__4290__auto__;
        } else {
          return cljs.core.some(function(or__4290__auto__) {
            return function(p1__9054_SHARP_) {
              var or__4290__auto____$1 = function() {
                var G__9221 = p1__9054_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__9221) : p1.call(null, G__9221);
              }();
              if (cljs.core.truth_(or__4290__auto____$1)) {
                return or__4290__auto____$1;
              } else {
                var or__4290__auto____$2 = function() {
                  var G__9223 = p1__9054_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__9223) : p2.call(null, G__9223);
                }();
                if (cljs.core.truth_(or__4290__auto____$2)) {
                  return or__4290__auto____$2;
                } else {
                  var G__9224 = p1__9054_SHARP_;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__9224) : p3.call(null, G__9224);
                }
              }
            };
          }(or__4290__auto__), args);
        }
      };
      var G__9260 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__9261__i = 0, G__9261__a = new Array(arguments.length - 3);
          while (G__9261__i < G__9261__a.length) {
            G__9261__a[G__9261__i] = arguments[G__9261__i + 3];
            ++G__9261__i;
          }
          args = new cljs.core.IndexedSeq(G__9261__a, 0);
        }
        return G__9260__delegate.call(this, x, y, z, args);
      };
      G__9260.cljs$lang$maxFixedArity = 3;
      G__9260.cljs$lang$applyTo = function(arglist__9262) {
        var x = cljs.core.first(arglist__9262);
        arglist__9262 = cljs.core.next(arglist__9262);
        var y = cljs.core.first(arglist__9262);
        arglist__9262 = cljs.core.next(arglist__9262);
        var z = cljs.core.first(arglist__9262);
        var args = cljs.core.rest(arglist__9262);
        return G__9260__delegate(x, y, z, args);
      };
      G__9260.cljs$core$IFn$_invoke$arity$variadic = G__9260__delegate;
      return G__9260;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__9263 = null;
          if (arguments.length > 3) {
            var G__9264__i = 0, G__9264__a = new Array(arguments.length - 3);
            while (G__9264__i < G__9264__a.length) {
              G__9264__a[G__9264__i] = arguments[G__9264__i + 3];
              ++G__9264__i;
            }
            G__9263 = new cljs.core.IndexedSeq(G__9264__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9263);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9055_SHARP_) {
            var G__9240 = x;
            return p1__9055_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9055_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9240) : p1__9055_SHARP_.call(null, G__9240);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9056_SHARP_) {
            var or__4290__auto__ = function() {
              var G__9242 = x;
              return p1__9056_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9056_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9242) : p1__9056_SHARP_.call(null, G__9242);
            }();
            if (cljs.core.truth_(or__4290__auto__)) {
              return or__4290__auto__;
            } else {
              var G__9243 = y;
              return p1__9056_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9056_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9243) : p1__9056_SHARP_.call(null, G__9243);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__9057_SHARP_) {
            var or__4290__auto__ = function() {
              var G__9245 = x;
              return p1__9057_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9057_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9245) : p1__9057_SHARP_.call(null, G__9245);
            }();
            if (cljs.core.truth_(or__4290__auto__)) {
              return or__4290__auto__;
            } else {
              var or__4290__auto____$1 = function() {
                var G__9247 = y;
                return p1__9057_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9057_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9247) : p1__9057_SHARP_.call(null, G__9247);
              }();
              if (cljs.core.truth_(or__4290__auto____$1)) {
                return or__4290__auto____$1;
              } else {
                var G__9248 = z;
                return p1__9057_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__9057_SHARP_.cljs$core$IFn$_invoke$arity$1(G__9248) : p1__9057_SHARP_.call(null, G__9248);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__9265__delegate = function(x, y, z, args) {
          var or__4290__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4290__auto__)) {
            return or__4290__auto__;
          } else {
            return cljs.core.some(function(or__4290__auto__, ps__$1) {
              return function(p1__9058_SHARP_) {
                return cljs.core.some(p1__9058_SHARP_, args);
              };
            }(or__4290__auto__, ps__$1), ps__$1);
          }
        };
        var G__9265 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__9266__i = 0, G__9266__a = new Array(arguments.length - 3);
            while (G__9266__i < G__9266__a.length) {
              G__9266__a[G__9266__i] = arguments[G__9266__i + 3];
              ++G__9266__i;
            }
            args = new cljs.core.IndexedSeq(G__9266__a, 0);
          }
          return G__9265__delegate.call(this, x, y, z, args);
        };
        G__9265.cljs$lang$maxFixedArity = 3;
        G__9265.cljs$lang$applyTo = function(arglist__9267) {
          var x = cljs.core.first(arglist__9267);
          arglist__9267 = cljs.core.next(arglist__9267);
          var y = cljs.core.first(arglist__9267);
          arglist__9267 = cljs.core.next(arglist__9267);
          var z = cljs.core.first(arglist__9267);
          var args = cljs.core.rest(arglist__9267);
          return G__9265__delegate(x, y, z, args);
        };
        G__9265.cljs$core$IFn$_invoke$arity$variadic = G__9265__delegate;
        return G__9265;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__9268 = null;
            if (arguments.length > 3) {
              var G__9269__i = 0, G__9269__a = new Array(arguments.length - 3);
              while (G__9269__i < G__9269__a.length) {
                G__9269__a[G__9269__i] = arguments[G__9269__i + 3];
                ++G__9269__i;
              }
              G__9268 = new cljs.core.IndexedSeq(G__9269__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__9268);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq9059) {
  var G__9060 = cljs.core.first(seq9059);
  var seq9059__$1 = cljs.core.next(seq9059);
  var G__9061 = cljs.core.first(seq9059__$1);
  var seq9059__$2 = cljs.core.next(seq9059__$1);
  var G__9062 = cljs.core.first(seq9059__$2);
  var seq9059__$3 = cljs.core.next(seq9059__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__9060, G__9061, G__9062, seq9059__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var G__9277 = arguments.length;
  switch(G__9277) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5342__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__9293 = null;
      var G__9293__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9293__1 = function(result) {
        var G__9278 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9278) : rf.call(null, G__9278);
      };
      var G__9293__2 = function(result, input) {
        var G__9279 = result;
        var G__9280 = function() {
          var G__9281 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9281) : f.call(null, G__9281);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9279, G__9280) : rf.call(null, G__9279, G__9280);
      };
      var G__9293__3 = function() {
        var G__9294__delegate = function(result, input, inputs) {
          var G__9282 = result;
          var G__9283 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9282, G__9283) : rf.call(null, G__9282, G__9283);
        };
        var G__9294 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__9295__i = 0, G__9295__a = new Array(arguments.length - 2);
            while (G__9295__i < G__9295__a.length) {
              G__9295__a[G__9295__i] = arguments[G__9295__i + 2];
              ++G__9295__i;
            }
            inputs = new cljs.core.IndexedSeq(G__9295__a, 0);
          }
          return G__9294__delegate.call(this, result, input, inputs);
        };
        G__9294.cljs$lang$maxFixedArity = 2;
        G__9294.cljs$lang$applyTo = function(arglist__9296) {
          var result = cljs.core.first(arglist__9296);
          arglist__9296 = cljs.core.next(arglist__9296);
          var input = cljs.core.first(arglist__9296);
          var inputs = cljs.core.rest(arglist__9296);
          return G__9294__delegate(result, input, inputs);
        };
        G__9294.cljs$core$IFn$_invoke$arity$variadic = G__9294__delegate;
        return G__9294;
      }();
      G__9293 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__9293__0.call(this);
          case 1:
            return G__9293__1.call(this, result);
          case 2:
            return G__9293__2.call(this, result, input);
          default:
            var G__9297 = null;
            if (arguments.length > 2) {
              var G__9298__i = 0, G__9298__a = new Array(arguments.length - 2);
              while (G__9298__i < G__9298__a.length) {
                G__9298__a[G__9298__i] = arguments[G__9298__i + 2];
                ++G__9298__i;
              }
              G__9297 = new cljs.core.IndexedSeq(G__9298__a, 0);
            }
            return G__9293__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__9297);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9293.cljs$lang$maxFixedArity = 2;
      G__9293.cljs$lang$applyTo = G__9293__3.cljs$lang$applyTo;
      G__9293.cljs$core$IFn$_invoke$arity$0 = G__9293__0;
      G__9293.cljs$core$IFn$_invoke$arity$1 = G__9293__1;
      G__9293.cljs$core$IFn$_invoke$arity$2 = G__9293__2;
      G__9293.cljs$core$IFn$_invoke$arity$variadic = G__9293__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__9293;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5175__auto___9299 = size;
        var i_9300 = 0;
        while (true) {
          if (i_9300 < n__5175__auto___9299) {
            cljs.core.chunk_append(b, function() {
              var G__9284 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9300);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9284) : f.call(null, G__9284);
            }());
            var G__9301 = i_9300 + 1;
            i_9300 = G__9301;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__9285 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9285) : f.call(null, G__9285);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__9286 = cljs.core.first(s1);
        var G__9287 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9286, G__9287) : f.call(null, G__9286, G__9287);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__9288 = cljs.core.first(s1);
        var G__9289 = cljs.core.first(s2);
        var G__9290 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9288, G__9289, G__9290) : f.call(null, G__9288, G__9289, G__9290);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__9270_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__9270_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq9271) {
  var G__9272 = cljs.core.first(seq9271);
  var seq9271__$1 = cljs.core.next(seq9271);
  var G__9273 = cljs.core.first(seq9271__$1);
  var seq9271__$2 = cljs.core.next(seq9271__$1);
  var G__9274 = cljs.core.first(seq9271__$2);
  var seq9271__$3 = cljs.core.next(seq9271__$2);
  var G__9275 = cljs.core.first(seq9271__$3);
  var seq9271__$4 = cljs.core.next(seq9271__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__9272, G__9273, G__9274, G__9275, seq9271__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var G__9303 = arguments.length;
  switch(G__9303) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__9308 = null;
        var G__9308__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9308__1 = function(result) {
          var G__9304 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9304) : rf.call(null, G__9304);
        };
        var G__9308__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? function() {
            var G__9305 = result;
            var G__9306 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9305, G__9306) : rf.call(null, G__9305, G__9306);
          }() : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__9308 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9308__0.call(this);
            case 1:
              return G__9308__1.call(this, result);
            case 2:
              return G__9308__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9308.cljs$core$IFn$_invoke$arity$0 = G__9308__0;
        G__9308.cljs$core$IFn$_invoke$arity$1 = G__9308__1;
        G__9308.cljs$core$IFn$_invoke$arity$2 = G__9308__2;
        return G__9308;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var G__9310 = arguments.length;
  switch(G__9310) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__9315 = null;
        var G__9315__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9315__1 = function(result) {
          var G__9311 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9311) : rf.call(null, G__9311);
        };
        var G__9315__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            var G__9312 = result;
            var G__9313 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9312, G__9313) : rf.call(null, G__9312, G__9313);
          }
        };
        G__9315 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9315__0.call(this);
            case 1:
              return G__9315__1.call(this, result);
            case 2:
              return G__9315__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9315.cljs$core$IFn$_invoke$arity$0 = G__9315__0;
        G__9315.cljs$core$IFn$_invoke$arity$1 = G__9315__1;
        G__9315.cljs$core$IFn$_invoke$arity$2 = G__9315__2;
        return G__9315;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__9316 = n__$1 - 1;
        var G__9317 = cljs.core.rest(s);
        n__$1 = G__9316;
        coll__$1 = G__9317;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var G__9319 = arguments.length;
  switch(G__9319) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__9321 = cljs.core.next(s);
      var G__9322 = cljs.core.next(lead);
      s = G__9321;
      lead = G__9322;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var G__9324 = arguments.length;
  switch(G__9324) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__9332 = null;
        var G__9332__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9332__1 = function(result) {
          var G__9325 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9325) : rf.call(null, G__9325);
        };
        var G__9332__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4278__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4278__auto__)) {
              var G__9326 = input;
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9326) : pred.call(null, G__9326);
            } else {
              return and__4278__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            var G__9327 = result;
            var G__9328 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9327, G__9328) : rf.call(null, G__9327, G__9328);
          }
        };
        G__9332 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9332__0.call(this);
            case 1:
              return G__9332__1.call(this, result);
            case 2:
              return G__9332__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9332.cljs$core$IFn$_invoke$arity$0 = G__9332__0;
        G__9332.cljs$core$IFn$_invoke$arity$1 = G__9332__1;
        G__9332.cljs$core$IFn$_invoke$arity$2 = G__9332__2;
        return G__9332;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4278__auto__ = s;
        if (and__4278__auto__) {
          var G__9330 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__9330) : pred__$1.call(null, G__9330);
        } else {
          return and__4278__auto__;
        }
      }())) {
        var G__9333 = pred__$1;
        var G__9334 = cljs.core.rest(s);
        pred__$1 = G__9333;
        coll__$1 = G__9334;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var G__9337 = arguments.length;
  switch(G__9337) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var G__9340 = arguments.length;
  switch(G__9340) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__9345 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9345) : f.call(null, G__9345);
    }());
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var G__9350 = arguments.length;
  switch(G__9350) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5342__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq9346) {
  var G__9347 = cljs.core.first(seq9346);
  var seq9346__$1 = cljs.core.next(seq9346);
  var G__9348 = cljs.core.first(seq9346__$1);
  var seq9346__$2 = cljs.core.next(seq9346__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__9347, G__9348, seq9346__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var G__9353 = arguments.length;
  switch(G__9353) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__9362 = null;
        var G__9362__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__9362__1 = function(result) {
          var G__9354 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9354) : rf.call(null, G__9354);
        };
        var G__9362__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = function() {
              var G__9355 = result;
              var G__9356 = sep;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9355, G__9356) : rf.call(null, G__9355, G__9356);
            }();
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              var G__9357 = sepr;
              var G__9358 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9357, G__9358) : rf.call(null, G__9357, G__9358);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            var G__9359 = result;
            var G__9360 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9359, G__9360) : rf.call(null, G__9359, G__9360);
          }
        };
        G__9362 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__9362__0.call(this);
            case 1:
              return G__9362__1.call(this, result);
            case 2:
              return G__9362__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__9362.cljs$core$IFn$_invoke$arity$0 = G__9362__0;
        G__9362.cljs$core$IFn$_invoke$arity$1 = G__9362__1;
        G__9362.cljs$core$IFn$_invoke$arity$2 = G__9362__2;
        return G__9362;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var G__9374 = arguments.length;
  switch(G__9374) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5342__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq9371) {
  var G__9372 = cljs.core.first(seq9371);
  var seq9371__$1 = cljs.core.next(seq9371);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__9372, seq9371__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var G__9377 = arguments.length;
  switch(G__9377) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__9385 = null;
      var G__9385__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__9385__1 = function(result) {
        var G__9378 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__9378) : rf.call(null, G__9378);
      };
      var G__9385__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__9379 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9379) : pred.call(null, G__9379);
        }())) {
          var G__9380 = result;
          var G__9381 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__9380, G__9381) : rf.call(null, G__9380, G__9381);
        } else {
          return result;
        }
      };
      G__9385 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__9385__0.call(this);
          case 1:
            return G__9385__1.call(this, result);
          case 2:
            return G__9385__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__9385.cljs$core$IFn$_invoke$arity$0 = G__9385__0;
      G__9385.cljs$core$IFn$_invoke$arity$1 = G__9385__1;
      G__9385.cljs$core$IFn$_invoke$arity$2 = G__9385__2;
      return G__9385;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5175__auto___9386 = size;
        var i_9387 = 0;
        while (true) {
          if (i_9387 < n__5175__auto___9386) {
            if (cljs.core.truth_(function() {
              var G__9382 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9387);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9382) : pred.call(null, G__9382);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_9387));
            } else {
            }
            var G__9388 = i_9387 + 1;
            i_9387 = G__9388;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(function() {
          var G__9383 = f;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9383) : pred.call(null, G__9383);
        }())) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var G__9390 = arguments.length;
  switch(G__9390) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__9398 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__9398) : branch_QMARK_.call(null, G__9398);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__9399 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__9399) : children.call(null, G__9399);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__9400_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__9400_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var G__9402 = arguments.length;
  switch(G__9402) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__9403 = to;
      if (G__9403) {
        var bit__4957__auto__ = G__9403.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4957__auto__ || G__9403.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (function() {
    var G__9404 = to;
    if (G__9404) {
      var bit__4957__auto__ = G__9404.cljs$lang$protocol_mask$partition1$ & 4;
      if (bit__4957__auto__ || G__9404.cljs$core$IEditableCollection$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var G__9412 = arguments.length;
  switch(G__9412) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5342__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
      var G__9413 = o;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9413) : f.call(null, G__9413);
    }());
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq9406) {
  var G__9407 = cljs.core.first(seq9406);
  var seq9406__$1 = cljs.core.next(seq9406);
  var G__9408 = cljs.core.first(seq9406__$1);
  var seq9406__$2 = cljs.core.next(seq9406__$1);
  var G__9409 = cljs.core.first(seq9406__$2);
  var seq9406__$3 = cljs.core.next(seq9406__$2);
  var G__9410 = cljs.core.first(seq9406__$3);
  var seq9406__$4 = cljs.core.next(seq9406__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__9407, G__9408, G__9409, G__9410, seq9406__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__9416 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__9416) : pred.call(null, G__9416);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var G__9418 = arguments.length;
  switch(G__9418) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var G__9421 = arguments.length;
  switch(G__9421) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!function() {
        var G__9422 = m__$1;
        if (G__9422) {
          var bit__4964__auto__ = G__9422.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4964__auto__ || G__9422.cljs$core$ILookup$) {
            return true;
          } else {
            if (!G__9422.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9422);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__9422);
        }
      }()) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__9424 = sentinel;
          var G__9425 = m__$2;
          var G__9426 = cljs.core.next(ks__$1);
          sentinel = G__9424;
          m__$1 = G__9425;
          ks__$1 = G__9426;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__9427, v) {
  var vec__9432 = p__9427;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9432, 0, null);
  var ks = cljs.core.nthnext(vec__9432, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var G__9441 = arguments.length;
  switch(G__9441) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5342__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__9442, f) {
  var vec__9443 = p__9442;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9443, 0, null);
  var ks = cljs.core.nthnext(vec__9443, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9444 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9444) : f.call(null, G__9444);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__9445, f, a) {
  var vec__9446 = p__9445;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9446, 0, null);
  var ks = cljs.core.nthnext(vec__9446, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9447 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9448 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9447, G__9448) : f.call(null, G__9447, G__9448);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__9449, f, a, b) {
  var vec__9450 = p__9449;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9450, 0, null);
  var ks = cljs.core.nthnext(vec__9450, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9451 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9452 = a;
      var G__9453 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9451, G__9452, G__9453) : f.call(null, G__9451, G__9452, G__9453);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__9454, f, a, b, c) {
  var vec__9455 = p__9454;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9455, 0, null);
  var ks = cljs.core.nthnext(vec__9455, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__9456 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__9457 = a;
      var G__9458 = b;
      var G__9459 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9456, G__9457, G__9458, G__9459) : f.call(null, G__9456, G__9457, G__9458, G__9459);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__9460, f, a, b, c, args) {
  var vec__9461 = p__9460;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9461, 0, null);
  var ks = cljs.core.nthnext(vec__9461, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq9433) {
  var G__9434 = cljs.core.first(seq9433);
  var seq9433__$1 = cljs.core.next(seq9433);
  var G__9435 = cljs.core.first(seq9433__$1);
  var seq9433__$2 = cljs.core.next(seq9433__$1);
  var G__9436 = cljs.core.first(seq9433__$2);
  var seq9433__$3 = cljs.core.next(seq9433__$2);
  var G__9437 = cljs.core.first(seq9433__$3);
  var seq9433__$4 = cljs.core.next(seq9433__$3);
  var G__9438 = cljs.core.first(seq9433__$4);
  var seq9433__$5 = cljs.core.next(seq9433__$4);
  var G__9439 = cljs.core.first(seq9433__$5);
  var seq9433__$6 = cljs.core.next(seq9433__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__9434, G__9435, G__9436, G__9437, G__9438, G__9439, seq9433__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var G__9471 = arguments.length;
  switch(G__9471) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5342__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__9472 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__9472) : f.call(null, G__9472);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__9473 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__9474 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9473, G__9474) : f.call(null, G__9473, G__9474);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__9475 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__9476 = x;
    var G__9477 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9475, G__9476, G__9477) : f.call(null, G__9475, G__9476, G__9477);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__9478 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__9479 = x;
    var G__9480 = y;
    var G__9481 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__9478, G__9479, G__9480, G__9481) : f.call(null, G__9478, G__9479, G__9480, G__9481);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq9463) {
  var G__9464 = cljs.core.first(seq9463);
  var seq9463__$1 = cljs.core.next(seq9463);
  var G__9465 = cljs.core.first(seq9463__$1);
  var seq9463__$2 = cljs.core.next(seq9463__$1);
  var G__9466 = cljs.core.first(seq9463__$2);
  var seq9463__$3 = cljs.core.next(seq9463__$2);
  var G__9467 = cljs.core.first(seq9463__$3);
  var seq9463__$4 = cljs.core.next(seq9463__$3);
  var G__9468 = cljs.core.first(seq9463__$4);
  var seq9463__$5 = cljs.core.next(seq9463__$4);
  var G__9469 = cljs.core.first(seq9463__$5);
  var seq9463__$6 = cljs.core.next(seq9463__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__9464, G__9465, G__9466, G__9467, G__9468, G__9469, seq9463__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__9483 = ll - 5;
      var G__9484 = r;
      ll = G__9483;
      ret = G__9484;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__9489 = cljs.core.pv_aget(node, 0);
      var G__9490 = level - 5;
      node = G__9489;
      level = G__9490;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__9491 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__9492 = level - 5;
        node = G__9491;
        level = G__9492;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9502 = init__$2;
              var G__9503 = j + i;
              var G__9504 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9502, G__9503, G__9504) : f.call(null, G__9502, G__9503, G__9504);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9515 = j + 1;
              var G__9516 = init__$3;
              j = G__9515;
              init__$2 = G__9516;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9505 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9505) : cljs.core.deref.call(null, G__9505);
      } else {
        var G__9517 = i + len;
        var G__9518 = init__$2;
        i = G__9517;
        init__$1 = G__9518;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__9506 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__9506) : cljs.core.tv_editable_root.call(null, G__9506);
  }(), function() {
    var G__9507 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__9507) : cljs.core.tv_editable_tail.call(null, G__9507);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__9508 = init__$2;
              var G__9509 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9508, G__9509) : f.call(null, G__9508, G__9509);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__9519 = j + 1;
              var G__9520 = init__$3;
              j = G__9519;
              init__$2 = G__9520;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9510 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9510) : cljs.core.deref.call(null, G__9510);
      } else {
        var G__9521 = i + len;
        var G__9522 = init__$2;
        i = G__9521;
        init__$1 = G__9522;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__9511 = coll__$1;
      var G__9512 = cljs.core.first_array_for_longvec(coll__$1);
      var G__9513 = 0;
      var G__9514 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9511, G__9512, G__9513, G__9514) : cljs.core.chunked_seq.call(null, G__9511, G__9512, G__9513, G__9514);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5175__auto___9523 = len;
    var i_9524 = 0;
    while (true) {
      if (i_9524 < n__5175__auto___9523) {
        new_tail[i_9524] = self__.tail[i_9524];
        var G__9525 = i_9524 + 1;
        i_9524 = G__9525;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__9526 = null;
  var G__9526__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9526__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9526 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9526__2.call(this, self__, k);
      case 3:
        return G__9526__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9526.cljs$core$IFn$_invoke$arity$2 = G__9526__2;
  G__9526.cljs$core$IFn$_invoke$arity$3 = G__9526__3;
  return G__9526;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args9501) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9501)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__9527 = i + 1;
        var G__9528 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__9527;
        out = G__9528;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq9529) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9529));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9530 = self__.vec;
      var G__9531 = self__.node;
      var G__9532 = self__.i;
      var G__9533 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9530, G__9531, G__9532, G__9533) : cljs.core.chunked_seq.call(null, G__9530, G__9531, G__9532, G__9533);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__9534 = self__.vec;
    var G__9535 = self__.i + self__.off;
    var G__9536 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9534, G__9535, G__9536) : cljs.core.subvec.call(null, G__9534, G__9535, G__9536);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__9537 = self__.vec;
    var G__9538 = self__.i + self__.off;
    var G__9539 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__9537, G__9538, G__9539) : cljs.core.subvec.call(null, G__9537, G__9538, G__9539);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__9540 = self__.vec;
      var G__9541 = self__.node;
      var G__9542 = self__.i;
      var G__9543 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9540, G__9541, G__9542, G__9543) : cljs.core.chunked_seq.call(null, G__9540, G__9541, G__9542, G__9543);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9544 = self__.vec;
    var G__9545 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9546 = end;
    var G__9547 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9544, G__9545, G__9546, G__9547) : cljs.core.chunked_seq.call(null, G__9544, G__9545, G__9546, G__9547);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__9548 = self__.vec;
  var G__9549 = self__.node;
  var G__9550 = self__.i;
  var G__9551 = self__.off;
  var G__9552 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__9548, G__9549, G__9550, G__9551, G__9552) : cljs.core.chunked_seq.call(null, G__9548, G__9549, G__9550, G__9551, G__9552);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__9553 = self__.vec;
    var G__9554 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__9555 = end;
    var G__9556 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__9553, G__9554, G__9555, G__9556) : cljs.core.chunked_seq.call(null, G__9553, G__9554, G__9555, G__9556);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var G__9558 = arguments.length;
  switch(G__9558) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__9561 = init__$1;
        var G__9562 = j;
        var G__9563 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9561, G__9562, G__9563) : f.call(null, G__9561, G__9562, G__9563);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9564 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9564) : cljs.core.deref.call(null, G__9564);
      } else {
        var G__9586 = i + 1;
        var G__9587 = j + 1;
        var G__9588 = init__$2;
        i = G__9586;
        j = G__9587;
        init__$1 = G__9588;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__9565 = self__.meta;
  var G__9566 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__9567 = self__.start;
  var G__9568 = function() {
    var x__4602__auto__ = self__.end;
    var y__4603__auto__ = v_pos + 1;
    return x__4602__auto__ > y__4603__auto__ ? x__4602__auto__ : y__4603__auto__;
  }();
  var G__9569 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9565, G__9566, G__9567, G__9568, G__9569) : cljs.core.build_subvec.call(null, G__9565, G__9566, G__9567, G__9568, G__9569);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__9570 = self__.meta;
    var G__9571 = self__.v;
    var G__9572 = self__.start;
    var G__9573 = self__.end - 1;
    var G__9574 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9570, G__9571, G__9572, G__9573, G__9574) : cljs.core.build_subvec.call(null, G__9570, G__9571, G__9572, G__9573, G__9574);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__9576 = meta__$1;
  var G__9577 = self__.v;
  var G__9578 = self__.start;
  var G__9579 = self__.end;
  var G__9580 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9576, G__9577, G__9578, G__9579, G__9580) : cljs.core.build_subvec.call(null, G__9576, G__9577, G__9578, G__9579, G__9580);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__9581 = self__.meta;
  var G__9582 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__9583 = self__.start;
  var G__9584 = self__.end + 1;
  var G__9585 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__9581, G__9582, G__9583, G__9584, G__9585) : cljs.core.build_subvec.call(null, G__9581, G__9582, G__9583, G__9584, G__9585);
};
cljs.core.Subvec.prototype.call = function() {
  var G__9589 = null;
  var G__9589__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__9589__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__9589 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9589__2.call(this, self__, k);
      case 3:
        return G__9589__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9589.cljs$core$IFn$_invoke$arity$2 = G__9589__2;
  G__9589.cljs$core$IFn$_invoke$arity$3 = G__9589__3;
  return G__9589;
}();
cljs.core.Subvec.prototype.apply = function(self__, args9560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9560)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__9590 = meta;
      var G__9591 = v.v;
      var G__9592 = v.start + start;
      var G__9593 = v.start + end;
      var G__9594 = __hash;
      meta = G__9590;
      v = G__9591;
      start = G__9592;
      end = G__9593;
      __hash = G__9594;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var G__9596 = arguments.length;
  switch(G__9596) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj9601 = {};
    return obj9601;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__9609 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__9610 = level - 5;
        node = G__9609;
        level = G__9610;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__9614 = null;
  var G__9614__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9614__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9614 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9614__2.call(this, self__, k);
      case 3:
        return G__9614__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9614.cljs$core$IFn$_invoke$arity$2 = G__9614__2;
  G__9614.cljs$core$IFn$_invoke$arity$3 = G__9614__3;
  return G__9614;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args9611) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9611)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4290__auto__ = self__.front;
    if (cljs.core.truth_(or__4290__auto__)) {
      return or__4290__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4290__auto__ = self__.rear;
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__9615 = i + incr;
        i = G__9615;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__9616 = i + 1;
      var G__9617 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__9616;
      out = G__9617;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj9621 = {};
    return obj9621;
  }();
  var l = ks.length;
  var i_9622 = 0;
  while (true) {
    if (i_9622 < l) {
      var k_9623 = ks[i_9622];
      new_obj[k_9623] = obj[k_9623];
      var G__9624 = i_9622 + 1;
      i_9622 = G__9624;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4278__auto__ = function() {
      var G__9628 = k;
      return goog.isString(G__9628);
    }();
    if (cljs.core.truth_(and__4278__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4278__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__9629 = init__$1;
        var G__9630 = k;
        var G__9631 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9629, G__9630, G__9631) : f.call(null, G__9629, G__9630, G__9631);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9632 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9632) : cljs.core.deref.call(null, G__9632);
      } else {
        var G__9638 = cljs.core.rest(keys__$1);
        var G__9639 = init__$2;
        keys__$1 = G__9638;
        init__$1 = G__9639;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4278__auto__ = function() {
      var G__9634 = k;
      return goog.isString(G__9634);
    }();
    if (cljs.core.truth_(and__4278__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4278__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__9635 = k;
    return goog.isString(G__9635);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4278__auto__ = function() {
      var G__9637 = k;
      return goog.isString(G__9637);
    }();
    if (cljs.core.truth_(and__4278__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4278__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__9625_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__9625_SHARP_, self__.strobj[p1__9625_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__9640 = null;
  var G__9640__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9640__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9640 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9640__2.call(this, self__, k);
      case 3:
        return G__9640__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9640.cljs$core$IFn$_invoke$arity$2 = G__9640__2;
  G__9640.cljs$core$IFn$_invoke$arity$3 = G__9640__3;
  return G__9640;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args9626) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9626)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj9642 = {};
  return obj9642;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__9643 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9643, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9643, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__9644 = i + 2;
        i = G__9644;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__9645 = i + 2;
        i = G__9645;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__9646 = i + 2;
        i = G__9646;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__9647 = i + 2;
        i = G__9647;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__9648 = i + 2;
        i = G__9648;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4290__auto__ = function() {
        var G__9652 = k;
        return goog.isString(G__9652);
      }();
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_9653 = 0;
  while (true) {
    if (i_9653 < l) {
      narr[i_9653] = arr[i_9653];
      var G__9654 = i_9653 + 1;
      i_9653 = G__9654;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9656 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9656) : cljs.core.keys.call(null, G__9656);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9657 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9657) : cljs.core.vals.call(null, G__9657);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9658 = cljs.core.seq(coll);
  var chunk__9659 = null;
  var count__9660 = 0;
  var i__9661 = 0;
  while (true) {
    if (i__9661 < count__9660) {
      var vec__9662 = chunk__9659.cljs$core$IIndexed$_nth$arity$2(null, i__9661);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9662, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9662, 1, null);
      var G__9663_9676 = v;
      var G__9664_9677 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9663_9676, G__9664_9677) : f.call(null, G__9663_9676, G__9664_9677);
      var G__9678 = seq__9658;
      var G__9679 = chunk__9659;
      var G__9680 = count__9660;
      var G__9681 = i__9661 + 1;
      seq__9658 = G__9678;
      chunk__9659 = G__9679;
      count__9660 = G__9680;
      i__9661 = G__9681;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9658);
      if (temp__4126__auto__) {
        var seq__9658__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9658__$1)) {
          var c__5075__auto__ = cljs.core.chunk_first(seq__9658__$1);
          var G__9682 = cljs.core.chunk_rest(seq__9658__$1);
          var G__9683 = c__5075__auto__;
          var G__9684 = cljs.core.count(c__5075__auto__);
          var G__9685 = 0;
          seq__9658 = G__9682;
          chunk__9659 = G__9683;
          count__9660 = G__9684;
          i__9661 = G__9685;
          continue;
        } else {
          var vec__9665 = cljs.core.first(seq__9658__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9665, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9665, 1, null);
          var G__9666_9686 = v;
          var G__9667_9687 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9666_9686, G__9667_9687) : f.call(null, G__9666_9686, G__9667_9687);
          var G__9688 = cljs.core.next(seq__9658__$1);
          var G__9689 = null;
          var G__9690 = 0;
          var G__9691 = 0;
          seq__9658 = G__9688;
          chunk__9659 = G__9689;
          count__9660 = G__9690;
          i__9661 = G__9691;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__9668 = init__$1;
        var G__9669 = self__.arr[i];
        var G__9670 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9668, G__9669, G__9670) : f.call(null, G__9668, G__9669, G__9670);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9671 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9671) : cljs.core.deref.call(null, G__9671);
      } else {
        var G__9692 = i + 2;
        var G__9693 = init__$2;
        i = G__9692;
        init__$1 = G__9693;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__9672 = other;
    if (G__9672) {
      var bit__4957__auto__ = G__9672.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4957__auto__ || G__9672.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__9694 = i + 2;
              i = G__9694;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj9674 = {};
    return obj9674;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__9695 = s + 2;
            var G__9696 = d;
            s = G__9695;
            d = G__9696;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__9697 = s + 2;
            var G__9698 = d + 2;
            s = G__9697;
            d = G__9698;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__9675 = cljs.core.aclone(self__.arr);
        G__9675[idx + 1] = v;
        return G__9675;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9699 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9700 = cljs.core.next(es);
          ret = G__9699;
          es = G__9700;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__9701 = null;
  var G__9701__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9701__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9701 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9701__2.call(this, self__, k);
      case 3:
        return G__9701__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9701.cljs$core$IFn$_invoke$arity$2 = G__9701__2;
  G__9701.cljs$core$IFn$_invoke$arity$3 = G__9701__3;
  return G__9701;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args9655) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9655)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_9702 = 0;
    while (true) {
      if (i_9702 < arr__$1.length) {
        var k_9703 = arr__$1[i_9702];
        var v_9704 = arr__$1[i_9702 + 1];
        var idx_9705 = cljs.core.array_index_of(ret, k_9703);
        if (idx_9705 === -1) {
          ret.push(k_9703);
          ret.push(v_9704);
        } else {
        }
        var G__9706 = i_9702 + 2;
        i_9702 = G__9706;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__9707_9715 = self__.arr;
      G__9707_9715.pop();
      G__9707_9715.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__9708 = self__.len;
          var G__9709 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__9708, G__9709) : cljs.core.array__GT_transient_hash_map.call(null, G__9708, G__9709);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__9710 = o;
      if (G__9710) {
        var bit__4964__auto__ = G__9710.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4964__auto__ || G__9710.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9710.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9710);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9710);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__9711 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9711) : cljs.core.key.call(null, G__9711);
      }(), function() {
        var G__9712 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9712) : cljs.core.val.call(null, G__9712);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9716 = cljs.core.next(es);
          var G__9717 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__9713 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9713) : cljs.core.key.call(null, G__9713);
          }(), function() {
            var G__9714 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9714) : cljs.core.val.call(null, G__9714);
          }());
          es = G__9716;
          tcoll__$2 = G__9717;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__9718 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__9719 = i + 2;
      out = G__9718;
      i = G__9719;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var G__9721 = arguments.length;
  switch(G__9721) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__9722 = cljs.core.aclone(arr);
  G__9722[i] = a;
  return G__9722;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__9723 = cljs.core.aclone(arr);
  G__9723[i] = a;
  G__9723[j] = b;
  return G__9723;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var G__9726 = arguments.length;
  switch(G__9726) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__9732 = init__$1;
          var G__9733 = k;
          var G__9734 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9732, G__9733, G__9734) : f.call(null, G__9732, G__9733, G__9734);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__9735 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9735) : cljs.core.deref.call(null, G__9735);
      } else {
        var G__9736 = i + 2;
        var G__9737 = init__$2;
        i = G__9736;
        init__$1 = G__9737;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9738 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9738) : cljs.core.create_inode_seq.call(null, G__9738);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_9752 = 0;
        var j_9753 = 0;
        while (true) {
          if (i_9752 < 32) {
            if ((self__.bitmap >>> i_9752 & 1) === 0) {
              var G__9754 = i_9752 + 1;
              var G__9755 = j_9753;
              i_9752 = G__9754;
              j_9753 = G__9755;
              continue;
            } else {
              nodes[i_9752] = !(self__.arr[j_9753] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_9753]), self__.arr[j_9753], self__.arr[j_9753 + 1], added_leaf_QMARK_) : self__.arr[j_9753 + 1];
              var G__9756 = i_9752 + 1;
              var G__9757 = j_9753 + 2;
              i_9752 = G__9756;
              j_9753 = G__9757;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__9739 = edit__$1;
          var G__9740 = shift + 5;
          var G__9741 = key_or_nil;
          var G__9742 = val_or_node;
          var G__9743 = hash;
          var G__9744 = key;
          var G__9745 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__9739, G__9740, G__9741, G__9742, G__9743, G__9744, G__9745) : cljs.core.create_node.call(null, G__9739, G__9740, G__9741, G__9742, G__9743, G__9744, G__9745);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_9758 = 0;
      var j_9759 = 0;
      while (true) {
        if (i_9758 < 32) {
          if ((self__.bitmap >>> i_9758 & 1) === 0) {
            var G__9760 = i_9758 + 1;
            var G__9761 = j_9759;
            i_9758 = G__9760;
            j_9759 = G__9761;
            continue;
          } else {
            nodes[i_9758] = !(self__.arr[j_9759] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_9759]), self__.arr[j_9759], self__.arr[j_9759 + 1], added_leaf_QMARK_) : self__.arr[j_9759 + 1];
            var G__9762 = i_9758 + 1;
            var G__9763 = j_9759 + 2;
            i_9758 = G__9762;
            j_9759 = G__9763;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__9746 = shift + 5;
          var G__9747 = key_or_nil;
          var G__9748 = val_or_node;
          var G__9749 = hash;
          var G__9750 = key;
          var G__9751 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__9746, G__9747, G__9748, G__9749, G__9750, G__9751) : cljs.core.create_node.call(null, G__9746, G__9747, G__9748, G__9749, G__9750, G__9751);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__9764 = i + 1;
        var G__9765 = j + 2;
        var G__9766 = bitmap | 1 << i;
        i = G__9764;
        j = G__9765;
        bitmap = G__9766;
        continue;
      } else {
        var G__9767 = i + 1;
        var G__9768 = j;
        var G__9769 = bitmap;
        i = G__9767;
        j = G__9768;
        bitmap = G__9769;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9770 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__9770) : cljs.core.create_array_node_seq.call(null, G__9770);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__9771 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9771) : cljs.core.deref.call(null, G__9771);
        } else {
          var G__9772 = i + 1;
          var G__9773 = init__$2;
          i = G__9772;
          init__$1 = G__9773;
          continue;
        }
      } else {
        var G__9774 = i + 1;
        var G__9775 = init__$1;
        i = G__9774;
        init__$1 = G__9775;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__9776 = i + 2;
        i = G__9776;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__9777 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__9777) : cljs.core.create_inode_seq.call(null, G__9777);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var G__9779 = arguments.length;
  switch(G__9779) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__9781 = self__.nodes;
    var G__9782 = self__.i + 2;
    var G__9783 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9781, G__9782, G__9783) : cljs.core.create_inode_seq.call(null, G__9781, G__9782, G__9783);
  } else {
    var G__9784 = self__.nodes;
    var G__9785 = self__.i;
    var G__9786 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__9784, G__9785, G__9786) : cljs.core.create_inode_seq.call(null, G__9784, G__9785, G__9786);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var G__9788 = arguments.length;
  switch(G__9788) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4124__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var node = temp__4124__auto__;
            var temp__4124__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var node_seq = temp__4124__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__9790 = j + 2;
              j = G__9790;
              continue;
            }
          } else {
            var G__9791 = j + 2;
            j = G__9791;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__9792 = null;
  var G__9793 = self__.nodes;
  var G__9794 = self__.i;
  var G__9795 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__9792, G__9793, G__9794, G__9795) : cljs.core.create_array_node_seq.call(null, G__9792, G__9793, G__9794, G__9795);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var G__9797 = arguments.length;
  switch(G__9797) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4124__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4124__auto__)) {
          var nj = temp__4124__auto__;
          var temp__4124__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4124__auto____$1)) {
            var ns = temp__4124__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__9799 = j + 1;
            j = G__9799;
            continue;
          }
        } else {
          var G__9800 = j + 1;
          j = G__9800;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9802 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9802) : cljs.core.keys.call(null, G__9802);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9803 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9803) : cljs.core.vals.call(null, G__9803);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9804 = cljs.core.seq(coll);
  var chunk__9805 = null;
  var count__9806 = 0;
  var i__9807 = 0;
  while (true) {
    if (i__9807 < count__9806) {
      var vec__9808 = chunk__9805.cljs$core$IIndexed$_nth$arity$2(null, i__9807);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9808, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9808, 1, null);
      var G__9809_9820 = v;
      var G__9810_9821 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9809_9820, G__9810_9821) : f.call(null, G__9809_9820, G__9810_9821);
      var G__9822 = seq__9804;
      var G__9823 = chunk__9805;
      var G__9824 = count__9806;
      var G__9825 = i__9807 + 1;
      seq__9804 = G__9822;
      chunk__9805 = G__9823;
      count__9806 = G__9824;
      i__9807 = G__9825;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9804);
      if (temp__4126__auto__) {
        var seq__9804__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9804__$1)) {
          var c__5075__auto__ = cljs.core.chunk_first(seq__9804__$1);
          var G__9826 = cljs.core.chunk_rest(seq__9804__$1);
          var G__9827 = c__5075__auto__;
          var G__9828 = cljs.core.count(c__5075__auto__);
          var G__9829 = 0;
          seq__9804 = G__9826;
          chunk__9805 = G__9827;
          count__9806 = G__9828;
          i__9807 = G__9829;
          continue;
        } else {
          var vec__9811 = cljs.core.first(seq__9804__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9811, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9811, 1, null);
          var G__9812_9830 = v;
          var G__9813_9831 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9812_9830, G__9813_9831) : f.call(null, G__9812_9830, G__9813_9831);
          var G__9832 = cljs.core.next(seq__9804__$1);
          var G__9833 = null;
          var G__9834 = 0;
          var G__9835 = 0;
          seq__9804 = G__9832;
          chunk__9805 = G__9833;
          count__9806 = G__9834;
          i__9807 = G__9835;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__9814 = init;
    var G__9815 = null;
    var G__9816 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9814, G__9815, G__9816) : f.call(null, G__9814, G__9815, G__9816);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9817 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9817) : cljs.core.deref.call(null, G__9817);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj9819 = {};
    return obj9819;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9836 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9837 = cljs.core.next(es);
          ret = G__9836;
          es = G__9837;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__9838 = null;
  var G__9838__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9838__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9838 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9838__2.call(this, self__, k);
      case 3:
        return G__9838__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9838.cljs$core$IFn$_invoke$arity$2 = G__9838__2;
  G__9838.cljs$core$IFn$_invoke$arity$3 = G__9838__3;
  return G__9838;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args9801) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9801)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9839 = i + 2;
      var G__9840 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__9839;
      ret = G__9840;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__9841 = i + 1;
      var G__9842 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__9841;
      out = G__9842;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__9843 = o;
      if (G__9843) {
        var bit__4964__auto__ = G__9843.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4964__auto__ || G__9843.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__9843.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9843);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__9843);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__9844 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9844) : cljs.core.key.call(null, G__9844);
      }(), function() {
        var G__9845 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9845) : cljs.core.val.call(null, G__9845);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__9848 = cljs.core.next(es);
          var G__9849 = tcoll__$1.assoc_BANG_(function() {
            var G__9846 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9846) : cljs.core.key.call(null, G__9846);
          }(), function() {
            var G__9847 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__9847) : cljs.core.val.call(null, G__9847);
          }());
          es = G__9848;
          tcoll__$1 = G__9849;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__9850 = ascending_QMARK_ ? t.left : t.right;
      var G__9851 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__9850;
      stack__$1 = G__9851;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__9864 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9864) : cljs.core.deref.call(null, G__9864);
  } else {
    var init__$2 = function() {
      var G__9865 = init__$1;
      var G__9866 = node.key;
      var G__9867 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__9865, G__9866, G__9867) : f.call(null, G__9865, G__9866, G__9867);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__9868 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9868) : cljs.core.deref.call(null, G__9868);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__9869 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__9869) : cljs.core.deref.call(null, G__9869);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__9871 = null;
  var G__9871__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9871__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9871 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9871__2.call(this, self__, k);
      case 3:
        return G__9871__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9871.cljs$core$IFn$_invoke$arity$2 = G__9871__2;
  G__9871.cljs$core$IFn$_invoke$arity$3 = G__9871__3;
  return G__9871;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args9870) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9870)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__9873 = null;
  var G__9873__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9873__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9873 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9873__2.call(this, self__, k);
      case 3:
        return G__9873__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9873.cljs$core$IFn$_invoke$arity$2 = G__9873__2;
  G__9873.cljs$core$IFn$_invoke$arity$3 = G__9873__3;
  return G__9873;
}();
cljs.core.RedNode.prototype.apply = function(self__, args9872) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9872)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__9886 = k;
      var G__9887 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9886, G__9887) : comp.call(null, G__9886, G__9887);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__9906 = k;
      var G__9907 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9906, G__9907) : comp.call(null, G__9906, G__9907);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__9918 = k;
    var G__9919 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__9918, G__9919) : comp.call(null, G__9918, G__9919);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9921 = cljs.core.seq(coll);
  var chunk__9922 = null;
  var count__9923 = 0;
  var i__9924 = 0;
  while (true) {
    if (i__9924 < count__9923) {
      var vec__9925 = chunk__9922.cljs$core$IIndexed$_nth$arity$2(null, i__9924);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9925, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9925, 1, null);
      var G__9926_9938 = v;
      var G__9927_9939 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9926_9938, G__9927_9939) : f.call(null, G__9926_9938, G__9927_9939);
      var G__9940 = seq__9921;
      var G__9941 = chunk__9922;
      var G__9942 = count__9923;
      var G__9943 = i__9924 + 1;
      seq__9921 = G__9940;
      chunk__9922 = G__9941;
      count__9923 = G__9942;
      i__9924 = G__9943;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9921);
      if (temp__4126__auto__) {
        var seq__9921__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9921__$1)) {
          var c__5075__auto__ = cljs.core.chunk_first(seq__9921__$1);
          var G__9944 = cljs.core.chunk_rest(seq__9921__$1);
          var G__9945 = c__5075__auto__;
          var G__9946 = cljs.core.count(c__5075__auto__);
          var G__9947 = 0;
          seq__9921 = G__9944;
          chunk__9922 = G__9945;
          count__9923 = G__9946;
          i__9924 = G__9947;
          continue;
        } else {
          var vec__9928 = cljs.core.first(seq__9921__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9928, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9928, 1, null);
          var G__9929_9948 = v;
          var G__9930_9949 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9929_9948, G__9930_9949) : f.call(null, G__9929_9948, G__9930_9949);
          var G__9950 = cljs.core.next(seq__9921__$1);
          var G__9951 = null;
          var G__9952 = 0;
          var G__9953 = 0;
          seq__9921 = G__9950;
          chunk__9922 = G__9951;
          count__9923 = G__9952;
          i__9924 = G__9953;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9931 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__9931) : cljs.core.keys.call(null, G__9931);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__9932 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__9932) : cljs.core.vals.call(null, G__9932);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__9933 = k;
        var G__9934 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9933, G__9934) : self__.comp.call(null, G__9933, G__9934);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__9954 = t.left;
          t = G__9954;
          continue;
        } else {
          var G__9955 = t.right;
          t = G__9955;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__9956 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__9957 = cljs.core.next(es);
          ret = G__9956;
          es = G__9957;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__9958 = null;
  var G__9958__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__9958__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__9958 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9958__2.call(this, self__, k);
      case 3:
        return G__9958__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9958.cljs$core$IFn$_invoke$arity$2 = G__9958__2;
  G__9958.cljs$core$IFn$_invoke$arity$3 = G__9958__3;
  return G__9958;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args9920) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9920)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__9935 = k;
          var G__9936 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__9935, G__9936) : self__.comp.call(null, G__9935, G__9936);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__9959 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9960 = t.left;
              stack = G__9959;
              t = G__9960;
              continue;
            } else {
              var G__9961 = stack;
              var G__9962 = t.right;
              stack = G__9961;
              t = G__9962;
              continue;
            }
          } else {
            if (c > 0) {
              var G__9963 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__9964 = t.right;
              stack = G__9963;
              t = G__9964;
              continue;
            } else {
              var G__9965 = stack;
              var G__9966 = t.left;
              stack = G__9965;
              t = G__9966;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__9937 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__9937) : cljs.core.key.call(null, G__9937);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__9968 = cljs.core.nnext(in$);
      var G__9969 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__9968;
      out = G__9969;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq9967) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9967));
};
cljs.core.array_map = function cljs$core$array_map() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq9970) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9970));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = function() {
    var obj9973 = {};
    return obj9973;
  }();
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__9974 = cljs.core.nnext(kvs);
      kvs = G__9974;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq9971) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9971));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__9976 = cljs.core.nnext(in$);
      var G__9977 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__9976;
      out = G__9977;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq9975) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9975));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var argseq__5330__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5330__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__9980 = cljs.core.nnext(in$);
      var G__9981 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__9980;
      out = G__9981;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq9978) {
  var G__9979 = cljs.core.first(seq9978);
  var seq9978__$1 = cljs.core.next(seq9978);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__9979, seq9978__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9982 = self__.mseq;
    if (G__9982) {
      var bit__4964__auto__ = G__9982.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4964__auto__ || G__9982.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9982.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9982);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9982);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9983 = self__.mseq;
    if (G__9983) {
      var bit__4964__auto__ = G__9983.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4964__auto__ || G__9983.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9983.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9983);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9983);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9984 = self__.mseq;
    if (G__9984) {
      var bit__4964__auto__ = G__9984.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4964__auto__ || G__9984.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9984.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9984);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9984);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__9985 = self__.mseq;
    if (G__9985) {
      var bit__4964__auto__ = G__9985.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4964__auto__ || G__9985.cljs$core$INext$) {
        return true;
      } else {
        if (!G__9985.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9985);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__9985);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__9986_SHARP_, p2__9987_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4290__auto__ = p1__9986_SHARP_;
        if (cljs.core.truth_(or__4290__auto__)) {
          return or__4290__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__9987_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq9988) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9988));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var argseq__5330__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5330__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__9991 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__9992 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9991, G__9992) : f.call(null, G__9991, G__9992);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4290__auto__ = m1;
          if (cljs.core.truth_(or__4290__auto__)) {
            return or__4290__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq9989) {
  var G__9990 = cljs.core.first(seq9989);
  var seq9989__$1 = cljs.core.next(seq9989);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__9990, seq9989__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__9993 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__9994 = cljs.core.next(keys);
      ret = G__9993;
      keys = G__9994;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__9997 = cljs.core.seq(coll);
  var chunk__9998 = null;
  var count__9999 = 0;
  var i__10000 = 0;
  while (true) {
    if (i__10000 < count__9999) {
      var vec__10001 = chunk__9998.cljs$core$IIndexed$_nth$arity$2(null, i__10000);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10001, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10001, 1, null);
      var G__10002_10007 = v;
      var G__10003_10008 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10002_10007, G__10003_10008) : f.call(null, G__10002_10007, G__10003_10008);
      var G__10009 = seq__9997;
      var G__10010 = chunk__9998;
      var G__10011 = count__9999;
      var G__10012 = i__10000 + 1;
      seq__9997 = G__10009;
      chunk__9998 = G__10010;
      count__9999 = G__10011;
      i__10000 = G__10012;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__9997);
      if (temp__4126__auto__) {
        var seq__9997__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__9997__$1)) {
          var c__5075__auto__ = cljs.core.chunk_first(seq__9997__$1);
          var G__10013 = cljs.core.chunk_rest(seq__9997__$1);
          var G__10014 = c__5075__auto__;
          var G__10015 = cljs.core.count(c__5075__auto__);
          var G__10016 = 0;
          seq__9997 = G__10013;
          chunk__9998 = G__10014;
          count__9999 = G__10015;
          i__10000 = G__10016;
          continue;
        } else {
          var vec__10004 = cljs.core.first(seq__9997__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10004, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10004, 1, null);
          var G__10005_10017 = v;
          var G__10006_10018 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10005_10017, G__10006_10018) : f.call(null, G__10005_10017, G__10006_10018);
          var G__10019 = cljs.core.next(seq__9997__$1);
          var G__10020 = null;
          var G__10021 = 0;
          var G__10022 = 0;
          seq__9997 = G__10019;
          chunk__9998 = G__10020;
          count__9999 = G__10021;
          i__10000 = G__10022;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__9995_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__9995_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10023 = null;
  var G__10023__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10023__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10023 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10023__2.call(this, self__, k);
      case 3:
        return G__10023__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10023.cljs$core$IFn$_invoke$arity$2 = G__10023__2;
  G__10023.cljs$core$IFn$_invoke$arity$3 = G__10023__3;
  return G__10023;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args9996) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9996)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__10024 = i + 1;
        var G__10025 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__10024;
        out = G__10025;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__10026 = i + 1;
        var G__10027 = cljs.core._conj_BANG_(out, items[i]);
        i = G__10026;
        out = G__10027;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10029 = null;
  var G__10029__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__10029__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__10029 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10029__2.call(this, self__, k);
      case 3:
        return G__10029__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10029.cljs$core$IFn$_invoke$arity$2 = G__10029__2;
  G__10029.cljs$core$IFn$_invoke$arity$3 = G__10029__3;
  return G__10029;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args10028) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10028)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10032 = cljs.core.seq(coll);
  var chunk__10033 = null;
  var count__10034 = 0;
  var i__10035 = 0;
  while (true) {
    if (i__10035 < count__10034) {
      var vec__10036 = chunk__10033.cljs$core$IIndexed$_nth$arity$2(null, i__10035);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10036, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10036, 1, null);
      var G__10037_10042 = v;
      var G__10038_10043 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10037_10042, G__10038_10043) : f.call(null, G__10037_10042, G__10038_10043);
      var G__10044 = seq__10032;
      var G__10045 = chunk__10033;
      var G__10046 = count__10034;
      var G__10047 = i__10035 + 1;
      seq__10032 = G__10044;
      chunk__10033 = G__10045;
      count__10034 = G__10046;
      i__10035 = G__10047;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__10032);
      if (temp__4126__auto__) {
        var seq__10032__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10032__$1)) {
          var c__5075__auto__ = cljs.core.chunk_first(seq__10032__$1);
          var G__10048 = cljs.core.chunk_rest(seq__10032__$1);
          var G__10049 = c__5075__auto__;
          var G__10050 = cljs.core.count(c__5075__auto__);
          var G__10051 = 0;
          seq__10032 = G__10048;
          chunk__10033 = G__10049;
          count__10034 = G__10050;
          i__10035 = G__10051;
          continue;
        } else {
          var vec__10039 = cljs.core.first(seq__10032__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10039, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10039, 1, null);
          var G__10040_10052 = v;
          var G__10041_10053 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10040_10052, G__10041_10053) : f.call(null, G__10040_10052, G__10041_10053);
          var G__10054 = cljs.core.next(seq__10032__$1);
          var G__10055 = null;
          var G__10056 = 0;
          var G__10057 = 0;
          seq__10032 = G__10054;
          chunk__10033 = G__10055;
          count__10034 = G__10056;
          i__10035 = G__10057;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__10030_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__10030_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10058 = null;
  var G__10058__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10058__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10058 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10058__2.call(this, self__, k);
      case 3:
        return G__10058__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10058.cljs$core$IFn$_invoke$arity$2 = G__10058__2;
  G__10058.cljs$core$IFn$_invoke$arity$3 = G__10058__3;
  return G__10058;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args10031) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10031)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5169__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5169__auto__.length) {
        var G__10059 = i + 1;
        var G__10060 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__10059;
        res = G__10060;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__10061 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__10062 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__10061;
          out = G__10062;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var G__10065 = arguments.length;
  switch(G__10065) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5342__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq10063) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10063));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq10067) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10067));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var argseq__5330__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5330__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq10068) {
  var G__10069 = cljs.core.first(seq10068);
  var seq10068__$1 = cljs.core.next(seq10068);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__10069, seq10068__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var G__10073 = arguments.length;
  switch(G__10073) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__10070_SHARP_) {
    var temp__4124__auto__ = cljs.core.find(smap, p1__10070_SHARP_);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var e = temp__4124__auto__;
      return cljs.core.val(e);
    } else {
      return p1__10070_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__10071_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__10071_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.second(e);
      } else {
        return p1__10071_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var G__10076 = arguments.length;
  switch(G__10076) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__10088 = null;
        var G__10088__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10088__1 = function(result) {
          var G__10077 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10077) : rf.call(null, G__10077);
        };
        var G__10088__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(function() {
            var G__10078 = seen;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10078) : cljs.core.deref.call(null, G__10078);
          }(), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            var G__10079 = result;
            var G__10080 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10079, G__10080) : rf.call(null, G__10079, G__10080);
          }
        };
        G__10088 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10088__0.call(this);
            case 1:
              return G__10088__1.call(this, result);
            case 2:
              return G__10088__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10088.cljs$core$IFn$_invoke$arity$0 = G__10088__0;
        G__10088.cljs$core$IFn$_invoke$arity$1 = G__10088__1;
        G__10088.cljs$core$IFn$_invoke$arity$2 = G__10088__2;
        return G__10088;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__10085, seen__$1) {
        while (true) {
          var vec__10086 = p__10085;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10086, 0, null);
          var xs__$1 = vec__10086;
          var temp__4126__auto__ = cljs.core.seq(xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__10089 = cljs.core.rest(s);
              var G__10090 = seen__$1;
              p__10085 = G__10089;
              seen__$1 = G__10090;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__10091 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__10092 = cljs.core.next(s__$1);
      ret = G__10091;
      s__$1 = G__10092;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__10094 = x;
    if (G__10094) {
      var bit__4957__auto__ = G__10094.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4957__auto__ || G__10094.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__10095 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__10096 = cljs.core.next(ks);
      var G__10097 = cljs.core.next(vs);
      map = G__10095;
      ks = G__10096;
      vs = G__10097;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var G__10105 = arguments.length;
  switch(G__10105) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__10106 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10106) : k.call(null, G__10106);
  }() > function() {
    var G__10107 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10107) : k.call(null, G__10107);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10098_SHARP_, p2__10099_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__10098_SHARP_, p2__10099_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq10100) {
  var G__10101 = cljs.core.first(seq10100);
  var seq10100__$1 = cljs.core.next(seq10100);
  var G__10102 = cljs.core.first(seq10100__$1);
  var seq10100__$2 = cljs.core.next(seq10100__$1);
  var G__10103 = cljs.core.first(seq10100__$2);
  var seq10100__$3 = cljs.core.next(seq10100__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__10101, G__10102, G__10103, seq10100__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var G__10116 = arguments.length;
  switch(G__10116) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__10117 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10117) : k.call(null, G__10117);
  }() < function() {
    var G__10118 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__10118) : k.call(null, G__10118);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10109_SHARP_, p2__10110_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__10109_SHARP_, p2__10110_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq10111) {
  var G__10112 = cljs.core.first(seq10111);
  var seq10111__$1 = cljs.core.next(seq10111);
  var G__10113 = cljs.core.first(seq10111__$1);
  var seq10111__$2 = cljs.core.next(seq10111__$1);
  var G__10114 = cljs.core.first(seq10111__$2);
  var seq10111__$3 = cljs.core.next(seq10111__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__10112, G__10113, G__10114, seq10111__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var G__10121 = arguments.length;
  switch(G__10121) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__10128 = null;
        var G__10128__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10128__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__10122 = result;
              var G__10123 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10122, G__10123) : rf.call(null, G__10122, G__10123);
            }());
          }();
          var G__10124 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10124) : rf.call(null, G__10124);
        };
        var G__10128__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var G__10125 = result;
            var G__10126 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10125, G__10126) : rf.call(null, G__10125, G__10126);
          } else {
            return result;
          }
        };
        G__10128 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10128__0.call(this);
            case 1:
              return G__10128__1.call(this, result);
            case 2:
              return G__10128__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10128.cljs$core$IFn$_invoke$arity$0 = G__10128__0;
        G__10128.cljs$core$IFn$_invoke$arity$1 = G__10128__1;
        G__10128.cljs$core$IFn$_invoke$arity$2 = G__10128__2;
        return G__10128;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var G__10130 = arguments.length;
  switch(G__10130) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__10137 = null;
      var G__10137__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10137__1 = function(result) {
        var G__10131 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10131) : rf.call(null, G__10131);
      };
      var G__10137__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__10132 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10132) : pred.call(null, G__10132);
        }())) {
          var G__10133 = result;
          var G__10134 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10133, G__10134) : rf.call(null, G__10133, G__10134);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__10137 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10137__0.call(this);
          case 1:
            return G__10137__1.call(this, result);
          case 2:
            return G__10137__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10137.cljs$core$IFn$_invoke$arity$0 = G__10137__0;
      G__10137.cljs$core$IFn$_invoke$arity$1 = G__10137__1;
      G__10137.cljs$core$IFn$_invoke$arity$2 = G__10137__2;
      return G__10137;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      if (cljs.core.truth_(function() {
        var G__10135 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10135) : pred.call(null, G__10135);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__10142 = function() {
      var G__10144 = cljs.core._entry_key(sc, e);
      var G__10145 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10144, G__10145) : comp.call(null, G__10144, G__10145);
    }();
    var G__10143 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10142, G__10143) : test.call(null, G__10142, G__10143);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var G__10147 = arguments.length;
  switch(G__10147) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__10148 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10148, 0, null);
      var s = vec__10148;
      if (cljs.core.truth_(function() {
        var G__10149 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10149) : include.call(null, G__10149);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__10150 = temp__4126__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10150, 0, null);
    var s = vec__10150;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var G__10153 = arguments.length;
  switch(G__10153) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__10154 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10154, 0, null);
      var s = vec__10154;
      if (cljs.core.truth_(function() {
        var G__10155 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__10155) : include.call(null, G__10155);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var vec__10156 = temp__4126__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10156, 0, null);
    var s = vec__10156;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__10158 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__10158) : Math.ceil.call(null, G__10158);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4706__auto__ = self__.__hash;
  if (!(h__4706__auto__ == null)) {
    return h__4706__auto__;
  } else {
    var h__4706__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4706__auto____$1;
    return h__4706__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__10159 = ret;
        var G__10160 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10159, G__10160) : f.call(null, G__10159, G__10160);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__10161 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10161) : cljs.core.deref.call(null, G__10161);
      } else {
        var G__10162 = i + self__.step;
        var G__10163 = ret__$1;
        i = G__10162;
        ret = G__10163;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.range = function cljs$core$range() {
  var G__10165 = arguments.length;
  switch(G__10165) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var G__10168 = arguments.length;
  switch(G__10168) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__10173 = null;
        var G__10173__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10173__1 = function(result) {
          var G__10169 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10169) : rf.call(null, G__10169);
        };
        var G__10173__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            var G__10170 = result;
            var G__10171 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10170, G__10171) : rf.call(null, G__10170, G__10171);
          } else {
            return result;
          }
        };
        G__10173 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10173__0.call(this);
            case 1:
              return G__10173__1.call(this, result);
            case 2:
              return G__10173__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10173.cljs$core$IFn$_invoke$arity$0 = G__10173__0;
        G__10173.cljs$core$IFn$_invoke$arity$1 = G__10173__1;
        G__10173.cljs$core$IFn$_invoke$arity$2 = G__10173__2;
        return G__10173;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var G__10176 = arguments.length;
  switch(G__10176) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__10187 = null;
        var G__10187__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10187__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__10177 = result;
              var G__10178 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10177, G__10178) : rf.call(null, G__10177, G__10178);
            }());
          }();
          var G__10179 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10179) : rf.call(null, G__10179);
        };
        var G__10187__2 = function(result, input) {
          var pval = function() {
            var G__10180 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10180) : cljs.core.deref.call(null, G__10180);
          }();
          var val = function() {
            var G__10181 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10181) : f.call(null, G__10181);
          }();
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = function() {
              var G__10182 = result;
              var G__10183 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10182, G__10183) : rf.call(null, G__10182, G__10183);
            }();
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__10187 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10187__0.call(this);
            case 1:
              return G__10187__1.call(this, result);
            case 2:
              return G__10187__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10187.cljs$core$IFn$_invoke$arity$0 = G__10187__0;
        G__10187.cljs$core$IFn$_invoke$arity$1 = G__10187__1;
        G__10187.cljs$core$IFn$_invoke$arity$2 = G__10187__2;
        return G__10187;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      var fst = cljs.core.first(s);
      var fv = function() {
        var G__10184 = fst;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10184) : f.call(null, G__10184);
      }();
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
        return function(p1__10174_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
            var G__10185 = p1__10174_SHARP_;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10185) : f.call(null, G__10185);
          }());
        };
      }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var G__10189 = arguments.length;
  switch(G__10189) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__10190 = init;
        var G__10191 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10190, G__10191) : f.call(null, G__10190, G__10191);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var G__10208 = arguments.length;
  switch(G__10208) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5342__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__10252 = null;
    var G__10252__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }()], null);
    };
    var G__10252__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10209 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10209) : f.call(null, G__10209);
      }()], null);
    };
    var G__10252__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10210 = x;
        var G__10211 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10210, G__10211) : f.call(null, G__10210, G__10211);
      }()], null);
    };
    var G__10252__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10212 = x;
        var G__10213 = y;
        var G__10214 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10212, G__10213, G__10214) : f.call(null, G__10212, G__10213, G__10214);
      }()], null);
    };
    var G__10252__4 = function() {
      var G__10253__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__10253 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10254__i = 0, G__10254__a = new Array(arguments.length - 3);
          while (G__10254__i < G__10254__a.length) {
            G__10254__a[G__10254__i] = arguments[G__10254__i + 3];
            ++G__10254__i;
          }
          args = new cljs.core.IndexedSeq(G__10254__a, 0);
        }
        return G__10253__delegate.call(this, x, y, z, args);
      };
      G__10253.cljs$lang$maxFixedArity = 3;
      G__10253.cljs$lang$applyTo = function(arglist__10255) {
        var x = cljs.core.first(arglist__10255);
        arglist__10255 = cljs.core.next(arglist__10255);
        var y = cljs.core.first(arglist__10255);
        arglist__10255 = cljs.core.next(arglist__10255);
        var z = cljs.core.first(arglist__10255);
        var args = cljs.core.rest(arglist__10255);
        return G__10253__delegate(x, y, z, args);
      };
      G__10253.cljs$core$IFn$_invoke$arity$variadic = G__10253__delegate;
      return G__10253;
    }();
    G__10252 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10252__0.call(this);
        case 1:
          return G__10252__1.call(this, x);
        case 2:
          return G__10252__2.call(this, x, y);
        case 3:
          return G__10252__3.call(this, x, y, z);
        default:
          var G__10256 = null;
          if (arguments.length > 3) {
            var G__10257__i = 0, G__10257__a = new Array(arguments.length - 3);
            while (G__10257__i < G__10257__a.length) {
              G__10257__a[G__10257__i] = arguments[G__10257__i + 3];
              ++G__10257__i;
            }
            G__10256 = new cljs.core.IndexedSeq(G__10257__a, 0);
          }
          return G__10252__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10256);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10252.cljs$lang$maxFixedArity = 3;
    G__10252.cljs$lang$applyTo = G__10252__4.cljs$lang$applyTo;
    G__10252.cljs$core$IFn$_invoke$arity$0 = G__10252__0;
    G__10252.cljs$core$IFn$_invoke$arity$1 = G__10252__1;
    G__10252.cljs$core$IFn$_invoke$arity$2 = G__10252__2;
    G__10252.cljs$core$IFn$_invoke$arity$3 = G__10252__3;
    G__10252.cljs$core$IFn$_invoke$arity$variadic = G__10252__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10252;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__10258 = null;
    var G__10258__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }()], null);
    };
    var G__10258__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10215 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10215) : f.call(null, G__10215);
      }(), function() {
        var G__10216 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10216) : g.call(null, G__10216);
      }()], null);
    };
    var G__10258__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10217 = x;
        var G__10218 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10217, G__10218) : f.call(null, G__10217, G__10218);
      }(), function() {
        var G__10219 = x;
        var G__10220 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10219, G__10220) : g.call(null, G__10219, G__10220);
      }()], null);
    };
    var G__10258__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10221 = x;
        var G__10222 = y;
        var G__10223 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10221, G__10222, G__10223) : f.call(null, G__10221, G__10222, G__10223);
      }(), function() {
        var G__10224 = x;
        var G__10225 = y;
        var G__10226 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10224, G__10225, G__10226) : g.call(null, G__10224, G__10225, G__10226);
      }()], null);
    };
    var G__10258__4 = function() {
      var G__10259__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__10259 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10260__i = 0, G__10260__a = new Array(arguments.length - 3);
          while (G__10260__i < G__10260__a.length) {
            G__10260__a[G__10260__i] = arguments[G__10260__i + 3];
            ++G__10260__i;
          }
          args = new cljs.core.IndexedSeq(G__10260__a, 0);
        }
        return G__10259__delegate.call(this, x, y, z, args);
      };
      G__10259.cljs$lang$maxFixedArity = 3;
      G__10259.cljs$lang$applyTo = function(arglist__10261) {
        var x = cljs.core.first(arglist__10261);
        arglist__10261 = cljs.core.next(arglist__10261);
        var y = cljs.core.first(arglist__10261);
        arglist__10261 = cljs.core.next(arglist__10261);
        var z = cljs.core.first(arglist__10261);
        var args = cljs.core.rest(arglist__10261);
        return G__10259__delegate(x, y, z, args);
      };
      G__10259.cljs$core$IFn$_invoke$arity$variadic = G__10259__delegate;
      return G__10259;
    }();
    G__10258 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10258__0.call(this);
        case 1:
          return G__10258__1.call(this, x);
        case 2:
          return G__10258__2.call(this, x, y);
        case 3:
          return G__10258__3.call(this, x, y, z);
        default:
          var G__10262 = null;
          if (arguments.length > 3) {
            var G__10263__i = 0, G__10263__a = new Array(arguments.length - 3);
            while (G__10263__i < G__10263__a.length) {
              G__10263__a[G__10263__i] = arguments[G__10263__i + 3];
              ++G__10263__i;
            }
            G__10262 = new cljs.core.IndexedSeq(G__10263__a, 0);
          }
          return G__10258__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10262);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10258.cljs$lang$maxFixedArity = 3;
    G__10258.cljs$lang$applyTo = G__10258__4.cljs$lang$applyTo;
    G__10258.cljs$core$IFn$_invoke$arity$0 = G__10258__0;
    G__10258.cljs$core$IFn$_invoke$arity$1 = G__10258__1;
    G__10258.cljs$core$IFn$_invoke$arity$2 = G__10258__2;
    G__10258.cljs$core$IFn$_invoke$arity$3 = G__10258__3;
    G__10258.cljs$core$IFn$_invoke$arity$variadic = G__10258__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10258;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__10264 = null;
    var G__10264__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }(), function() {
        return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
      }()], null);
    };
    var G__10264__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10227 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10227) : f.call(null, G__10227);
      }(), function() {
        var G__10228 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10228) : g.call(null, G__10228);
      }(), function() {
        var G__10229 = x;
        return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__10229) : h.call(null, G__10229);
      }()], null);
    };
    var G__10264__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10230 = x;
        var G__10231 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10230, G__10231) : f.call(null, G__10230, G__10231);
      }(), function() {
        var G__10232 = x;
        var G__10233 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__10232, G__10233) : g.call(null, G__10232, G__10233);
      }(), function() {
        var G__10234 = x;
        var G__10235 = y;
        return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__10234, G__10235) : h.call(null, G__10234, G__10235);
      }()], null);
    };
    var G__10264__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__10236 = x;
        var G__10237 = y;
        var G__10238 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10236, G__10237, G__10238) : f.call(null, G__10236, G__10237, G__10238);
      }(), function() {
        var G__10239 = x;
        var G__10240 = y;
        var G__10241 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__10239, G__10240, G__10241) : g.call(null, G__10239, G__10240, G__10241);
      }(), function() {
        var G__10242 = x;
        var G__10243 = y;
        var G__10244 = z;
        return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__10242, G__10243, G__10244) : h.call(null, G__10242, G__10243, G__10244);
      }()], null);
    };
    var G__10264__4 = function() {
      var G__10265__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__10265 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10266__i = 0, G__10266__a = new Array(arguments.length - 3);
          while (G__10266__i < G__10266__a.length) {
            G__10266__a[G__10266__i] = arguments[G__10266__i + 3];
            ++G__10266__i;
          }
          args = new cljs.core.IndexedSeq(G__10266__a, 0);
        }
        return G__10265__delegate.call(this, x, y, z, args);
      };
      G__10265.cljs$lang$maxFixedArity = 3;
      G__10265.cljs$lang$applyTo = function(arglist__10267) {
        var x = cljs.core.first(arglist__10267);
        arglist__10267 = cljs.core.next(arglist__10267);
        var y = cljs.core.first(arglist__10267);
        arglist__10267 = cljs.core.next(arglist__10267);
        var z = cljs.core.first(arglist__10267);
        var args = cljs.core.rest(arglist__10267);
        return G__10265__delegate(x, y, z, args);
      };
      G__10265.cljs$core$IFn$_invoke$arity$variadic = G__10265__delegate;
      return G__10265;
    }();
    G__10264 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10264__0.call(this);
        case 1:
          return G__10264__1.call(this, x);
        case 2:
          return G__10264__2.call(this, x, y);
        case 3:
          return G__10264__3.call(this, x, y, z);
        default:
          var G__10268 = null;
          if (arguments.length > 3) {
            var G__10269__i = 0, G__10269__a = new Array(arguments.length - 3);
            while (G__10269__i < G__10269__a.length) {
              G__10269__a[G__10269__i] = arguments[G__10269__i + 3];
              ++G__10269__i;
            }
            G__10268 = new cljs.core.IndexedSeq(G__10269__a, 0);
          }
          return G__10264__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10268);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10264.cljs$lang$maxFixedArity = 3;
    G__10264.cljs$lang$applyTo = G__10264__4.cljs$lang$applyTo;
    G__10264.cljs$core$IFn$_invoke$arity$0 = G__10264__0;
    G__10264.cljs$core$IFn$_invoke$arity$1 = G__10264__1;
    G__10264.cljs$core$IFn$_invoke$arity$2 = G__10264__2;
    G__10264.cljs$core$IFn$_invoke$arity$3 = G__10264__3;
    G__10264.cljs$core$IFn$_invoke$arity$variadic = G__10264__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10264;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__10270 = null;
      var G__10270__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10193_SHARP_, p2__10194_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10193_SHARP_, function() {
              return p2__10194_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10194_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10194_SHARP_.call(null);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10270__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10195_SHARP_, p2__10196_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10195_SHARP_, function() {
              var G__10245 = x;
              return p2__10196_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10196_SHARP_.cljs$core$IFn$_invoke$arity$1(G__10245) : p2__10196_SHARP_.call(null, G__10245);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10270__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10197_SHARP_, p2__10198_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10197_SHARP_, function() {
              var G__10246 = x;
              var G__10247 = y;
              return p2__10198_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10198_SHARP_.cljs$core$IFn$_invoke$arity$2(G__10246, G__10247) : p2__10198_SHARP_.call(null, G__10246, G__10247);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10270__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__10199_SHARP_, p2__10200_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10199_SHARP_, function() {
              var G__10248 = x;
              var G__10249 = y;
              var G__10250 = z;
              return p2__10200_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10200_SHARP_.cljs$core$IFn$_invoke$arity$3(G__10248, G__10249, G__10250) : p2__10200_SHARP_.call(null, G__10248, G__10249, G__10250);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__10270__4 = function() {
        var G__10271__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__10201_SHARP_, p2__10202_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10201_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10202_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__10271 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10272__i = 0, G__10272__a = new Array(arguments.length - 3);
            while (G__10272__i < G__10272__a.length) {
              G__10272__a[G__10272__i] = arguments[G__10272__i + 3];
              ++G__10272__i;
            }
            args = new cljs.core.IndexedSeq(G__10272__a, 0);
          }
          return G__10271__delegate.call(this, x, y, z, args);
        };
        G__10271.cljs$lang$maxFixedArity = 3;
        G__10271.cljs$lang$applyTo = function(arglist__10273) {
          var x = cljs.core.first(arglist__10273);
          arglist__10273 = cljs.core.next(arglist__10273);
          var y = cljs.core.first(arglist__10273);
          arglist__10273 = cljs.core.next(arglist__10273);
          var z = cljs.core.first(arglist__10273);
          var args = cljs.core.rest(arglist__10273);
          return G__10271__delegate(x, y, z, args);
        };
        G__10271.cljs$core$IFn$_invoke$arity$variadic = G__10271__delegate;
        return G__10271;
      }();
      G__10270 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10270__0.call(this);
          case 1:
            return G__10270__1.call(this, x);
          case 2:
            return G__10270__2.call(this, x, y);
          case 3:
            return G__10270__3.call(this, x, y, z);
          default:
            var G__10274 = null;
            if (arguments.length > 3) {
              var G__10275__i = 0, G__10275__a = new Array(arguments.length - 3);
              while (G__10275__i < G__10275__a.length) {
                G__10275__a[G__10275__i] = arguments[G__10275__i + 3];
                ++G__10275__i;
              }
              G__10274 = new cljs.core.IndexedSeq(G__10275__a, 0);
            }
            return G__10270__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10274);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10270.cljs$lang$maxFixedArity = 3;
      G__10270.cljs$lang$applyTo = G__10270__4.cljs$lang$applyTo;
      G__10270.cljs$core$IFn$_invoke$arity$0 = G__10270__0;
      G__10270.cljs$core$IFn$_invoke$arity$1 = G__10270__1;
      G__10270.cljs$core$IFn$_invoke$arity$2 = G__10270__2;
      G__10270.cljs$core$IFn$_invoke$arity$3 = G__10270__3;
      G__10270.cljs$core$IFn$_invoke$arity$variadic = G__10270__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__10270;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq10203) {
  var G__10204 = cljs.core.first(seq10203);
  var seq10203__$1 = cljs.core.next(seq10203);
  var G__10205 = cljs.core.first(seq10203__$1);
  var seq10203__$2 = cljs.core.next(seq10203__$1);
  var G__10206 = cljs.core.first(seq10203__$2);
  var seq10203__$3 = cljs.core.next(seq10203__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__10204, G__10205, G__10206, seq10203__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var G__10277 = arguments.length;
  switch(G__10277) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__10279 = cljs.core.next(coll);
      coll = G__10279;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__10280 = n - 1;
      var G__10281 = cljs.core.next(coll);
      n = G__10280;
      coll = G__10281;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var G__10283 = arguments.length;
  switch(G__10283) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__10288 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10288, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10288, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4290__auto__ = flags;
      if (cljs.core.truth_(or__4290__auto__)) {
        return or__4290__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_10296 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4290__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4290__auto__)) {
              return or__4290__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__10297_10303 = cljs.core.first(coll);
          var G__10298_10304 = writer;
          var G__10299_10305 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10297_10303, G__10298_10304, G__10299_10305) : print_one.call(null, G__10297_10303, G__10298_10304, G__10299_10305);
        } else {
        }
        var coll_10306__$1 = cljs.core.next(coll);
        var n_10307 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_10306__$1 && (n_10307 == null || !(n_10307 === 0))) {
            cljs.core._write(writer, sep);
            var G__10300_10308 = cljs.core.first(coll_10306__$1);
            var G__10301_10309 = writer;
            var G__10302_10310 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10300_10308, G__10301_10309, G__10302_10310) : print_one.call(null, G__10300_10308, G__10301_10309, G__10302_10310);
            var G__10311 = cljs.core.next(coll_10306__$1);
            var G__10312 = n_10307 - 1;
            coll_10306__$1 = G__10311;
            n_10307 = G__10312;
            continue;
          } else {
            if (cljs.core.seq(coll_10306__$1) && n_10307 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4290__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4290__auto__)) {
                  return or__4290__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_10296;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var argseq__5330__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5330__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__10315 = cljs.core.seq(ss);
  var chunk__10316 = null;
  var count__10317 = 0;
  var i__10318 = 0;
  while (true) {
    if (i__10318 < count__10317) {
      var s = chunk__10316.cljs$core$IIndexed$_nth$arity$2(null, i__10318);
      cljs.core._write(writer, s);
      var G__10319 = seq__10315;
      var G__10320 = chunk__10316;
      var G__10321 = count__10317;
      var G__10322 = i__10318 + 1;
      seq__10315 = G__10319;
      chunk__10316 = G__10320;
      count__10317 = G__10321;
      i__10318 = G__10322;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__10315);
      if (temp__4126__auto__) {
        var seq__10315__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10315__$1)) {
          var c__5075__auto__ = cljs.core.chunk_first(seq__10315__$1);
          var G__10323 = cljs.core.chunk_rest(seq__10315__$1);
          var G__10324 = c__5075__auto__;
          var G__10325 = cljs.core.count(c__5075__auto__);
          var G__10326 = 0;
          seq__10315 = G__10323;
          chunk__10316 = G__10324;
          count__10317 = G__10325;
          i__10318 = G__10326;
          continue;
        } else {
          var s = cljs.core.first(seq__10315__$1);
          cljs.core._write(writer, s);
          var G__10327 = cljs.core.next(seq__10315__$1);
          var G__10328 = null;
          var G__10329 = 0;
          var G__10330 = 0;
          seq__10315 = G__10327;
          chunk__10316 = G__10328;
          count__10317 = G__10329;
          i__10318 = G__10330;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq10313) {
  var G__10314 = cljs.core.first(seq10313);
  var seq10313__$1 = cljs.core.next(seq10313);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__10314, seq10313__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj10332 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj10332;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__10335 = '[\\\\"\b\f\n\r\t]';
    var G__10336 = "g";
    return RegExp(G__10335, G__10336);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4278__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4278__auto__)) {
          var and__4278__auto____$1 = function() {
            var G__10350 = obj;
            if (G__10350) {
              var bit__4964__auto__ = G__10350.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4964__auto__ || G__10350.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__10350.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10350);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10350);
            }
          }();
          if (and__4278__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4278__auto____$1;
          }
        } else {
          return and__4278__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__10351_10361 = cljs.core.meta(obj);
        var G__10352_10362 = writer;
        var G__10353_10363 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10351_10361, G__10352_10362, G__10353_10363) : cljs.core.pr_writer.call(null, G__10351_10361, G__10352_10362, G__10353_10363);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__10354 = obj;
            if (G__10354) {
              var bit__4957__auto__ = G__10354.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4957__auto__ || G__10354.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__10355 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__10356 = cljs.core.pr_writer;
                var G__10357 = writer;
                var G__10358 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10355, G__10356, G__10357, G__10358) : cljs.core.print_map.call(null, G__10355, G__10356, G__10357, G__10358);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__10359 = obj;
                    return goog.isString(G__10359);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__10364 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__10364;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.truth_(cljs.core.regexp_QMARK_(obj))) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__10360 = obj;
                            if (G__10360) {
                              var bit__4964__auto__ = G__10360.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4964__auto__ || G__10360.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__10360.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10360);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__10360);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__10368 = obj;
    var G__10369 = writer;
    var G__10370 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10368, G__10369, G__10370) : alt_impl.call(null, G__10368, G__10369, G__10370);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__10375 = cljs.core.seq(cljs.core.next(objs));
  var chunk__10376 = null;
  var count__10377 = 0;
  var i__10378 = 0;
  while (true) {
    if (i__10378 < count__10377) {
      var obj = chunk__10376.cljs$core$IIndexed$_nth$arity$2(null, i__10378);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__10379 = seq__10375;
      var G__10380 = chunk__10376;
      var G__10381 = count__10377;
      var G__10382 = i__10378 + 1;
      seq__10375 = G__10379;
      chunk__10376 = G__10380;
      count__10377 = G__10381;
      i__10378 = G__10382;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__10375);
      if (temp__4126__auto__) {
        var seq__10375__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10375__$1)) {
          var c__5075__auto__ = cljs.core.chunk_first(seq__10375__$1);
          var G__10383 = cljs.core.chunk_rest(seq__10375__$1);
          var G__10384 = c__5075__auto__;
          var G__10385 = cljs.core.count(c__5075__auto__);
          var G__10386 = 0;
          seq__10375 = G__10383;
          chunk__10376 = G__10384;
          count__10377 = G__10385;
          i__10378 = G__10386;
          continue;
        } else {
          var obj = cljs.core.first(seq__10375__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__10387 = cljs.core.next(seq__10375__$1);
          var G__10388 = null;
          var G__10389 = 0;
          var G__10390 = 0;
          seq__10375 = G__10387;
          chunk__10376 = G__10388;
          count__10377 = G__10389;
          i__10378 = G__10390;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function cljs$core$pr_str() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq10391) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10391));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq10392) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10392));
};
cljs.core.pr = function cljs$core$pr() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq10393) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10393));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__10394__i = 0, G__10394__a = new Array(arguments.length - 0);
      while (G__10394__i < G__10394__a.length) {
        G__10394__a[G__10394__i] = arguments[G__10394__i + 0];
        ++G__10394__i;
      }
      objs = new cljs.core.IndexedSeq(G__10394__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__10395) {
    var objs = cljs.core.seq(arglist__10395);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq10396) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10396));
};
cljs.core.println = function cljs$core$println() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq10397) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10397));
};
cljs.core.println_str = function cljs$core$println_str() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq10398) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10398));
};
cljs.core.prn = function cljs$core$prn() {
  var argseq__5330__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5330__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq10399) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10399));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__10406_10412 = cljs.core.key(e);
    var G__10407_10413 = w;
    var G__10408_10414 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10406_10412, G__10407_10413, G__10408_10414) : print_one.call(null, G__10406_10412, G__10407_10413, G__10408_10414);
    cljs.core._write(w, " ");
    var G__10409 = cljs.core.val(e);
    var G__10410 = w;
    var G__10411 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10409, G__10410, G__10411) : print_one.call(null, G__10409, G__10410, G__10411);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var argseq__5330__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5330__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq10415) {
  var G__10416 = cljs.core.first(seq10415);
  var seq10415__$1 = cljs.core.next(seq10415);
  var G__10417 = cljs.core.first(seq10415__$1);
  var seq10415__$2 = cljs.core.next(seq10415__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10416, G__10417, seq10415__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var G__10419 = arguments.length;
  switch(G__10419) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = function() {
      var G__10420 = 0;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10420) : cljs.core.atom.call(null, G__10420);
    }();
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__10423 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10423) : cljs.core.deref.call(null, G__10423);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__10424_SHARP_, p2__10425_SHARP_) {
    var ret = function() {
      var G__10428 = p1__10424_SHARP_;
      var G__10429 = p2__10425_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10428, G__10429) : rf.call(null, G__10428, G__10429);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__10432 = null;
      var G__10432__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10432__1 = function(result) {
        var G__10431 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10431) : rf.call(null, G__10431);
      };
      var G__10432__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__10432 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10432__0.call(this);
          case 1:
            return G__10432__1.call(this, result);
          case 2:
            return G__10432__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10432.cljs$core$IFn$_invoke$arity$0 = G__10432__0;
      G__10432.cljs$core$IFn$_invoke$arity$1 = G__10432__1;
      G__10432.cljs$core$IFn$_invoke$arity$2 = G__10432__2;
      return G__10432;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var G__10434 = arguments.length;
  switch(G__10434) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__10440 = null;
        var G__10440__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10440__1 = function(result) {
          var G__10435 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__10435) : rf.call(null, G__10435);
        };
        var G__10440__2 = function(result, input) {
          var prior = function() {
            var G__10436 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10436) : cljs.core.deref.call(null, G__10436);
          }();
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            var G__10437 = result;
            var G__10438 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10437, G__10438) : rf.call(null, G__10437, G__10438);
          }
        };
        G__10440 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10440__0.call(this);
            case 1:
              return G__10440__1.call(this, result);
            case 2:
              return G__10440__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10440.cljs$core$IFn$_invoke$arity$0 = G__10440__0;
        G__10440.cljs$core$IFn$_invoke$arity$1 = G__10440__1;
        G__10440.cljs$core$IFn$_invoke$arity$2 = G__10440__2;
        return G__10440;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var G__10442 = arguments.length;
  switch(G__10442) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5266__auto__ = this;
  return cljs.core.es6_iterator(this__5266__auto__);
};
cljs.core.eduction = function cljs$core$eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__10445_SHARP_, p2__10444_SHARP_) {
    var G__10447 = p2__10444_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__10447) : proc.call(null, G__10447);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj10449 = {};
  return obj10449;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4278__auto__ = x;
    if (and__4278__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4926__auto__ = x == null ? null : x;
    return function() {
      var or__4290__auto__ = cljs.core._clj__GT_js[function() {
        var G__10453 = x__4926__auto__;
        return goog.typeOf(G__10453);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4278__auto__ = x;
    if (and__4278__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4926__auto__ = x == null ? null : x;
    return function() {
      var or__4290__auto__ = cljs.core._key__GT_js[function() {
        var G__10457 = x__4926__auto__;
        return goog.typeOf(G__10457);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__10460 = k;
    if (G__10460) {
      var bit__4964__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4290__auto__ = bit__4964__auto__;
        if (cljs.core.truth_(or__4290__auto__)) {
          return or__4290__auto__;
        } else {
          return G__10460.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__10460.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10460);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10460);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__10461 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__10461) : cljs.core.clj__GT_js.call(null, G__10461);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__10477 = x;
      if (G__10477) {
        var bit__4964__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4290__auto__ = bit__4964__auto__;
          if (cljs.core.truth_(or__4290__auto__)) {
            return or__4290__auto__;
          } else {
            return G__10477.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__10477.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10477);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__10477);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj10479 = {};
              return obj10479;
            }();
            var seq__10480_10490 = cljs.core.seq(x);
            var chunk__10481_10491 = null;
            var count__10482_10492 = 0;
            var i__10483_10493 = 0;
            while (true) {
              if (i__10483_10493 < count__10482_10492) {
                var vec__10484_10494 = chunk__10481_10491.cljs$core$IIndexed$_nth$arity$2(null, i__10483_10493);
                var k_10495 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10484_10494, 0, null);
                var v_10496 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10484_10494, 1, null);
                m[cljs.core.key__GT_js(k_10495)] = cljs$core$clj__GT_js(v_10496);
                var G__10497 = seq__10480_10490;
                var G__10498 = chunk__10481_10491;
                var G__10499 = count__10482_10492;
                var G__10500 = i__10483_10493 + 1;
                seq__10480_10490 = G__10497;
                chunk__10481_10491 = G__10498;
                count__10482_10492 = G__10499;
                i__10483_10493 = G__10500;
                continue;
              } else {
                var temp__4126__auto___10501 = cljs.core.seq(seq__10480_10490);
                if (temp__4126__auto___10501) {
                  var seq__10480_10502__$1 = temp__4126__auto___10501;
                  if (cljs.core.chunked_seq_QMARK_(seq__10480_10502__$1)) {
                    var c__5075__auto___10503 = cljs.core.chunk_first(seq__10480_10502__$1);
                    var G__10504 = cljs.core.chunk_rest(seq__10480_10502__$1);
                    var G__10505 = c__5075__auto___10503;
                    var G__10506 = cljs.core.count(c__5075__auto___10503);
                    var G__10507 = 0;
                    seq__10480_10490 = G__10504;
                    chunk__10481_10491 = G__10505;
                    count__10482_10492 = G__10506;
                    i__10483_10493 = G__10507;
                    continue;
                  } else {
                    var vec__10485_10508 = cljs.core.first(seq__10480_10502__$1);
                    var k_10509 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10485_10508, 0, null);
                    var v_10510 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10485_10508, 1, null);
                    m[cljs.core.key__GT_js(k_10509)] = cljs$core$clj__GT_js(v_10510);
                    var G__10511 = cljs.core.next(seq__10480_10502__$1);
                    var G__10512 = null;
                    var G__10513 = 0;
                    var G__10514 = 0;
                    seq__10480_10490 = G__10511;
                    chunk__10481_10491 = G__10512;
                    count__10482_10492 = G__10513;
                    i__10483_10493 = G__10514;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__10486_10515 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__10487_10516 = null;
              var count__10488_10517 = 0;
              var i__10489_10518 = 0;
              while (true) {
                if (i__10489_10518 < count__10488_10517) {
                  var x_10519__$1 = chunk__10487_10516.cljs$core$IIndexed$_nth$arity$2(null, i__10489_10518);
                  arr.push(x_10519__$1);
                  var G__10520 = seq__10486_10515;
                  var G__10521 = chunk__10487_10516;
                  var G__10522 = count__10488_10517;
                  var G__10523 = i__10489_10518 + 1;
                  seq__10486_10515 = G__10520;
                  chunk__10487_10516 = G__10521;
                  count__10488_10517 = G__10522;
                  i__10489_10518 = G__10523;
                  continue;
                } else {
                  var temp__4126__auto___10524 = cljs.core.seq(seq__10486_10515);
                  if (temp__4126__auto___10524) {
                    var seq__10486_10525__$1 = temp__4126__auto___10524;
                    if (cljs.core.chunked_seq_QMARK_(seq__10486_10525__$1)) {
                      var c__5075__auto___10526 = cljs.core.chunk_first(seq__10486_10525__$1);
                      var G__10527 = cljs.core.chunk_rest(seq__10486_10525__$1);
                      var G__10528 = c__5075__auto___10526;
                      var G__10529 = cljs.core.count(c__5075__auto___10526);
                      var G__10530 = 0;
                      seq__10486_10515 = G__10527;
                      chunk__10487_10516 = G__10528;
                      count__10488_10517 = G__10529;
                      i__10489_10518 = G__10530;
                      continue;
                    } else {
                      var x_10531__$1 = cljs.core.first(seq__10486_10525__$1);
                      arr.push(x_10531__$1);
                      var G__10532 = cljs.core.next(seq__10486_10525__$1);
                      var G__10533 = null;
                      var G__10534 = 0;
                      var G__10535 = 0;
                      seq__10486_10515 = G__10532;
                      chunk__10487_10516 = G__10533;
                      count__10488_10517 = G__10534;
                      i__10489_10518 = G__10535;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj10537 = {};
  return obj10537;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4278__auto__ = x;
    if (and__4278__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4926__auto__ = x == null ? null : x;
    return function() {
      var or__4290__auto__ = cljs.core._js__GT_clj[function() {
        var G__10541 = x__4926__auto__;
        return goog.typeOf(G__10541);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var G__10545 = arguments.length;
  switch(G__10545) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5342__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__10546 = opts;
  var map__10546__$1 = cljs.core.seq_QMARK_(map__10546) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__10546) : map__10546;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10546__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__10546, map__10546__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (function() {
        var G__10562 = x__$1;
        if (G__10562) {
          var bit__4964__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4290__auto__ = bit__4964__auto__;
            if (cljs.core.truth_(or__4290__auto__)) {
              return or__4290__auto__;
            } else {
              return G__10562.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__10562.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10562);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__10562);
        }
      }()) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5044__auto__ = function(map__10546, map__10546__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__10563(s__10564) {
                      return new cljs.core.LazySeq(null, function(map__10546, map__10546__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__10564__$1 = s__10564;
                          while (true) {
                            var temp__4126__auto__ = cljs.core.seq(s__10564__$1);
                            if (temp__4126__auto__) {
                              var s__10564__$2 = temp__4126__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__10564__$2)) {
                                var c__5042__auto__ = cljs.core.chunk_first(s__10564__$2);
                                var size__5043__auto__ = cljs.core.count(c__5042__auto__);
                                var b__10566 = cljs.core.chunk_buffer(size__5043__auto__);
                                if (function() {
                                  var i__10565 = 0;
                                  while (true) {
                                    if (i__10565 < size__5043__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5042__auto__, i__10565);
                                      cljs.core.chunk_append(b__10566, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                        var G__10571 = k;
                                        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10571) : keyfn.call(null, G__10571);
                                      }(), cljs$core$thisfn(x__$1[k])], null));
                                      var G__10574 = i__10565 + 1;
                                      i__10565 = G__10574;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__10566), cljs$core$thisfn_$_iter__10563(cljs.core.chunk_rest(s__10564__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__10566), null);
                                }
                              } else {
                                var k = cljs.core.first(s__10564__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                  var G__10572 = k;
                                  return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10572) : keyfn.call(null, G__10572);
                                }(), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__10563(cljs.core.rest(s__10564__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__10546, map__10546__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__10546, map__10546__$1, keywordize_keys, keyfn);
                  return iter__5044__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__10546, map__10546__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq10542) {
  var G__10543 = cljs.core.first(seq10542);
  var seq10542__$1 = cljs.core.next(seq10542);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__10543, seq10542__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__10577 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10577) : cljs.core.atom.call(null, G__10577);
  }();
  return function(mem) {
    return function() {
      var G__10579__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__10578 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10578) : cljs.core.deref.call(null, G__10578);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__10579 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10580__i = 0, G__10580__a = new Array(arguments.length - 0);
          while (G__10580__i < G__10580__a.length) {
            G__10580__a[G__10580__i] = arguments[G__10580__i + 0];
            ++G__10580__i;
          }
          args = new cljs.core.IndexedSeq(G__10580__a, 0);
        }
        return G__10579__delegate.call(this, args);
      };
      G__10579.cljs$lang$maxFixedArity = 0;
      G__10579.cljs$lang$applyTo = function(arglist__10581) {
        var args = cljs.core.seq(arglist__10581);
        return G__10579__delegate(args);
      };
      G__10579.cljs$core$IFn$_invoke$arity$variadic = G__10579__delegate;
      return G__10579;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var G__10585 = arguments.length;
  switch(G__10585) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5342__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5342__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }();
    if (cljs.core.fn_QMARK_(ret)) {
      var G__10587 = ret;
      f = G__10587;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq10582) {
  var G__10583 = cljs.core.first(seq10582);
  var seq10582__$1 = cljs.core.next(seq10582);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__10583, seq10582__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var G__10589 = arguments.length;
  switch(G__10589) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__10592 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10592) : Math.floor.call(null, G__10592);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__10594 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10594) : f.call(null, G__10594);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__10596 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__10596) : cljs.core.atom.call(null, G__10596);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var argseq__5330__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5330__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq10597) {
  var G__10598 = cljs.core.first(seq10597);
  var seq10597__$1 = cljs.core.next(seq10597);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10598, seq10597__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var G__10600 = arguments.length;
  switch(G__10600) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__10601 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10601) : cljs.core.deref.call(null, G__10601);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4290__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4290__auto__) {
    return or__4290__auto__;
  } else {
    var or__4290__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4290__auto____$1) {
      return or__4290__auto____$1;
    } else {
      var and__4278__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4278__auto__) {
        var and__4278__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4278__auto____$1) {
          var and__4278__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4278__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__10627 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                  var G__10624 = i;
                  return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__10624) : child.call(null, G__10624);
                }(), function() {
                  var G__10625 = i;
                  return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__10625) : parent.call(null, G__10625);
                }());
                var G__10628 = i + 1;
                ret = G__10627;
                i = G__10628;
                continue;
              }
              break;
            }
          } else {
            return and__4278__auto____$2;
          }
        } else {
          return and__4278__auto____$1;
        }
      } else {
        return and__4278__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var G__10630 = arguments.length;
  switch(G__10630) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10631 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10631) : cljs.core.deref.call(null, G__10631);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var G__10634 = arguments.length;
  switch(G__10634) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10635 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10635) : cljs.core.deref.call(null, G__10635);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var G__10638 = arguments.length;
  switch(G__10638) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10639 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10639) : cljs.core.deref.call(null, G__10639);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var G__10642 = arguments.length;
  switch(G__10642) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
            var G__10643 = target;
            return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__10643) : targets.call(null, G__10643);
          }())));
        };
      }(tp, td, ta), m, cljs.core.cons(source, function() {
        var G__10644 = source;
        return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__10644) : sources.call(null, G__10644);
      }()));
    };
  }(tp, td, ta);
  var or__4290__auto__ = cljs.core.contains_QMARK_(function() {
    var G__10648 = tag;
    return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__10648) : tp.call(null, G__10648);
  }(), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(function() {
      var G__10649 = tag;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10649) : ta.call(null, G__10649);
    }(), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(function() {
      var G__10650 = parent;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__10650) : ta.call(null, G__10650);
    }(), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4290__auto__)) {
    return or__4290__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var G__10656 = arguments.length;
  switch(G__10656) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(function() {
    var G__10657 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10657) : parentMap.call(null, G__10657);
  }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10658 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10658) : parentMap.call(null, G__10658);
  }(), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__10652_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__10652_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__10652_SHARP_), cljs.core.second(p1__10652_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(function() {
    var G__10659 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__10659) : parentMap.call(null, G__10659);
  }(), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__10653_SHARP_, p2__10654_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__10653_SHARP_, p2__10654_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__10663 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10663) : cljs.core.deref.call(null, G__10663);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__10664 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10664) : cljs.core.deref.call(null, G__10664);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__10680 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10680) : cljs.core.deref.call(null, G__10680);
  }().call(null, x);
  var or__4290__auto__ = cljs.core.truth_(function() {
    var and__4278__auto__ = xprefs;
    if (cljs.core.truth_(and__4278__auto__)) {
      var G__10682 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__10682) : xprefs.call(null, G__10682);
    } else {
      return and__4278__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4290__auto__)) {
    return or__4290__auto__;
  } else {
    var or__4290__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__10683 = cljs.core.rest(ps);
          ps = G__10683;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4290__auto____$1)) {
      return or__4290__auto____$1;
    } else {
      var or__4290__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__10684 = cljs.core.rest(ps);
            ps = G__10684;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4290__auto____$2)) {
        return or__4290__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4290__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4290__auto__)) {
    return or__4290__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__10698) {
    var vec__10699 = p__10698;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10699, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10699, 1, null);
    var e = vec__10699;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__10700 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10700) : cljs.core.deref.call(null, G__10700);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4290__auto__ = be == null;
        if (or__4290__auto__) {
          return or__4290__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__10701 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10701) : cljs.core.deref.call(null, G__10701);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__10702 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10702) : cljs.core.deref.call(null, G__10702);
    }(), function() {
      var G__10703 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10703) : cljs.core.deref.call(null, G__10703);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj10705 = {};
  return obj10705;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._reset[function() {
        var G__10709 = x__4926__auto__;
        return goog.typeOf(G__10709);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._reset["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._add_method[function() {
        var G__10713 = x__4926__auto__;
        return goog.typeOf(G__10713);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._add_method["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._remove_method[function() {
        var G__10717 = x__4926__auto__;
        return goog.typeOf(G__10717);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._remove_method["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._prefer_method[function() {
        var G__10721 = x__4926__auto__;
        return goog.typeOf(G__10721);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._get_method[function() {
        var G__10725 = x__4926__auto__;
        return goog.typeOf(G__10725);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._get_method["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._methods[function() {
        var G__10729 = x__4926__auto__;
        return goog.typeOf(G__10729);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._methods["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._prefers[function() {
        var G__10733 = x__4926__auto__;
        return goog.typeOf(G__10733);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._prefers["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._default_dispatch_val[function() {
        var G__10737 = x__4926__auto__;
        return goog.typeOf(G__10737);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._default_dispatch_val["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (function() {
    var and__4278__auto__ = mf;
    if (and__4278__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
    } else {
      return and__4278__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4926__auto__ = mf == null ? null : mf;
    return function() {
      var or__4290__auto__ = cljs.core._dispatch_fn[function() {
        var G__10741 = x__4926__auto__;
        return goog.typeOf(G__10741);
      }()];
      if (or__4290__auto__) {
        return or__4290__auto__;
      } else {
        var or__4290__auto____$1 = cljs.core._dispatch_fn["_"];
        if (or__4290__auto____$1) {
          return or__4290__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__10743 = this$__$1;
  return goog.getUid(G__10743);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10744 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10744) : cljs.core.deref.call(null, G__10744);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__10745 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10745) : cljs.core.deref.call(null, G__10745);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10746 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10746) : cljs.core.deref.call(null, G__10746);
  }(), function() {
    var G__10747 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10747) : cljs.core.deref.call(null, G__10747);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__10748 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10748) : cljs.core.deref.call(null, G__10748);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__10749 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10749) : cljs.core.deref.call(null, G__10749);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11590 = null;
  var G__11590__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11590__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10750 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__10750) : self__.dispatch_fn.call(null, G__10750);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10751 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__10751) : target_fn.call(null, G__10751);
  };
  var G__11590__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10752 = a;
      var G__10753 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__10752, G__10753) : self__.dispatch_fn.call(null, G__10752, G__10753);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10754 = a;
    var G__10755 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__10754, G__10755) : target_fn.call(null, G__10754, G__10755);
  };
  var G__11590__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10756 = a;
      var G__10757 = b;
      var G__10758 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__10756, G__10757, G__10758) : self__.dispatch_fn.call(null, G__10756, G__10757, G__10758);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10759 = a;
    var G__10760 = b;
    var G__10761 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__10759, G__10760, G__10761) : target_fn.call(null, G__10759, G__10760, G__10761);
  };
  var G__11590__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10762 = a;
      var G__10763 = b;
      var G__10764 = c;
      var G__10765 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__10762, G__10763, G__10764, G__10765) : self__.dispatch_fn.call(null, G__10762, G__10763, G__10764, G__10765);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10766 = a;
    var G__10767 = b;
    var G__10768 = c;
    var G__10769 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__10766, G__10767, G__10768, G__10769) : target_fn.call(null, G__10766, G__10767, G__10768, G__10769);
  };
  var G__11590__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10770 = a;
      var G__10771 = b;
      var G__10772 = c;
      var G__10773 = d;
      var G__10774 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__10770, G__10771, G__10772, G__10773, G__10774) : self__.dispatch_fn.call(null, G__10770, G__10771, G__10772, G__10773, G__10774);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10775 = a;
    var G__10776 = b;
    var G__10777 = c;
    var G__10778 = d;
    var G__10779 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__10775, G__10776, G__10777, G__10778, G__10779) : target_fn.call(null, G__10775, G__10776, G__10777, G__10778, G__10779);
  };
  var G__11590__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10780 = a;
      var G__10781 = b;
      var G__10782 = c;
      var G__10783 = d;
      var G__10784 = e;
      var G__10785 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__10780, G__10781, G__10782, G__10783, G__10784, G__10785) : self__.dispatch_fn.call(null, G__10780, G__10781, G__10782, G__10783, G__10784, G__10785);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10786 = a;
    var G__10787 = b;
    var G__10788 = c;
    var G__10789 = d;
    var G__10790 = e;
    var G__10791 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__10786, G__10787, G__10788, G__10789, G__10790, G__10791) : target_fn.call(null, G__10786, G__10787, G__10788, G__10789, G__10790, G__10791);
  };
  var G__11590__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10792 = a;
      var G__10793 = b;
      var G__10794 = c;
      var G__10795 = d;
      var G__10796 = e;
      var G__10797 = f;
      var G__10798 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__10792, G__10793, G__10794, G__10795, G__10796, G__10797, G__10798) : self__.dispatch_fn.call(null, G__10792, G__10793, G__10794, G__10795, G__10796, G__10797, G__10798);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10799 = a;
    var G__10800 = b;
    var G__10801 = c;
    var G__10802 = d;
    var G__10803 = e;
    var G__10804 = f;
    var G__10805 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805) : target_fn.call(null, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805);
  };
  var G__11590__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10806 = a;
      var G__10807 = b;
      var G__10808 = c;
      var G__10809 = d;
      var G__10810 = e;
      var G__10811 = f;
      var G__10812 = g;
      var G__10813 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813) : self__.dispatch_fn.call(null, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10814 = a;
    var G__10815 = b;
    var G__10816 = c;
    var G__10817 = d;
    var G__10818 = e;
    var G__10819 = f;
    var G__10820 = g;
    var G__10821 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821) : target_fn.call(null, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821);
  };
  var G__11590__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10822 = a;
      var G__10823 = b;
      var G__10824 = c;
      var G__10825 = d;
      var G__10826 = e;
      var G__10827 = f;
      var G__10828 = g;
      var G__10829 = h;
      var G__10830 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__10822, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830) : self__.dispatch_fn.call(null, G__10822, G__10823, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10831 = a;
    var G__10832 = b;
    var G__10833 = c;
    var G__10834 = d;
    var G__10835 = e;
    var G__10836 = f;
    var G__10837 = g;
    var G__10838 = h;
    var G__10839 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839) : target_fn.call(null, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839);
  };
  var G__11590__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10840 = a;
      var G__10841 = b;
      var G__10842 = c;
      var G__10843 = d;
      var G__10844 = e;
      var G__10845 = f;
      var G__10846 = g;
      var G__10847 = h;
      var G__10848 = i;
      var G__10849 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849) : self__.dispatch_fn.call(null, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10850 = a;
    var G__10851 = b;
    var G__10852 = c;
    var G__10853 = d;
    var G__10854 = e;
    var G__10855 = f;
    var G__10856 = g;
    var G__10857 = h;
    var G__10858 = i;
    var G__10859 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859) : target_fn.call(null, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859);
  };
  var G__11590__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10860 = a;
      var G__10861 = b;
      var G__10862 = c;
      var G__10863 = d;
      var G__10864 = e;
      var G__10865 = f;
      var G__10866 = g;
      var G__10867 = h;
      var G__10868 = i;
      var G__10869 = j;
      var G__10870 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870) : self__.dispatch_fn.call(null, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10871 = a;
    var G__10872 = b;
    var G__10873 = c;
    var G__10874 = d;
    var G__10875 = e;
    var G__10876 = f;
    var G__10877 = g;
    var G__10878 = h;
    var G__10879 = i;
    var G__10880 = j;
    var G__10881 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881) : target_fn.call(null, G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877, G__10878, G__10879, G__10880, G__10881);
  };
  var G__11590__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10882 = a;
      var G__10883 = b;
      var G__10884 = c;
      var G__10885 = d;
      var G__10886 = e;
      var G__10887 = f;
      var G__10888 = g;
      var G__10889 = h;
      var G__10890 = i;
      var G__10891 = j;
      var G__10892 = k;
      var G__10893 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891, G__10892, G__10893) : self__.dispatch_fn.call(null, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889, G__10890, G__10891, G__10892, G__10893);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10894 = a;
    var G__10895 = b;
    var G__10896 = c;
    var G__10897 = d;
    var G__10898 = e;
    var G__10899 = f;
    var G__10900 = g;
    var G__10901 = h;
    var G__10902 = i;
    var G__10903 = j;
    var G__10904 = k;
    var G__10905 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904, G__10905) : target_fn.call(null, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902, G__10903, G__10904, G__10905);
  };
  var G__11590__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10906 = a;
      var G__10907 = b;
      var G__10908 = c;
      var G__10909 = d;
      var G__10910 = e;
      var G__10911 = f;
      var G__10912 = g;
      var G__10913 = h;
      var G__10914 = i;
      var G__10915 = j;
      var G__10916 = k;
      var G__10917 = l;
      var G__10918 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916, G__10917, G__10918) : self__.dispatch_fn.call(null, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916, G__10917, G__10918);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10919 = a;
    var G__10920 = b;
    var G__10921 = c;
    var G__10922 = d;
    var G__10923 = e;
    var G__10924 = f;
    var G__10925 = g;
    var G__10926 = h;
    var G__10927 = i;
    var G__10928 = j;
    var G__10929 = k;
    var G__10930 = l;
    var G__10931 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931) : target_fn.call(null, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931);
  };
  var G__11590__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10932 = a;
      var G__10933 = b;
      var G__10934 = c;
      var G__10935 = d;
      var G__10936 = e;
      var G__10937 = f;
      var G__10938 = g;
      var G__10939 = h;
      var G__10940 = i;
      var G__10941 = j;
      var G__10942 = k;
      var G__10943 = l;
      var G__10944 = m;
      var G__10945 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945) : self__.dispatch_fn.call(null, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10946 = a;
    var G__10947 = b;
    var G__10948 = c;
    var G__10949 = d;
    var G__10950 = e;
    var G__10951 = f;
    var G__10952 = g;
    var G__10953 = h;
    var G__10954 = i;
    var G__10955 = j;
    var G__10956 = k;
    var G__10957 = l;
    var G__10958 = m;
    var G__10959 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__10946, G__10947, G__10948, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959) : target_fn.call(null, G__10946, G__10947, G__10948, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959);
  };
  var G__11590__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10960 = a;
      var G__10961 = b;
      var G__10962 = c;
      var G__10963 = d;
      var G__10964 = e;
      var G__10965 = f;
      var G__10966 = g;
      var G__10967 = h;
      var G__10968 = i;
      var G__10969 = j;
      var G__10970 = k;
      var G__10971 = l;
      var G__10972 = m;
      var G__10973 = n;
      var G__10974 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__10960, G__10961, G__10962, G__10963, G__10964, G__10965, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974) : self__.dispatch_fn.call(null, G__10960, G__10961, G__10962, G__10963, G__10964, G__10965, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__10975 = a;
    var G__10976 = b;
    var G__10977 = c;
    var G__10978 = d;
    var G__10979 = e;
    var G__10980 = f;
    var G__10981 = g;
    var G__10982 = h;
    var G__10983 = i;
    var G__10984 = j;
    var G__10985 = k;
    var G__10986 = l;
    var G__10987 = m;
    var G__10988 = n;
    var G__10989 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__10975, G__10976, G__10977, G__10978, G__10979, G__10980, G__10981, G__10982, G__10983, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989) : target_fn.call(null, G__10975, G__10976, G__10977, G__10978, G__10979, G__10980, G__10981, G__10982, G__10983, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989);
  };
  var G__11590__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__10990 = a;
      var G__10991 = b;
      var G__10992 = c;
      var G__10993 = d;
      var G__10994 = e;
      var G__10995 = f;
      var G__10996 = g;
      var G__10997 = h;
      var G__10998 = i;
      var G__10999 = j;
      var G__11000 = k;
      var G__11001 = l;
      var G__11002 = m;
      var G__11003 = n;
      var G__11004 = o;
      var G__11005 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__10990, G__10991, G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002, G__11003, G__11004, G__11005) : self__.dispatch_fn.call(null, G__10990, G__10991, G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001, G__11002, G__11003, G__11004, G__11005);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11006 = a;
    var G__11007 = b;
    var G__11008 = c;
    var G__11009 = d;
    var G__11010 = e;
    var G__11011 = f;
    var G__11012 = g;
    var G__11013 = h;
    var G__11014 = i;
    var G__11015 = j;
    var G__11016 = k;
    var G__11017 = l;
    var G__11018 = m;
    var G__11019 = n;
    var G__11020 = o;
    var G__11021 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11006, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018, G__11019, G__11020, G__11021) : target_fn.call(null, G__11006, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018, G__11019, G__11020, G__11021);
  };
  var G__11590__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11022 = a;
      var G__11023 = b;
      var G__11024 = c;
      var G__11025 = d;
      var G__11026 = e;
      var G__11027 = f;
      var G__11028 = g;
      var G__11029 = h;
      var G__11030 = i;
      var G__11031 = j;
      var G__11032 = k;
      var G__11033 = l;
      var G__11034 = m;
      var G__11035 = n;
      var G__11036 = o;
      var G__11037 = p;
      var G__11038 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11022, G__11023, G__11024, G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034, G__11035, G__11036, G__11037, G__11038) : self__.dispatch_fn.call(null, G__11022, G__11023, G__11024, G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034, G__11035, G__11036, G__11037, G__11038);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11039 = a;
    var G__11040 = b;
    var G__11041 = c;
    var G__11042 = d;
    var G__11043 = e;
    var G__11044 = f;
    var G__11045 = g;
    var G__11046 = h;
    var G__11047 = i;
    var G__11048 = j;
    var G__11049 = k;
    var G__11050 = l;
    var G__11051 = m;
    var G__11052 = n;
    var G__11053 = o;
    var G__11054 = p;
    var G__11055 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11039, G__11040, G__11041, G__11042, G__11043, G__11044, G__11045, G__11046, G__11047, G__11048, G__11049, G__11050, G__11051, G__11052, G__11053, G__11054, G__11055) : target_fn.call(null, G__11039, G__11040, G__11041, G__11042, G__11043, G__11044, G__11045, G__11046, G__11047, G__11048, G__11049, G__11050, G__11051, G__11052, G__11053, G__11054, G__11055);
  };
  var G__11590__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11056 = a;
      var G__11057 = b;
      var G__11058 = c;
      var G__11059 = d;
      var G__11060 = e;
      var G__11061 = f;
      var G__11062 = g;
      var G__11063 = h;
      var G__11064 = i;
      var G__11065 = j;
      var G__11066 = k;
      var G__11067 = l;
      var G__11068 = m;
      var G__11069 = n;
      var G__11070 = o;
      var G__11071 = p;
      var G__11072 = q;
      var G__11073 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11056, G__11057, G__11058, G__11059, G__11060, G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067, G__11068, G__11069, G__11070, G__11071, G__11072, G__11073) : self__.dispatch_fn.call(null, G__11056, G__11057, G__11058, G__11059, G__11060, G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067, G__11068, G__11069, G__11070, G__11071, G__11072, G__11073);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11074 = a;
    var G__11075 = b;
    var G__11076 = c;
    var G__11077 = d;
    var G__11078 = e;
    var G__11079 = f;
    var G__11080 = g;
    var G__11081 = h;
    var G__11082 = i;
    var G__11083 = j;
    var G__11084 = k;
    var G__11085 = l;
    var G__11086 = m;
    var G__11087 = n;
    var G__11088 = o;
    var G__11089 = p;
    var G__11090 = q;
    var G__11091 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11074, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082, G__11083, G__11084, G__11085, G__11086, G__11087, G__11088, G__11089, G__11090, G__11091) : target_fn.call(null, G__11074, G__11075, G__11076, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082, G__11083, G__11084, G__11085, G__11086, G__11087, G__11088, G__11089, G__11090, G__11091);
  };
  var G__11590__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11092 = a;
      var G__11093 = b;
      var G__11094 = c;
      var G__11095 = d;
      var G__11096 = e;
      var G__11097 = f;
      var G__11098 = g;
      var G__11099 = h;
      var G__11100 = i;
      var G__11101 = j;
      var G__11102 = k;
      var G__11103 = l;
      var G__11104 = m;
      var G__11105 = n;
      var G__11106 = o;
      var G__11107 = p;
      var G__11108 = q;
      var G__11109 = r;
      var G__11110 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11092, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108, G__11109, G__11110) : self__.dispatch_fn.call(null, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108, 
      G__11109, G__11110);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11111 = a;
    var G__11112 = b;
    var G__11113 = c;
    var G__11114 = d;
    var G__11115 = e;
    var G__11116 = f;
    var G__11117 = g;
    var G__11118 = h;
    var G__11119 = i;
    var G__11120 = j;
    var G__11121 = k;
    var G__11122 = l;
    var G__11123 = m;
    var G__11124 = n;
    var G__11125 = o;
    var G__11126 = p;
    var G__11127 = q;
    var G__11128 = r;
    var G__11129 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129) : target_fn.call(null, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129);
  };
  var G__11590__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__11130 = a;
      var G__11131 = b;
      var G__11132 = c;
      var G__11133 = d;
      var G__11134 = e;
      var G__11135 = f;
      var G__11136 = g;
      var G__11137 = h;
      var G__11138 = i;
      var G__11139 = j;
      var G__11140 = k;
      var G__11141 = l;
      var G__11142 = m;
      var G__11143 = n;
      var G__11144 = o;
      var G__11145 = p;
      var G__11146 = q;
      var G__11147 = r;
      var G__11148 = s;
      var G__11149 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149) : self__.dispatch_fn.call(null, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, 
      G__11146, G__11147, G__11148, G__11149);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__11150 = a;
    var G__11151 = b;
    var G__11152 = c;
    var G__11153 = d;
    var G__11154 = e;
    var G__11155 = f;
    var G__11156 = g;
    var G__11157 = h;
    var G__11158 = i;
    var G__11159 = j;
    var G__11160 = k;
    var G__11161 = l;
    var G__11162 = m;
    var G__11163 = n;
    var G__11164 = o;
    var G__11165 = p;
    var G__11166 = q;
    var G__11167 = r;
    var G__11168 = s;
    var G__11169 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, G__11169) : target_fn.call(null, G__11150, G__11151, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167, G__11168, 
    G__11169);
  };
  var G__11590__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11590 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11590__1.call(this, self__);
      case 2:
        return G__11590__2.call(this, self__, a);
      case 3:
        return G__11590__3.call(this, self__, a, b);
      case 4:
        return G__11590__4.call(this, self__, a, b, c);
      case 5:
        return G__11590__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11590__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11590__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11590__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11590__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11590__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11590__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11590__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11590__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11590__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11590__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11590__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11590__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11590__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11590__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11590__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11590__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11590__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11590.cljs$core$IFn$_invoke$arity$1 = G__11590__1;
  G__11590.cljs$core$IFn$_invoke$arity$2 = G__11590__2;
  G__11590.cljs$core$IFn$_invoke$arity$3 = G__11590__3;
  G__11590.cljs$core$IFn$_invoke$arity$4 = G__11590__4;
  G__11590.cljs$core$IFn$_invoke$arity$5 = G__11590__5;
  G__11590.cljs$core$IFn$_invoke$arity$6 = G__11590__6;
  G__11590.cljs$core$IFn$_invoke$arity$7 = G__11590__7;
  G__11590.cljs$core$IFn$_invoke$arity$8 = G__11590__8;
  G__11590.cljs$core$IFn$_invoke$arity$9 = G__11590__9;
  G__11590.cljs$core$IFn$_invoke$arity$10 = G__11590__10;
  G__11590.cljs$core$IFn$_invoke$arity$11 = G__11590__11;
  G__11590.cljs$core$IFn$_invoke$arity$12 = G__11590__12;
  G__11590.cljs$core$IFn$_invoke$arity$13 = G__11590__13;
  G__11590.cljs$core$IFn$_invoke$arity$14 = G__11590__14;
  G__11590.cljs$core$IFn$_invoke$arity$15 = G__11590__15;
  G__11590.cljs$core$IFn$_invoke$arity$16 = G__11590__16;
  G__11590.cljs$core$IFn$_invoke$arity$17 = G__11590__17;
  G__11590.cljs$core$IFn$_invoke$arity$18 = G__11590__18;
  G__11590.cljs$core$IFn$_invoke$arity$19 = G__11590__19;
  G__11590.cljs$core$IFn$_invoke$arity$20 = G__11590__20;
  G__11590.cljs$core$IFn$_invoke$arity$21 = G__11590__21;
  G__11590.cljs$core$IFn$_invoke$arity$22 = G__11590__22;
  return G__11590;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args10742) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10742)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11170 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__11170) : self__.dispatch_fn.call(null, G__11170);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11171 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__11171) : target_fn.call(null, G__11171);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11172 = a;
    var G__11173 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__11172, G__11173) : self__.dispatch_fn.call(null, G__11172, G__11173);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11174 = a;
  var G__11175 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__11174, G__11175) : target_fn.call(null, G__11174, G__11175);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11176 = a;
    var G__11177 = b;
    var G__11178 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__11176, G__11177, G__11178) : self__.dispatch_fn.call(null, G__11176, G__11177, G__11178);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11179 = a;
  var G__11180 = b;
  var G__11181 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__11179, G__11180, G__11181) : target_fn.call(null, G__11179, G__11180, G__11181);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11182 = a;
    var G__11183 = b;
    var G__11184 = c;
    var G__11185 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__11182, G__11183, G__11184, G__11185) : self__.dispatch_fn.call(null, G__11182, G__11183, G__11184, G__11185);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11186 = a;
  var G__11187 = b;
  var G__11188 = c;
  var G__11189 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__11186, G__11187, G__11188, G__11189) : target_fn.call(null, G__11186, G__11187, G__11188, G__11189);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11190 = a;
    var G__11191 = b;
    var G__11192 = c;
    var G__11193 = d;
    var G__11194 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__11190, G__11191, G__11192, G__11193, G__11194) : self__.dispatch_fn.call(null, G__11190, G__11191, G__11192, G__11193, G__11194);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11195 = a;
  var G__11196 = b;
  var G__11197 = c;
  var G__11198 = d;
  var G__11199 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__11195, G__11196, G__11197, G__11198, G__11199) : target_fn.call(null, G__11195, G__11196, G__11197, G__11198, G__11199);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11200 = a;
    var G__11201 = b;
    var G__11202 = c;
    var G__11203 = d;
    var G__11204 = e;
    var G__11205 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__11200, G__11201, G__11202, G__11203, G__11204, G__11205) : self__.dispatch_fn.call(null, G__11200, G__11201, G__11202, G__11203, G__11204, G__11205);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11206 = a;
  var G__11207 = b;
  var G__11208 = c;
  var G__11209 = d;
  var G__11210 = e;
  var G__11211 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__11206, G__11207, G__11208, G__11209, G__11210, G__11211) : target_fn.call(null, G__11206, G__11207, G__11208, G__11209, G__11210, G__11211);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11212 = a;
    var G__11213 = b;
    var G__11214 = c;
    var G__11215 = d;
    var G__11216 = e;
    var G__11217 = f;
    var G__11218 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__11212, G__11213, G__11214, G__11215, G__11216, G__11217, G__11218) : self__.dispatch_fn.call(null, G__11212, G__11213, G__11214, G__11215, G__11216, G__11217, G__11218);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11219 = a;
  var G__11220 = b;
  var G__11221 = c;
  var G__11222 = d;
  var G__11223 = e;
  var G__11224 = f;
  var G__11225 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__11219, G__11220, G__11221, G__11222, G__11223, G__11224, G__11225) : target_fn.call(null, G__11219, G__11220, G__11221, G__11222, G__11223, G__11224, G__11225);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11226 = a;
    var G__11227 = b;
    var G__11228 = c;
    var G__11229 = d;
    var G__11230 = e;
    var G__11231 = f;
    var G__11232 = g;
    var G__11233 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232, G__11233) : self__.dispatch_fn.call(null, G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232, G__11233);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11234 = a;
  var G__11235 = b;
  var G__11236 = c;
  var G__11237 = d;
  var G__11238 = e;
  var G__11239 = f;
  var G__11240 = g;
  var G__11241 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241) : target_fn.call(null, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11242 = a;
    var G__11243 = b;
    var G__11244 = c;
    var G__11245 = d;
    var G__11246 = e;
    var G__11247 = f;
    var G__11248 = g;
    var G__11249 = h;
    var G__11250 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__11242, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250) : self__.dispatch_fn.call(null, G__11242, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11251 = a;
  var G__11252 = b;
  var G__11253 = c;
  var G__11254 = d;
  var G__11255 = e;
  var G__11256 = f;
  var G__11257 = g;
  var G__11258 = h;
  var G__11259 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259) : target_fn.call(null, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11260 = a;
    var G__11261 = b;
    var G__11262 = c;
    var G__11263 = d;
    var G__11264 = e;
    var G__11265 = f;
    var G__11266 = g;
    var G__11267 = h;
    var G__11268 = i;
    var G__11269 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__11260, G__11261, G__11262, G__11263, G__11264, G__11265, G__11266, G__11267, G__11268, G__11269) : self__.dispatch_fn.call(null, G__11260, G__11261, G__11262, G__11263, G__11264, G__11265, G__11266, G__11267, G__11268, G__11269);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11270 = a;
  var G__11271 = b;
  var G__11272 = c;
  var G__11273 = d;
  var G__11274 = e;
  var G__11275 = f;
  var G__11276 = g;
  var G__11277 = h;
  var G__11278 = i;
  var G__11279 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__11270, G__11271, G__11272, G__11273, G__11274, G__11275, G__11276, G__11277, G__11278, G__11279) : target_fn.call(null, G__11270, G__11271, G__11272, G__11273, G__11274, G__11275, G__11276, G__11277, G__11278, G__11279);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11280 = a;
    var G__11281 = b;
    var G__11282 = c;
    var G__11283 = d;
    var G__11284 = e;
    var G__11285 = f;
    var G__11286 = g;
    var G__11287 = h;
    var G__11288 = i;
    var G__11289 = j;
    var G__11290 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__11280, G__11281, G__11282, G__11283, G__11284, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290) : self__.dispatch_fn.call(null, G__11280, G__11281, G__11282, G__11283, G__11284, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11291 = a;
  var G__11292 = b;
  var G__11293 = c;
  var G__11294 = d;
  var G__11295 = e;
  var G__11296 = f;
  var G__11297 = g;
  var G__11298 = h;
  var G__11299 = i;
  var G__11300 = j;
  var G__11301 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__11291, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297, G__11298, G__11299, G__11300, G__11301) : target_fn.call(null, G__11291, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297, G__11298, G__11299, G__11300, G__11301);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11302 = a;
    var G__11303 = b;
    var G__11304 = c;
    var G__11305 = d;
    var G__11306 = e;
    var G__11307 = f;
    var G__11308 = g;
    var G__11309 = h;
    var G__11310 = i;
    var G__11311 = j;
    var G__11312 = k;
    var G__11313 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__11302, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308, G__11309, G__11310, G__11311, G__11312, G__11313) : self__.dispatch_fn.call(null, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308, G__11309, G__11310, G__11311, G__11312, G__11313);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11314 = a;
  var G__11315 = b;
  var G__11316 = c;
  var G__11317 = d;
  var G__11318 = e;
  var G__11319 = f;
  var G__11320 = g;
  var G__11321 = h;
  var G__11322 = i;
  var G__11323 = j;
  var G__11324 = k;
  var G__11325 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__11314, G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324, G__11325) : target_fn.call(null, G__11314, G__11315, G__11316, G__11317, G__11318, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324, G__11325);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11326 = a;
    var G__11327 = b;
    var G__11328 = c;
    var G__11329 = d;
    var G__11330 = e;
    var G__11331 = f;
    var G__11332 = g;
    var G__11333 = h;
    var G__11334 = i;
    var G__11335 = j;
    var G__11336 = k;
    var G__11337 = l;
    var G__11338 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__11326, G__11327, G__11328, G__11329, G__11330, G__11331, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338) : self__.dispatch_fn.call(null, G__11326, G__11327, G__11328, G__11329, G__11330, G__11331, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11339 = a;
  var G__11340 = b;
  var G__11341 = c;
  var G__11342 = d;
  var G__11343 = e;
  var G__11344 = f;
  var G__11345 = g;
  var G__11346 = h;
  var G__11347 = i;
  var G__11348 = j;
  var G__11349 = k;
  var G__11350 = l;
  var G__11351 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__11339, G__11340, G__11341, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351) : target_fn.call(null, G__11339, G__11340, G__11341, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11352 = a;
    var G__11353 = b;
    var G__11354 = c;
    var G__11355 = d;
    var G__11356 = e;
    var G__11357 = f;
    var G__11358 = g;
    var G__11359 = h;
    var G__11360 = i;
    var G__11361 = j;
    var G__11362 = k;
    var G__11363 = l;
    var G__11364 = m;
    var G__11365 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__11352, G__11353, G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360, G__11361, G__11362, G__11363, G__11364, G__11365) : self__.dispatch_fn.call(null, G__11352, G__11353, G__11354, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360, G__11361, G__11362, G__11363, G__11364, G__11365);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11366 = a;
  var G__11367 = b;
  var G__11368 = c;
  var G__11369 = d;
  var G__11370 = e;
  var G__11371 = f;
  var G__11372 = g;
  var G__11373 = h;
  var G__11374 = i;
  var G__11375 = j;
  var G__11376 = k;
  var G__11377 = l;
  var G__11378 = m;
  var G__11379 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__11366, G__11367, G__11368, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379) : target_fn.call(null, G__11366, G__11367, G__11368, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11380 = a;
    var G__11381 = b;
    var G__11382 = c;
    var G__11383 = d;
    var G__11384 = e;
    var G__11385 = f;
    var G__11386 = g;
    var G__11387 = h;
    var G__11388 = i;
    var G__11389 = j;
    var G__11390 = k;
    var G__11391 = l;
    var G__11392 = m;
    var G__11393 = n;
    var G__11394 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__11380, G__11381, G__11382, G__11383, G__11384, G__11385, G__11386, G__11387, G__11388, G__11389, G__11390, G__11391, G__11392, G__11393, G__11394) : self__.dispatch_fn.call(null, G__11380, G__11381, G__11382, G__11383, G__11384, G__11385, G__11386, G__11387, G__11388, G__11389, G__11390, G__11391, G__11392, G__11393, G__11394);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11395 = a;
  var G__11396 = b;
  var G__11397 = c;
  var G__11398 = d;
  var G__11399 = e;
  var G__11400 = f;
  var G__11401 = g;
  var G__11402 = h;
  var G__11403 = i;
  var G__11404 = j;
  var G__11405 = k;
  var G__11406 = l;
  var G__11407 = m;
  var G__11408 = n;
  var G__11409 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__11395, G__11396, G__11397, G__11398, G__11399, G__11400, G__11401, G__11402, G__11403, G__11404, G__11405, G__11406, G__11407, G__11408, G__11409) : target_fn.call(null, G__11395, G__11396, G__11397, G__11398, G__11399, G__11400, G__11401, G__11402, G__11403, G__11404, G__11405, G__11406, G__11407, G__11408, G__11409);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11410 = a;
    var G__11411 = b;
    var G__11412 = c;
    var G__11413 = d;
    var G__11414 = e;
    var G__11415 = f;
    var G__11416 = g;
    var G__11417 = h;
    var G__11418 = i;
    var G__11419 = j;
    var G__11420 = k;
    var G__11421 = l;
    var G__11422 = m;
    var G__11423 = n;
    var G__11424 = o;
    var G__11425 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__11410, G__11411, G__11412, G__11413, G__11414, G__11415, G__11416, G__11417, G__11418, G__11419, G__11420, G__11421, G__11422, G__11423, G__11424, G__11425) : self__.dispatch_fn.call(null, G__11410, G__11411, G__11412, G__11413, G__11414, G__11415, G__11416, G__11417, G__11418, G__11419, G__11420, G__11421, G__11422, G__11423, G__11424, G__11425);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11426 = a;
  var G__11427 = b;
  var G__11428 = c;
  var G__11429 = d;
  var G__11430 = e;
  var G__11431 = f;
  var G__11432 = g;
  var G__11433 = h;
  var G__11434 = i;
  var G__11435 = j;
  var G__11436 = k;
  var G__11437 = l;
  var G__11438 = m;
  var G__11439 = n;
  var G__11440 = o;
  var G__11441 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__11426, G__11427, G__11428, G__11429, G__11430, G__11431, G__11432, G__11433, G__11434, G__11435, G__11436, G__11437, G__11438, G__11439, G__11440, G__11441) : target_fn.call(null, G__11426, G__11427, G__11428, G__11429, G__11430, G__11431, G__11432, G__11433, G__11434, G__11435, G__11436, G__11437, G__11438, G__11439, G__11440, G__11441);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11442 = a;
    var G__11443 = b;
    var G__11444 = c;
    var G__11445 = d;
    var G__11446 = e;
    var G__11447 = f;
    var G__11448 = g;
    var G__11449 = h;
    var G__11450 = i;
    var G__11451 = j;
    var G__11452 = k;
    var G__11453 = l;
    var G__11454 = m;
    var G__11455 = n;
    var G__11456 = o;
    var G__11457 = p;
    var G__11458 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__11442, G__11443, G__11444, G__11445, G__11446, G__11447, G__11448, G__11449, G__11450, G__11451, G__11452, G__11453, G__11454, G__11455, G__11456, G__11457, G__11458) : self__.dispatch_fn.call(null, G__11442, G__11443, G__11444, G__11445, G__11446, G__11447, G__11448, G__11449, G__11450, G__11451, G__11452, G__11453, G__11454, G__11455, G__11456, G__11457, G__11458);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11459 = a;
  var G__11460 = b;
  var G__11461 = c;
  var G__11462 = d;
  var G__11463 = e;
  var G__11464 = f;
  var G__11465 = g;
  var G__11466 = h;
  var G__11467 = i;
  var G__11468 = j;
  var G__11469 = k;
  var G__11470 = l;
  var G__11471 = m;
  var G__11472 = n;
  var G__11473 = o;
  var G__11474 = p;
  var G__11475 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__11459, G__11460, G__11461, G__11462, G__11463, G__11464, G__11465, G__11466, G__11467, G__11468, G__11469, G__11470, G__11471, G__11472, G__11473, G__11474, G__11475) : target_fn.call(null, G__11459, G__11460, G__11461, G__11462, G__11463, G__11464, G__11465, G__11466, G__11467, G__11468, G__11469, G__11470, G__11471, G__11472, G__11473, G__11474, G__11475);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11476 = a;
    var G__11477 = b;
    var G__11478 = c;
    var G__11479 = d;
    var G__11480 = e;
    var G__11481 = f;
    var G__11482 = g;
    var G__11483 = h;
    var G__11484 = i;
    var G__11485 = j;
    var G__11486 = k;
    var G__11487 = l;
    var G__11488 = m;
    var G__11489 = n;
    var G__11490 = o;
    var G__11491 = p;
    var G__11492 = q;
    var G__11493 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__11476, G__11477, G__11478, G__11479, G__11480, G__11481, G__11482, G__11483, G__11484, G__11485, G__11486, G__11487, G__11488, G__11489, G__11490, G__11491, G__11492, G__11493) : self__.dispatch_fn.call(null, G__11476, G__11477, G__11478, G__11479, G__11480, G__11481, G__11482, G__11483, G__11484, G__11485, G__11486, G__11487, G__11488, G__11489, G__11490, G__11491, G__11492, G__11493);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11494 = a;
  var G__11495 = b;
  var G__11496 = c;
  var G__11497 = d;
  var G__11498 = e;
  var G__11499 = f;
  var G__11500 = g;
  var G__11501 = h;
  var G__11502 = i;
  var G__11503 = j;
  var G__11504 = k;
  var G__11505 = l;
  var G__11506 = m;
  var G__11507 = n;
  var G__11508 = o;
  var G__11509 = p;
  var G__11510 = q;
  var G__11511 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__11494, G__11495, G__11496, G__11497, G__11498, G__11499, G__11500, G__11501, G__11502, G__11503, G__11504, G__11505, G__11506, G__11507, G__11508, G__11509, G__11510, G__11511) : target_fn.call(null, G__11494, G__11495, G__11496, G__11497, G__11498, G__11499, G__11500, G__11501, G__11502, G__11503, G__11504, G__11505, G__11506, G__11507, G__11508, G__11509, G__11510, G__11511);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11512 = a;
    var G__11513 = b;
    var G__11514 = c;
    var G__11515 = d;
    var G__11516 = e;
    var G__11517 = f;
    var G__11518 = g;
    var G__11519 = h;
    var G__11520 = i;
    var G__11521 = j;
    var G__11522 = k;
    var G__11523 = l;
    var G__11524 = m;
    var G__11525 = n;
    var G__11526 = o;
    var G__11527 = p;
    var G__11528 = q;
    var G__11529 = r;
    var G__11530 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__11512, G__11513, G__11514, G__11515, G__11516, G__11517, G__11518, G__11519, G__11520, G__11521, G__11522, G__11523, G__11524, G__11525, G__11526, G__11527, G__11528, G__11529, G__11530) : self__.dispatch_fn.call(null, G__11512, G__11513, G__11514, G__11515, G__11516, G__11517, G__11518, G__11519, G__11520, G__11521, G__11522, G__11523, G__11524, G__11525, G__11526, G__11527, G__11528, 
    G__11529, G__11530);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11531 = a;
  var G__11532 = b;
  var G__11533 = c;
  var G__11534 = d;
  var G__11535 = e;
  var G__11536 = f;
  var G__11537 = g;
  var G__11538 = h;
  var G__11539 = i;
  var G__11540 = j;
  var G__11541 = k;
  var G__11542 = l;
  var G__11543 = m;
  var G__11544 = n;
  var G__11545 = o;
  var G__11546 = p;
  var G__11547 = q;
  var G__11548 = r;
  var G__11549 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__11531, G__11532, G__11533, G__11534, G__11535, G__11536, G__11537, G__11538, G__11539, G__11540, G__11541, G__11542, G__11543, G__11544, G__11545, G__11546, G__11547, G__11548, G__11549) : target_fn.call(null, G__11531, G__11532, G__11533, G__11534, G__11535, G__11536, G__11537, G__11538, G__11539, G__11540, G__11541, G__11542, G__11543, G__11544, G__11545, G__11546, G__11547, G__11548, G__11549);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__11550 = a;
    var G__11551 = b;
    var G__11552 = c;
    var G__11553 = d;
    var G__11554 = e;
    var G__11555 = f;
    var G__11556 = g;
    var G__11557 = h;
    var G__11558 = i;
    var G__11559 = j;
    var G__11560 = k;
    var G__11561 = l;
    var G__11562 = m;
    var G__11563 = n;
    var G__11564 = o;
    var G__11565 = p;
    var G__11566 = q;
    var G__11567 = r;
    var G__11568 = s;
    var G__11569 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__11550, G__11551, G__11552, G__11553, G__11554, G__11555, G__11556, G__11557, G__11558, G__11559, G__11560, G__11561, G__11562, G__11563, G__11564, G__11565, G__11566, G__11567, G__11568, G__11569) : self__.dispatch_fn.call(null, G__11550, G__11551, G__11552, G__11553, G__11554, G__11555, G__11556, G__11557, G__11558, G__11559, G__11560, G__11561, G__11562, G__11563, G__11564, G__11565, 
    G__11566, G__11567, G__11568, G__11569);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__11570 = a;
  var G__11571 = b;
  var G__11572 = c;
  var G__11573 = d;
  var G__11574 = e;
  var G__11575 = f;
  var G__11576 = g;
  var G__11577 = h;
  var G__11578 = i;
  var G__11579 = j;
  var G__11580 = k;
  var G__11581 = l;
  var G__11582 = m;
  var G__11583 = n;
  var G__11584 = o;
  var G__11585 = p;
  var G__11586 = q;
  var G__11587 = r;
  var G__11588 = s;
  var G__11589 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__11570, G__11571, G__11572, G__11573, G__11574, G__11575, G__11576, G__11577, G__11578, G__11579, G__11580, G__11581, G__11582, G__11583, G__11584, G__11585, G__11586, G__11587, G__11588, G__11589) : target_fn.call(null, G__11570, G__11571, G__11572, G__11573, G__11574, G__11575, G__11576, G__11577, G__11578, G__11579, G__11580, G__11581, G__11582, G__11583, G__11584, G__11585, G__11586, G__11587, G__11588, 
  G__11589);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__11591 = self__.uuid;
  var G__11592 = other.uuid;
  return goog.array.defaultCompare(G__11591, G__11592);
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__11593 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__11593);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4869__auto__, writer__4870__auto__, opt__4871__auto__) {
  return cljs.core._write(writer__4870__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var G__11595 = arguments.length;
  switch(G__11595) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__11601 = x;
      var G__11602 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11601, G__11602) : pred.call(null, G__11601, G__11602);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__11603 = y;
        var G__11604 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__11603, G__11604) : pred.call(null, G__11603, G__11604);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("dommy.utils");
goog.require("cljs.core");
dommy.utils.dissoc_in = function dommy$utils$dissoc_in(m, p__7208) {
  var vec__7210 = p__7208;
  var k = cljs.core.nth.call(null, vec__7210, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__7210, 1);
  if (cljs.core.truth_(m)) {
    var temp__4124__auto__ = function() {
      var and__4264__auto__ = ks;
      if (cljs.core.truth_(and__4264__auto__)) {
        return dommy$utils$dissoc_in.call(null, m.call(null, k), ks);
      } else {
        return and__4264__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var res = temp__4124__auto__;
      return cljs.core.assoc.call(null, m, k, res);
    } else {
      var res = cljs.core.dissoc.call(null, m, k);
      if (cljs.core.empty_QMARK_.call(null, res)) {
        return null;
      } else {
        return res;
      }
    }
  } else {
    return null;
  }
};
dommy.utils.__GT_Array = function dommy$utils$__GT_Array(array_like) {
  return Array.prototype.slice.call(array_like);
};
dommy.utils.as_str = function dommy$utils$as_str(s) {
  if (s instanceof cljs.core.Keyword) {
    return[cljs.core.str(function() {
      var G__7212 = cljs.core.namespace.call(null, s);
      var G__7212__$1 = G__7212 == null ? null : [cljs.core.str(G__7212), cljs.core.str("/")].join("");
      return G__7212__$1;
    }()), cljs.core.str(cljs.core.name.call(null, s))].join("");
  } else {
    return s;
  }
};
dommy.utils.class_match_QMARK_ = function dommy$utils$class_match_QMARK_(class_name, class$, idx) {
  var and__4264__auto__ = idx === 0 || " " === class_name.charAt(idx - 1);
  if (and__4264__auto__) {
    var total_len = class_name.length;
    var stop = idx + class$.length;
    if (stop <= total_len) {
      return stop === total_len || " " === class_name.charAt(stop);
    } else {
      return null;
    }
  } else {
    return and__4264__auto__;
  }
};
dommy.utils.class_index = function dommy$utils$class_index(class_name, class$) {
  var start_from = 0;
  while (true) {
    var i = class_name.indexOf(class$, start_from);
    if (i >= 0) {
      if (dommy.utils.class_match_QMARK_.call(null, class_name, class$, i)) {
        return i;
      } else {
        var G__7213 = i + class$.length;
        start_from = G__7213;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
dommy.utils.remove_class_str = function dommy$utils$remove_class_str(init_class_name, class$) {
  var class_name = init_class_name;
  while (true) {
    var class_len = class_name.length;
    var temp__4124__auto__ = dommy.utils.class_index.call(null, class_name, class$);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var i = temp__4124__auto__;
      var G__7214 = function() {
        var end = i + class$.length;
        return[cljs.core.str(end < class_len ? [cljs.core.str(class_name.substring(0, i)), cljs.core.str(class_name.substr(end + 1))].join("") : class_name.substring(0, i - 1))].join("");
      }();
      class_name = G__7214;
      continue;
    } else {
      return class_name;
    }
    break;
  }
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var G__7183 = arguments.length;
  switch(G__7183) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (coll__$1) {
      var G__7185 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__7186 = cljs.core.next.call(null, coll__$1);
      sb = G__7185;
      coll__$1 = G__7186;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (coll__$1) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__7187 = sb;
      var G__7188 = coll__$2;
      sb = G__7187;
      coll__$1 = G__7188;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__7189 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__7189;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__7193 = cljs.core._EQ_;
    var expr__7194 = limit;
    if (cljs.core.truth_(pred__7193.call(null, 1, expr__7194))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__7193.call(null, 2, expr__7194))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var G__7197 = arguments.length;
  switch(G__7197) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (cljs.core._EQ_.call(null, limit__$1, 1)) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var m = temp__4124__auto__;
          var index = s__$1.indexOf(m);
          var G__7199 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__7200 = limit__$1 - 1;
          var G__7201 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__7199;
          limit__$1 = G__7200;
          parts = G__7201;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__7202 = index - 1;
        index = G__7202;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___7203 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___7203)) {
        var replacement_7204 = temp__4124__auto___7203;
        buffer.append([cljs.core.str(replacement_7204)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__7205 = index + 1;
      index = G__7205;
      continue;
    }
    break;
  }
};
goog.provide("dommy.core");
goog.require("cljs.core");
goog.require("dommy.utils");
goog.require("clojure.string");
dommy.core.selector = function dommy$core$selector(data) {
  if (cljs.core.coll_QMARK_.call(null, data)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, dommy$core$selector, data));
  } else {
    if (typeof data === "string" || data instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, data);
    } else {
      return null;
    }
  }
};
dommy.core.text = function dommy$core$text(elem) {
  var or__4276__auto__ = elem.textContent;
  if (cljs.core.truth_(or__4276__auto__)) {
    return or__4276__auto__;
  } else {
    return elem.innerText;
  }
};
dommy.core.html = function dommy$core$html(elem) {
  return elem.innerHTML;
};
dommy.core.value = function dommy$core$value(elem) {
  return elem.value;
};
dommy.core.class$ = function dommy$core$class(elem) {
  return elem.className;
};
dommy.core.attr = function dommy$core$attr(elem, k) {
  if (cljs.core.truth_(k)) {
    return elem.getAttribute(dommy.utils.as_str.call(null, k));
  } else {
    return null;
  }
};
dommy.core.style = function dommy$core$style() {
  var G__6578 = arguments.length;
  switch(G__6578) {
    case 1:
      return dommy.core.style.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return dommy.core.style.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
dommy.core.style.cljs$core$IFn$_invoke$arity$1 = function(elem) {
  return cljs.core.js__GT_clj.call(null, window.getComputedStyle(elem));
};
dommy.core.style.cljs$core$IFn$_invoke$arity$2 = function(elem, k) {
  return window.getComputedStyle(elem)[dommy.utils.as_str.call(null, k)];
};
dommy.core.style.cljs$lang$maxFixedArity = 2;
dommy.core.px = function dommy$core$px(elem, k) {
  var pixels = dommy.core.style.call(null, elem, k);
  if (cljs.core.seq.call(null, pixels)) {
    return parseInt(pixels);
  } else {
    return null;
  }
};
dommy.core.has_class_QMARK_ = function dommy$core$has_class_QMARK_(elem, c) {
  var c__$1 = dommy.utils.as_str.call(null, c);
  var temp__4124__auto__ = elem.classList;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var class_list = temp__4124__auto__;
    return class_list.contains(c__$1);
  } else {
    var temp__4126__auto__ = dommy.core.class$.call(null, elem);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var class_name = temp__4126__auto__;
      var temp__4126__auto____$1 = dommy.utils.class_index.call(null, class_name, c__$1);
      if (cljs.core.truth_(temp__4126__auto____$1)) {
        var i = temp__4126__auto____$1;
        return i >= 0;
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
dommy.core.hidden_QMARK_ = function dommy$core$hidden_QMARK_(elem) {
  return dommy.core.style.call(null, elem, new cljs.core.Keyword(null, "display", "display", 242065432)) === "none";
};
dommy.core.bounding_client_rect = function dommy$core$bounding_client_rect(elem) {
  var r = elem.getBoundingClientRect();
  return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "top", "top", -1856271961), r.top, new cljs.core.Keyword(null, "bottom", "bottom", -1550509018), r.bottom, new cljs.core.Keyword(null, "left", "left", -399115937), r.left, new cljs.core.Keyword(null, "right", "right", -452581833), r.right, new cljs.core.Keyword(null, "width", "width", -384071477), r.width, new cljs.core.Keyword(null, "height", "height", 1025178622), r.height], null);
};
dommy.core.parent = function dommy$core$parent(elem) {
  return elem.parentNode;
};
dommy.core.children = function dommy$core$children(elem) {
  return elem.children;
};
dommy.core.ancestors = function dommy$core$ancestors(elem) {
  return cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, dommy.core.parent, elem));
};
dommy.core.ancestor_nodes = dommy.core.ancestors;
dommy.core.matches_pred = function dommy$core$matches_pred() {
  var G__6581 = arguments.length;
  switch(G__6581) {
    case 2:
      return dommy.core.matches_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return dommy.core.matches_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
dommy.core.matches_pred.cljs$core$IFn$_invoke$arity$2 = function(base, selector) {
  var matches = dommy.utils.__GT_Array.call(null, base.querySelectorAll(dommy.core.selector.call(null, selector)));
  return function(matches) {
    return function(elem) {
      return matches.indexOf(elem) >= 0;
    };
  }(matches);
};
dommy.core.matches_pred.cljs$core$IFn$_invoke$arity$1 = function(selector) {
  return dommy.core.matches_pred.call(null, document, selector);
};
dommy.core.matches_pred.cljs$lang$maxFixedArity = 2;
dommy.core.closest = function dommy$core$closest() {
  var G__6585 = arguments.length;
  switch(G__6585) {
    case 3:
      return dommy.core.closest.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return dommy.core.closest.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
dommy.core.closest.cljs$core$IFn$_invoke$arity$3 = function(base, elem, selector) {
  return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, base, selector), cljs.core.take_while.call(null, function(p1__6583_SHARP_) {
    return!(p1__6583_SHARP_ === base);
  }, dommy.core.ancestors.call(null, elem))));
};
dommy.core.closest.cljs$core$IFn$_invoke$arity$2 = function(elem, selector) {
  return dommy.core.closest.call(null, document.body, elem, selector);
};
dommy.core.closest.cljs$lang$maxFixedArity = 3;
dommy.core.descendant_QMARK_ = function dommy$core$descendant_QMARK_(descendant, ancestor) {
  if (cljs.core.truth_(ancestor.contains)) {
    return ancestor.contains(descendant);
  } else {
    if (cljs.core.truth_(ancestor.compareDocumentPosition)) {
      return(ancestor.compareDocumentPosition(descendant) & 1 << 4) != 0;
    } else {
      return null;
    }
  }
};
dommy.core.set_text_BANG_ = function dommy$core$set_text_BANG_(elem, text) {
  if (!(void 0 === elem.textContent)) {
    elem.textContent = text;
  } else {
    elem.innerText = text;
  }
  return elem;
};
dommy.core.set_html_BANG_ = function dommy$core$set_html_BANG_(elem, html) {
  elem.innerHTML = html;
  return elem;
};
dommy.core.set_value_BANG_ = function dommy$core$set_value_BANG_(elem, value) {
  elem.value = value;
  return elem;
};
dommy.core.set_class_BANG_ = function dommy$core$set_class_BANG_(elem, c) {
  return elem.className = c;
};
dommy.core.set_style_BANG_ = function dommy$core$set_style_BANG_() {
  var argseq__5316__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return dommy.core.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5316__auto__);
};
dommy.core.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem, kvs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  var style = elem.style;
  var seq__6589_6595 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
  var chunk__6590_6596 = null;
  var count__6591_6597 = 0;
  var i__6592_6598 = 0;
  while (true) {
    if (i__6592_6598 < count__6591_6597) {
      var vec__6593_6599 = cljs.core._nth.call(null, chunk__6590_6596, i__6592_6598);
      var k_6600 = cljs.core.nth.call(null, vec__6593_6599, 0, null);
      var v_6601 = cljs.core.nth.call(null, vec__6593_6599, 1, null);
      style.setProperty(dommy.utils.as_str.call(null, k_6600), v_6601);
      var G__6602 = seq__6589_6595;
      var G__6603 = chunk__6590_6596;
      var G__6604 = count__6591_6597;
      var G__6605 = i__6592_6598 + 1;
      seq__6589_6595 = G__6602;
      chunk__6590_6596 = G__6603;
      count__6591_6597 = G__6604;
      i__6592_6598 = G__6605;
      continue;
    } else {
      var temp__4126__auto___6606 = cljs.core.seq.call(null, seq__6589_6595);
      if (temp__4126__auto___6606) {
        var seq__6589_6607__$1 = temp__4126__auto___6606;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6589_6607__$1)) {
          var c__5061__auto___6608 = cljs.core.chunk_first.call(null, seq__6589_6607__$1);
          var G__6609 = cljs.core.chunk_rest.call(null, seq__6589_6607__$1);
          var G__6610 = c__5061__auto___6608;
          var G__6611 = cljs.core.count.call(null, c__5061__auto___6608);
          var G__6612 = 0;
          seq__6589_6595 = G__6609;
          chunk__6590_6596 = G__6610;
          count__6591_6597 = G__6611;
          i__6592_6598 = G__6612;
          continue;
        } else {
          var vec__6594_6613 = cljs.core.first.call(null, seq__6589_6607__$1);
          var k_6614 = cljs.core.nth.call(null, vec__6594_6613, 0, null);
          var v_6615 = cljs.core.nth.call(null, vec__6594_6613, 1, null);
          style.setProperty(dommy.utils.as_str.call(null, k_6614), v_6615);
          var G__6616 = cljs.core.next.call(null, seq__6589_6607__$1);
          var G__6617 = null;
          var G__6618 = 0;
          var G__6619 = 0;
          seq__6589_6595 = G__6616;
          chunk__6590_6596 = G__6617;
          count__6591_6597 = G__6618;
          i__6592_6598 = G__6619;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return elem;
};
dommy.core.set_style_BANG_.cljs$lang$maxFixedArity = 1;
dommy.core.set_style_BANG_.cljs$lang$applyTo = function(seq6587) {
  var G__6588 = cljs.core.first.call(null, seq6587);
  var seq6587__$1 = cljs.core.next.call(null, seq6587);
  return dommy.core.set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6588, seq6587__$1);
};
dommy.core.set_px_BANG_ = function dommy$core$set_px_BANG_() {
  var argseq__5316__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return dommy.core.set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5316__auto__);
};
dommy.core.set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem, kvs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  var seq__6622_6628 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
  var chunk__6623_6629 = null;
  var count__6624_6630 = 0;
  var i__6625_6631 = 0;
  while (true) {
    if (i__6625_6631 < count__6624_6630) {
      var vec__6626_6632 = cljs.core._nth.call(null, chunk__6623_6629, i__6625_6631);
      var k_6633 = cljs.core.nth.call(null, vec__6626_6632, 0, null);
      var v_6634 = cljs.core.nth.call(null, vec__6626_6632, 1, null);
      dommy.core.set_style_BANG_.call(null, elem, k_6633, [cljs.core.str(v_6634), cljs.core.str("px")].join(""));
      var G__6635 = seq__6622_6628;
      var G__6636 = chunk__6623_6629;
      var G__6637 = count__6624_6630;
      var G__6638 = i__6625_6631 + 1;
      seq__6622_6628 = G__6635;
      chunk__6623_6629 = G__6636;
      count__6624_6630 = G__6637;
      i__6625_6631 = G__6638;
      continue;
    } else {
      var temp__4126__auto___6639 = cljs.core.seq.call(null, seq__6622_6628);
      if (temp__4126__auto___6639) {
        var seq__6622_6640__$1 = temp__4126__auto___6639;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6622_6640__$1)) {
          var c__5061__auto___6641 = cljs.core.chunk_first.call(null, seq__6622_6640__$1);
          var G__6642 = cljs.core.chunk_rest.call(null, seq__6622_6640__$1);
          var G__6643 = c__5061__auto___6641;
          var G__6644 = cljs.core.count.call(null, c__5061__auto___6641);
          var G__6645 = 0;
          seq__6622_6628 = G__6642;
          chunk__6623_6629 = G__6643;
          count__6624_6630 = G__6644;
          i__6625_6631 = G__6645;
          continue;
        } else {
          var vec__6627_6646 = cljs.core.first.call(null, seq__6622_6640__$1);
          var k_6647 = cljs.core.nth.call(null, vec__6627_6646, 0, null);
          var v_6648 = cljs.core.nth.call(null, vec__6627_6646, 1, null);
          dommy.core.set_style_BANG_.call(null, elem, k_6647, [cljs.core.str(v_6648), cljs.core.str("px")].join(""));
          var G__6649 = cljs.core.next.call(null, seq__6622_6640__$1);
          var G__6650 = null;
          var G__6651 = 0;
          var G__6652 = 0;
          seq__6622_6628 = G__6649;
          chunk__6623_6629 = G__6650;
          count__6624_6630 = G__6651;
          i__6625_6631 = G__6652;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return elem;
};
dommy.core.set_px_BANG_.cljs$lang$maxFixedArity = 1;
dommy.core.set_px_BANG_.cljs$lang$applyTo = function(seq6620) {
  var G__6621 = cljs.core.first.call(null, seq6620);
  var seq6620__$1 = cljs.core.next.call(null, seq6620);
  return dommy.core.set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6621, seq6620__$1);
};
dommy.core.set_attr_BANG_ = function dommy$core$set_attr_BANG_() {
  var G__6658 = arguments.length;
  switch(G__6658) {
    case 2:
      return dommy.core.set_attr_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return dommy.core.set_attr_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5328__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return dommy.core.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5328__auto__);
  }
};
dommy.core.set_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = function(elem, k) {
  return dommy.core.set_attr_BANG_.call(null, elem, k, "true");
};
dommy.core.set_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = function(elem, k, v) {
  var k__$1 = dommy.utils.as_str.call(null, k);
  if (cljs.core.truth_(v)) {
    if (cljs.core.fn_QMARK_.call(null, v)) {
      var G__6659 = elem;
      G__6659[k__$1] = v;
      return G__6659;
    } else {
      var G__6660 = elem;
      G__6660.setAttribute(k__$1, v);
      return G__6660;
    }
  } else {
    return null;
  }
};
dommy.core.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem, k, v, kvs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "kvs", "kvs", -1695980277, null)))))].join(""));
  }
  var seq__6661_6668 = cljs.core.seq.call(null, cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null), cljs.core.partition.call(null, 2, kvs)));
  var chunk__6662_6669 = null;
  var count__6663_6670 = 0;
  var i__6664_6671 = 0;
  while (true) {
    if (i__6664_6671 < count__6663_6670) {
      var vec__6665_6672 = cljs.core._nth.call(null, chunk__6662_6669, i__6664_6671);
      var k_6673__$1 = cljs.core.nth.call(null, vec__6665_6672, 0, null);
      var v_6674__$1 = cljs.core.nth.call(null, vec__6665_6672, 1, null);
      dommy.core.set_attr_BANG_.call(null, elem, k_6673__$1, v_6674__$1);
      var G__6675 = seq__6661_6668;
      var G__6676 = chunk__6662_6669;
      var G__6677 = count__6663_6670;
      var G__6678 = i__6664_6671 + 1;
      seq__6661_6668 = G__6675;
      chunk__6662_6669 = G__6676;
      count__6663_6670 = G__6677;
      i__6664_6671 = G__6678;
      continue;
    } else {
      var temp__4126__auto___6679 = cljs.core.seq.call(null, seq__6661_6668);
      if (temp__4126__auto___6679) {
        var seq__6661_6680__$1 = temp__4126__auto___6679;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6661_6680__$1)) {
          var c__5061__auto___6681 = cljs.core.chunk_first.call(null, seq__6661_6680__$1);
          var G__6682 = cljs.core.chunk_rest.call(null, seq__6661_6680__$1);
          var G__6683 = c__5061__auto___6681;
          var G__6684 = cljs.core.count.call(null, c__5061__auto___6681);
          var G__6685 = 0;
          seq__6661_6668 = G__6682;
          chunk__6662_6669 = G__6683;
          count__6663_6670 = G__6684;
          i__6664_6671 = G__6685;
          continue;
        } else {
          var vec__6666_6686 = cljs.core.first.call(null, seq__6661_6680__$1);
          var k_6687__$1 = cljs.core.nth.call(null, vec__6666_6686, 0, null);
          var v_6688__$1 = cljs.core.nth.call(null, vec__6666_6686, 1, null);
          dommy.core.set_attr_BANG_.call(null, elem, k_6687__$1, v_6688__$1);
          var G__6689 = cljs.core.next.call(null, seq__6661_6680__$1);
          var G__6690 = null;
          var G__6691 = 0;
          var G__6692 = 0;
          seq__6661_6668 = G__6689;
          chunk__6662_6669 = G__6690;
          count__6663_6670 = G__6691;
          i__6664_6671 = G__6692;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return elem;
};
dommy.core.set_attr_BANG_.cljs$lang$applyTo = function(seq6653) {
  var G__6654 = cljs.core.first.call(null, seq6653);
  var seq6653__$1 = cljs.core.next.call(null, seq6653);
  var G__6655 = cljs.core.first.call(null, seq6653__$1);
  var seq6653__$2 = cljs.core.next.call(null, seq6653__$1);
  var G__6656 = cljs.core.first.call(null, seq6653__$2);
  var seq6653__$3 = cljs.core.next.call(null, seq6653__$2);
  return dommy.core.set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6654, G__6655, G__6656, seq6653__$3);
};
dommy.core.set_attr_BANG_.cljs$lang$maxFixedArity = 3;
dommy.core.remove_attr_BANG_ = function dommy$core$remove_attr_BANG_() {
  var G__6697 = arguments.length;
  switch(G__6697) {
    case 2:
      return dommy.core.remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5328__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return dommy.core.remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5328__auto__);
  }
};
dommy.core.remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = function(elem, k) {
  var k_6703__$1 = dommy.utils.as_str.call(null, k);
  if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["class", null, "classes", null], null), null)).call(null, k_6703__$1))) {
    dommy.core.set_class_BANG_.call(null, elem, "");
  } else {
    elem.removeAttribute(k_6703__$1);
  }
  return elem;
};
dommy.core.remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem, k, ks) {
  var seq__6698_6704 = cljs.core.seq.call(null, cljs.core.cons.call(null, k, ks));
  var chunk__6699_6705 = null;
  var count__6700_6706 = 0;
  var i__6701_6707 = 0;
  while (true) {
    if (i__6701_6707 < count__6700_6706) {
      var k_6708__$1 = cljs.core._nth.call(null, chunk__6699_6705, i__6701_6707);
      dommy.core.remove_attr_BANG_.call(null, elem, k_6708__$1);
      var G__6709 = seq__6698_6704;
      var G__6710 = chunk__6699_6705;
      var G__6711 = count__6700_6706;
      var G__6712 = i__6701_6707 + 1;
      seq__6698_6704 = G__6709;
      chunk__6699_6705 = G__6710;
      count__6700_6706 = G__6711;
      i__6701_6707 = G__6712;
      continue;
    } else {
      var temp__4126__auto___6713 = cljs.core.seq.call(null, seq__6698_6704);
      if (temp__4126__auto___6713) {
        var seq__6698_6714__$1 = temp__4126__auto___6713;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6698_6714__$1)) {
          var c__5061__auto___6715 = cljs.core.chunk_first.call(null, seq__6698_6714__$1);
          var G__6716 = cljs.core.chunk_rest.call(null, seq__6698_6714__$1);
          var G__6717 = c__5061__auto___6715;
          var G__6718 = cljs.core.count.call(null, c__5061__auto___6715);
          var G__6719 = 0;
          seq__6698_6704 = G__6716;
          chunk__6699_6705 = G__6717;
          count__6700_6706 = G__6718;
          i__6701_6707 = G__6719;
          continue;
        } else {
          var k_6720__$1 = cljs.core.first.call(null, seq__6698_6714__$1);
          dommy.core.remove_attr_BANG_.call(null, elem, k_6720__$1);
          var G__6721 = cljs.core.next.call(null, seq__6698_6714__$1);
          var G__6722 = null;
          var G__6723 = 0;
          var G__6724 = 0;
          seq__6698_6704 = G__6721;
          chunk__6699_6705 = G__6722;
          count__6700_6706 = G__6723;
          i__6701_6707 = G__6724;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return elem;
};
dommy.core.remove_attr_BANG_.cljs$lang$applyTo = function(seq6693) {
  var G__6694 = cljs.core.first.call(null, seq6693);
  var seq6693__$1 = cljs.core.next.call(null, seq6693);
  var G__6695 = cljs.core.first.call(null, seq6693__$1);
  var seq6693__$2 = cljs.core.next.call(null, seq6693__$1);
  return dommy.core.remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6694, G__6695, seq6693__$2);
};
dommy.core.remove_attr_BANG_.cljs$lang$maxFixedArity = 2;
dommy.core.toggle_attr_BANG_ = function dommy$core$toggle_attr_BANG_() {
  var G__6726 = arguments.length;
  switch(G__6726) {
    case 2:
      return dommy.core.toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return dommy.core.toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
dommy.core.toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = function(elem, k) {
  return dommy.core.toggle_attr_BANG_.call(null, elem, k, cljs.core.boolean$.call(null, dommy.core.attr.call(null, elem, k)));
};
dommy.core.toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = function(elem, k, add_QMARK_) {
  if (add_QMARK_) {
    return dommy.core.set_attr_BANG_.call(null, elem, k);
  } else {
    return dommy.core.remove_attr_BANG_.call(null, elem, k);
  }
};
dommy.core.toggle_attr_BANG_.cljs$lang$maxFixedArity = 3;
dommy.core.add_class_BANG_ = function dommy$core$add_class_BANG_() {
  var G__6732 = arguments.length;
  switch(G__6732) {
    case 2:
      return dommy.core.add_class_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5328__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return dommy.core.add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5328__auto__);
  }
};
dommy.core.add_class_BANG_.cljs$core$IFn$_invoke$arity$2 = function(elem, classes) {
  var classes__$1 = clojure.string.trim.call(null, dommy.utils.as_str.call(null, classes)).split(/\s+/);
  if (cljs.core.seq.call(null, classes__$1)) {
    var temp__4124__auto___6746 = elem.classList;
    if (cljs.core.truth_(temp__4124__auto___6746)) {
      var class_list_6747 = temp__4124__auto___6746;
      var seq__6733_6748 = cljs.core.seq.call(null, classes__$1);
      var chunk__6734_6749 = null;
      var count__6735_6750 = 0;
      var i__6736_6751 = 0;
      while (true) {
        if (i__6736_6751 < count__6735_6750) {
          var c_6752 = cljs.core._nth.call(null, chunk__6734_6749, i__6736_6751);
          class_list_6747.add(c_6752);
          var G__6753 = seq__6733_6748;
          var G__6754 = chunk__6734_6749;
          var G__6755 = count__6735_6750;
          var G__6756 = i__6736_6751 + 1;
          seq__6733_6748 = G__6753;
          chunk__6734_6749 = G__6754;
          count__6735_6750 = G__6755;
          i__6736_6751 = G__6756;
          continue;
        } else {
          var temp__4126__auto___6757 = cljs.core.seq.call(null, seq__6733_6748);
          if (temp__4126__auto___6757) {
            var seq__6733_6758__$1 = temp__4126__auto___6757;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6733_6758__$1)) {
              var c__5061__auto___6759 = cljs.core.chunk_first.call(null, seq__6733_6758__$1);
              var G__6760 = cljs.core.chunk_rest.call(null, seq__6733_6758__$1);
              var G__6761 = c__5061__auto___6759;
              var G__6762 = cljs.core.count.call(null, c__5061__auto___6759);
              var G__6763 = 0;
              seq__6733_6748 = G__6760;
              chunk__6734_6749 = G__6761;
              count__6735_6750 = G__6762;
              i__6736_6751 = G__6763;
              continue;
            } else {
              var c_6764 = cljs.core.first.call(null, seq__6733_6758__$1);
              class_list_6747.add(c_6764);
              var G__6765 = cljs.core.next.call(null, seq__6733_6758__$1);
              var G__6766 = null;
              var G__6767 = 0;
              var G__6768 = 0;
              seq__6733_6748 = G__6765;
              chunk__6734_6749 = G__6766;
              count__6735_6750 = G__6767;
              i__6736_6751 = G__6768;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } else {
      var seq__6737_6769 = cljs.core.seq.call(null, classes__$1);
      var chunk__6738_6770 = null;
      var count__6739_6771 = 0;
      var i__6740_6772 = 0;
      while (true) {
        if (i__6740_6772 < count__6739_6771) {
          var c_6773 = cljs.core._nth.call(null, chunk__6738_6770, i__6740_6772);
          var class_name_6774 = dommy.core.class$.call(null, elem);
          if (cljs.core.truth_(dommy.utils.class_index.call(null, class_name_6774, c_6773))) {
          } else {
            dommy.core.set_class_BANG_.call(null, elem, class_name_6774 === "" ? c_6773 : [cljs.core.str(class_name_6774), cljs.core.str(" "), cljs.core.str(c_6773)].join(""));
          }
          var G__6775 = seq__6737_6769;
          var G__6776 = chunk__6738_6770;
          var G__6777 = count__6739_6771;
          var G__6778 = i__6740_6772 + 1;
          seq__6737_6769 = G__6775;
          chunk__6738_6770 = G__6776;
          count__6739_6771 = G__6777;
          i__6740_6772 = G__6778;
          continue;
        } else {
          var temp__4126__auto___6779 = cljs.core.seq.call(null, seq__6737_6769);
          if (temp__4126__auto___6779) {
            var seq__6737_6780__$1 = temp__4126__auto___6779;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6737_6780__$1)) {
              var c__5061__auto___6781 = cljs.core.chunk_first.call(null, seq__6737_6780__$1);
              var G__6782 = cljs.core.chunk_rest.call(null, seq__6737_6780__$1);
              var G__6783 = c__5061__auto___6781;
              var G__6784 = cljs.core.count.call(null, c__5061__auto___6781);
              var G__6785 = 0;
              seq__6737_6769 = G__6782;
              chunk__6738_6770 = G__6783;
              count__6739_6771 = G__6784;
              i__6740_6772 = G__6785;
              continue;
            } else {
              var c_6786 = cljs.core.first.call(null, seq__6737_6780__$1);
              var class_name_6787 = dommy.core.class$.call(null, elem);
              if (cljs.core.truth_(dommy.utils.class_index.call(null, class_name_6787, c_6786))) {
              } else {
                dommy.core.set_class_BANG_.call(null, elem, class_name_6787 === "" ? c_6786 : [cljs.core.str(class_name_6787), cljs.core.str(" "), cljs.core.str(c_6786)].join(""));
              }
              var G__6788 = cljs.core.next.call(null, seq__6737_6780__$1);
              var G__6789 = null;
              var G__6790 = 0;
              var G__6791 = 0;
              seq__6737_6769 = G__6788;
              chunk__6738_6770 = G__6789;
              count__6739_6771 = G__6790;
              i__6740_6772 = G__6791;
              continue;
            }
          } else {
          }
        }
        break;
      }
    }
  } else {
  }
  return elem;
};
dommy.core.add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem, classes, more_classes) {
  var seq__6741_6792 = cljs.core.seq.call(null, cljs.core.conj.call(null, more_classes, classes));
  var chunk__6742_6793 = null;
  var count__6743_6794 = 0;
  var i__6744_6795 = 0;
  while (true) {
    if (i__6744_6795 < count__6743_6794) {
      var c_6796 = cljs.core._nth.call(null, chunk__6742_6793, i__6744_6795);
      dommy.core.add_class_BANG_.call(null, elem, c_6796);
      var G__6797 = seq__6741_6792;
      var G__6798 = chunk__6742_6793;
      var G__6799 = count__6743_6794;
      var G__6800 = i__6744_6795 + 1;
      seq__6741_6792 = G__6797;
      chunk__6742_6793 = G__6798;
      count__6743_6794 = G__6799;
      i__6744_6795 = G__6800;
      continue;
    } else {
      var temp__4126__auto___6801 = cljs.core.seq.call(null, seq__6741_6792);
      if (temp__4126__auto___6801) {
        var seq__6741_6802__$1 = temp__4126__auto___6801;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6741_6802__$1)) {
          var c__5061__auto___6803 = cljs.core.chunk_first.call(null, seq__6741_6802__$1);
          var G__6804 = cljs.core.chunk_rest.call(null, seq__6741_6802__$1);
          var G__6805 = c__5061__auto___6803;
          var G__6806 = cljs.core.count.call(null, c__5061__auto___6803);
          var G__6807 = 0;
          seq__6741_6792 = G__6804;
          chunk__6742_6793 = G__6805;
          count__6743_6794 = G__6806;
          i__6744_6795 = G__6807;
          continue;
        } else {
          var c_6808 = cljs.core.first.call(null, seq__6741_6802__$1);
          dommy.core.add_class_BANG_.call(null, elem, c_6808);
          var G__6809 = cljs.core.next.call(null, seq__6741_6802__$1);
          var G__6810 = null;
          var G__6811 = 0;
          var G__6812 = 0;
          seq__6741_6792 = G__6809;
          chunk__6742_6793 = G__6810;
          count__6743_6794 = G__6811;
          i__6744_6795 = G__6812;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return elem;
};
dommy.core.add_class_BANG_.cljs$lang$applyTo = function(seq6728) {
  var G__6729 = cljs.core.first.call(null, seq6728);
  var seq6728__$1 = cljs.core.next.call(null, seq6728);
  var G__6730 = cljs.core.first.call(null, seq6728__$1);
  var seq6728__$2 = cljs.core.next.call(null, seq6728__$1);
  return dommy.core.add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6729, G__6730, seq6728__$2);
};
dommy.core.add_class_BANG_.cljs$lang$maxFixedArity = 2;
dommy.core.remove_class_BANG_ = function dommy$core$remove_class_BANG_() {
  var G__6817 = arguments.length;
  switch(G__6817) {
    case 2:
      return dommy.core.remove_class_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5328__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return dommy.core.remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5328__auto__);
  }
};
dommy.core.remove_class_BANG_.cljs$core$IFn$_invoke$arity$2 = function(elem, c) {
  var c__$1 = dommy.utils.as_str.call(null, c);
  var temp__4124__auto___6823 = elem.classList;
  if (cljs.core.truth_(temp__4124__auto___6823)) {
    var class_list_6824 = temp__4124__auto___6823;
    class_list_6824.remove(c__$1);
  } else {
    var class_name_6825 = dommy.core.class$.call(null, elem);
    var new_class_name_6826 = dommy.utils.remove_class_str.call(null, class_name_6825, c__$1);
    if (class_name_6825 === new_class_name_6826) {
    } else {
      dommy.core.set_class_BANG_.call(null, elem, new_class_name_6826);
    }
  }
  return elem;
};
dommy.core.remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem, class$, classes) {
  var seq__6818 = cljs.core.seq.call(null, cljs.core.conj.call(null, classes, class$));
  var chunk__6819 = null;
  var count__6820 = 0;
  var i__6821 = 0;
  while (true) {
    if (i__6821 < count__6820) {
      var c = cljs.core._nth.call(null, chunk__6819, i__6821);
      dommy.core.remove_class_BANG_.call(null, elem, c);
      var G__6827 = seq__6818;
      var G__6828 = chunk__6819;
      var G__6829 = count__6820;
      var G__6830 = i__6821 + 1;
      seq__6818 = G__6827;
      chunk__6819 = G__6828;
      count__6820 = G__6829;
      i__6821 = G__6830;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__6818);
      if (temp__4126__auto__) {
        var seq__6818__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6818__$1)) {
          var c__5061__auto__ = cljs.core.chunk_first.call(null, seq__6818__$1);
          var G__6831 = cljs.core.chunk_rest.call(null, seq__6818__$1);
          var G__6832 = c__5061__auto__;
          var G__6833 = cljs.core.count.call(null, c__5061__auto__);
          var G__6834 = 0;
          seq__6818 = G__6831;
          chunk__6819 = G__6832;
          count__6820 = G__6833;
          i__6821 = G__6834;
          continue;
        } else {
          var c = cljs.core.first.call(null, seq__6818__$1);
          dommy.core.remove_class_BANG_.call(null, elem, c);
          var G__6835 = cljs.core.next.call(null, seq__6818__$1);
          var G__6836 = null;
          var G__6837 = 0;
          var G__6838 = 0;
          seq__6818 = G__6835;
          chunk__6819 = G__6836;
          count__6820 = G__6837;
          i__6821 = G__6838;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
dommy.core.remove_class_BANG_.cljs$lang$applyTo = function(seq6813) {
  var G__6814 = cljs.core.first.call(null, seq6813);
  var seq6813__$1 = cljs.core.next.call(null, seq6813);
  var G__6815 = cljs.core.first.call(null, seq6813__$1);
  var seq6813__$2 = cljs.core.next.call(null, seq6813__$1);
  return dommy.core.remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6814, G__6815, seq6813__$2);
};
dommy.core.remove_class_BANG_.cljs$lang$maxFixedArity = 2;
dommy.core.toggle_class_BANG_ = function dommy$core$toggle_class_BANG_() {
  var G__6840 = arguments.length;
  switch(G__6840) {
    case 2:
      return dommy.core.toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return dommy.core.toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
dommy.core.toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2 = function(elem, c) {
  var c__$1 = dommy.utils.as_str.call(null, c);
  var temp__4124__auto___6842 = elem.classList;
  if (cljs.core.truth_(temp__4124__auto___6842)) {
    var class_list_6843 = temp__4124__auto___6842;
    class_list_6843.toggle(c__$1);
  } else {
    dommy.core.toggle_class_BANG_.call(null, elem, c__$1, !dommy.core.has_class_QMARK_.call(null, elem, c__$1));
  }
  return elem;
};
dommy.core.toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3 = function(elem, class$, add_QMARK_) {
  if (add_QMARK_) {
    dommy.core.add_class_BANG_.call(null, elem, class$);
  } else {
    dommy.core.remove_class_BANG_.call(null, elem, class$);
  }
  return elem;
};
dommy.core.toggle_class_BANG_.cljs$lang$maxFixedArity = 3;
dommy.core.toggle_BANG_ = function dommy$core$toggle_BANG_() {
  var G__6845 = arguments.length;
  switch(G__6845) {
    case 2:
      return dommy.core.toggle_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return dommy.core.toggle_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
dommy.core.toggle_BANG_.cljs$core$IFn$_invoke$arity$2 = function(elem, show_QMARK_) {
  return dommy.core.set_style_BANG_.call(null, elem, new cljs.core.Keyword(null, "display", "display", 242065432), show_QMARK_ ? "" : "none");
};
dommy.core.toggle_BANG_.cljs$core$IFn$_invoke$arity$1 = function(elem) {
  return dommy.core.toggle_BANG_.call(null, elem, dommy.core.hidden_QMARK_.call(null, elem));
};
dommy.core.toggle_BANG_.cljs$lang$maxFixedArity = 2;
dommy.core.hide_BANG_ = function dommy$core$hide_BANG_(elem) {
  return dommy.core.toggle_BANG_.call(null, elem, false);
};
dommy.core.show_BANG_ = function dommy$core$show_BANG_(elem) {
  return dommy.core.toggle_BANG_.call(null, elem, true);
};
dommy.core.scroll_into_view = function dommy$core$scroll_into_view(elem, align_with_top_QMARK_) {
  var top = (new cljs.core.Keyword(null, "top", "top", -1856271961)).cljs$core$IFn$_invoke$arity$1(dommy.core.bounding_client_rect.call(null, elem));
  if (window.innerHeight < top + elem.offsetHeight) {
    return elem.scrollIntoView(align_with_top_QMARK_);
  } else {
    return null;
  }
};
dommy.core.create_element = function dommy$core$create_element() {
  var G__6848 = arguments.length;
  switch(G__6848) {
    case 1:
      return dommy.core.create_element.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return dommy.core.create_element.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
dommy.core.create_element.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return document.createElement(dommy.utils.as_str.call(null, tag));
};
dommy.core.create_element.cljs$core$IFn$_invoke$arity$2 = function(tag_ns, tag) {
  return document.createElementNS(dommy.utils.as_str.call(null, tag_ns), dommy.utils.as_str.call(null, tag));
};
dommy.core.create_element.cljs$lang$maxFixedArity = 2;
dommy.core.create_text_node = function dommy$core$create_text_node(text) {
  return document.createTextNode(text);
};
dommy.core.clear_BANG_ = function dommy$core$clear_BANG_(elem) {
  return dommy.core.set_html_BANG_.call(null, elem, "");
};
dommy.core.append_BANG_ = function dommy$core$append_BANG_() {
  var G__6854 = arguments.length;
  switch(G__6854) {
    case 2:
      return dommy.core.append_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5328__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return dommy.core.append_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5328__auto__);
  }
};
dommy.core.append_BANG_.cljs$core$IFn$_invoke$arity$2 = function(parent, child) {
  var G__6855 = parent;
  G__6855.appendChild(child);
  return G__6855;
};
dommy.core.append_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(parent, child, more_children) {
  var seq__6856_6861 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
  var chunk__6857_6862 = null;
  var count__6858_6863 = 0;
  var i__6859_6864 = 0;
  while (true) {
    if (i__6859_6864 < count__6858_6863) {
      var c_6865 = cljs.core._nth.call(null, chunk__6857_6862, i__6859_6864);
      dommy.core.append_BANG_.call(null, parent, c_6865);
      var G__6866 = seq__6856_6861;
      var G__6867 = chunk__6857_6862;
      var G__6868 = count__6858_6863;
      var G__6869 = i__6859_6864 + 1;
      seq__6856_6861 = G__6866;
      chunk__6857_6862 = G__6867;
      count__6858_6863 = G__6868;
      i__6859_6864 = G__6869;
      continue;
    } else {
      var temp__4126__auto___6870 = cljs.core.seq.call(null, seq__6856_6861);
      if (temp__4126__auto___6870) {
        var seq__6856_6871__$1 = temp__4126__auto___6870;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6856_6871__$1)) {
          var c__5061__auto___6872 = cljs.core.chunk_first.call(null, seq__6856_6871__$1);
          var G__6873 = cljs.core.chunk_rest.call(null, seq__6856_6871__$1);
          var G__6874 = c__5061__auto___6872;
          var G__6875 = cljs.core.count.call(null, c__5061__auto___6872);
          var G__6876 = 0;
          seq__6856_6861 = G__6873;
          chunk__6857_6862 = G__6874;
          count__6858_6863 = G__6875;
          i__6859_6864 = G__6876;
          continue;
        } else {
          var c_6877 = cljs.core.first.call(null, seq__6856_6871__$1);
          dommy.core.append_BANG_.call(null, parent, c_6877);
          var G__6878 = cljs.core.next.call(null, seq__6856_6871__$1);
          var G__6879 = null;
          var G__6880 = 0;
          var G__6881 = 0;
          seq__6856_6861 = G__6878;
          chunk__6857_6862 = G__6879;
          count__6858_6863 = G__6880;
          i__6859_6864 = G__6881;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return parent;
};
dommy.core.append_BANG_.cljs$lang$applyTo = function(seq6850) {
  var G__6851 = cljs.core.first.call(null, seq6850);
  var seq6850__$1 = cljs.core.next.call(null, seq6850);
  var G__6852 = cljs.core.first.call(null, seq6850__$1);
  var seq6850__$2 = cljs.core.next.call(null, seq6850__$1);
  return dommy.core.append_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6851, G__6852, seq6850__$2);
};
dommy.core.append_BANG_.cljs$lang$maxFixedArity = 2;
dommy.core.prepend_BANG_ = function dommy$core$prepend_BANG_() {
  var G__6886 = arguments.length;
  switch(G__6886) {
    case 2:
      return dommy.core.prepend_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5328__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return dommy.core.prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5328__auto__);
  }
};
dommy.core.prepend_BANG_.cljs$core$IFn$_invoke$arity$2 = function(parent, child) {
  var G__6887 = parent;
  G__6887.insertBefore(child, parent.firstChild);
  return G__6887;
};
dommy.core.prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(parent, child, more_children) {
  var seq__6888_6893 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
  var chunk__6889_6894 = null;
  var count__6890_6895 = 0;
  var i__6891_6896 = 0;
  while (true) {
    if (i__6891_6896 < count__6890_6895) {
      var c_6897 = cljs.core._nth.call(null, chunk__6889_6894, i__6891_6896);
      dommy.core.prepend_BANG_.call(null, parent, c_6897);
      var G__6898 = seq__6888_6893;
      var G__6899 = chunk__6889_6894;
      var G__6900 = count__6890_6895;
      var G__6901 = i__6891_6896 + 1;
      seq__6888_6893 = G__6898;
      chunk__6889_6894 = G__6899;
      count__6890_6895 = G__6900;
      i__6891_6896 = G__6901;
      continue;
    } else {
      var temp__4126__auto___6902 = cljs.core.seq.call(null, seq__6888_6893);
      if (temp__4126__auto___6902) {
        var seq__6888_6903__$1 = temp__4126__auto___6902;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6888_6903__$1)) {
          var c__5061__auto___6904 = cljs.core.chunk_first.call(null, seq__6888_6903__$1);
          var G__6905 = cljs.core.chunk_rest.call(null, seq__6888_6903__$1);
          var G__6906 = c__5061__auto___6904;
          var G__6907 = cljs.core.count.call(null, c__5061__auto___6904);
          var G__6908 = 0;
          seq__6888_6893 = G__6905;
          chunk__6889_6894 = G__6906;
          count__6890_6895 = G__6907;
          i__6891_6896 = G__6908;
          continue;
        } else {
          var c_6909 = cljs.core.first.call(null, seq__6888_6903__$1);
          dommy.core.prepend_BANG_.call(null, parent, c_6909);
          var G__6910 = cljs.core.next.call(null, seq__6888_6903__$1);
          var G__6911 = null;
          var G__6912 = 0;
          var G__6913 = 0;
          seq__6888_6893 = G__6910;
          chunk__6889_6894 = G__6911;
          count__6890_6895 = G__6912;
          i__6891_6896 = G__6913;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return parent;
};
dommy.core.prepend_BANG_.cljs$lang$applyTo = function(seq6882) {
  var G__6883 = cljs.core.first.call(null, seq6882);
  var seq6882__$1 = cljs.core.next.call(null, seq6882);
  var G__6884 = cljs.core.first.call(null, seq6882__$1);
  var seq6882__$2 = cljs.core.next.call(null, seq6882__$1);
  return dommy.core.prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6883, G__6884, seq6882__$2);
};
dommy.core.prepend_BANG_.cljs$lang$maxFixedArity = 2;
dommy.core.insert_before_BANG_ = function dommy$core$insert_before_BANG_(elem, other) {
  var p = dommy.core.parent.call(null, other);
  if (cljs.core.truth_(p)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Target element must have a parent"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "p", "p", 1791580836, null)))].join(""));
  }
  p.insertBefore(elem, other);
  return elem;
};
dommy.core.insert_after_BANG_ = function dommy$core$insert_after_BANG_(elem, other) {
  var temp__4124__auto___6914 = other.nextSibling;
  if (cljs.core.truth_(temp__4124__auto___6914)) {
    var next_6915 = temp__4124__auto___6914;
    dommy.core.insert_before_BANG_.call(null, elem, next_6915);
  } else {
    dommy.core.append_BANG_.call(null, dommy.core.parent.call(null, other), elem);
  }
  return elem;
};
dommy.core.replace_BANG_ = function dommy$core$replace_BANG_(elem, new$) {
  var p = dommy.core.parent.call(null, elem);
  if (cljs.core.truth_(p)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Target element must have a parent"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "p", "p", 1791580836, null)))].join(""));
  }
  p.replaceChild(new$, elem);
  return new$;
};
dommy.core.replace_contents_BANG_ = function dommy$core$replace_contents_BANG_(p, child) {
  return dommy.core.append_BANG_.call(null, dommy.core.clear_BANG_.call(null, p), child);
};
dommy.core.remove_BANG_ = function dommy$core$remove_BANG_() {
  var G__6917 = arguments.length;
  switch(G__6917) {
    case 1:
      return dommy.core.remove_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return dommy.core.remove_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
dommy.core.remove_BANG_.cljs$core$IFn$_invoke$arity$1 = function(elem) {
  var p = dommy.core.parent.call(null, elem);
  if (cljs.core.truth_(p)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Target element must have a parent"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "p", "p", 1791580836, null)))].join(""));
  }
  return dommy.core.remove_BANG_.call(null, p, elem);
};
dommy.core.remove_BANG_.cljs$core$IFn$_invoke$arity$2 = function(p, elem) {
  var G__6918 = p;
  G__6918.removeChild(elem);
  return G__6918;
};
dommy.core.remove_BANG_.cljs$lang$maxFixedArity = 2;
dommy.core.special_listener_makers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__6920) {
  var vec__6921 = p__6920;
  var special_mouse_event = cljs.core.nth.call(null, vec__6921, 0, null);
  var real_mouse_event = cljs.core.nth.call(null, vec__6921, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [special_mouse_event, new cljs.core.PersistentArrayMap.fromArray([real_mouse_event, function(vec__6921, special_mouse_event, real_mouse_event) {
    return function(f) {
      return function(vec__6921, special_mouse_event, real_mouse_event) {
        return function(event) {
          var related_target = event.relatedTarget;
          var listener_target = function() {
            var or__4276__auto__ = event.selectedTarget;
            if (cljs.core.truth_(or__4276__auto__)) {
              return or__4276__auto__;
            } else {
              return event.currentTarget;
            }
          }();
          if (cljs.core.truth_(function() {
            var and__4264__auto__ = related_target;
            if (cljs.core.truth_(and__4264__auto__)) {
              return dommy.core.descendant_QMARK_.call(null, related_target, listener_target);
            } else {
              return and__4264__auto__;
            }
          }())) {
            return null;
          } else {
            return f.call(null, event);
          }
        };
      }(vec__6921, special_mouse_event, real_mouse_event);
    };
  }(vec__6921, special_mouse_event, real_mouse_event)], true, false)], null);
}, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "mouseenter", "mouseenter", -1792413560), new cljs.core.Keyword(null, "mouseover", "mouseover", -484272303), new cljs.core.Keyword(null, "mouseleave", "mouseleave", 531566580), new cljs.core.Keyword(null, "mouseout", "mouseout", 2049446890)], null)));
dommy.core.live_listener = function dommy$core$live_listener(elem, selector, f) {
  return function(event) {
    var selected_target = dommy.core.closest.call(null, elem, event.target, selector);
    if (cljs.core.truth_(function() {
      var and__4264__auto__ = selected_target;
      if (cljs.core.truth_(and__4264__auto__)) {
        return cljs.core.not.call(null, dommy.core.attr.call(null, selected_target, new cljs.core.Keyword(null, "disabled", "disabled", -1529784218)));
      } else {
        return and__4264__auto__;
      }
    }())) {
      event.selectedTarget = selected_target;
      return f.call(null, event);
    } else {
      return null;
    }
  };
};
dommy.core.event_listeners = function dommy$core$event_listeners(elem) {
  var or__4276__auto__ = elem.dommyEventListeners;
  if (cljs.core.truth_(or__4276__auto__)) {
    return or__4276__auto__;
  } else {
    return cljs.core.PersistentArrayMap.EMPTY;
  }
};
dommy.core.update_event_listeners_BANG_ = function dommy$core$update_event_listeners_BANG_() {
  var argseq__5316__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return dommy.core.update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5316__auto__);
};
dommy.core.update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem, f, args) {
  var elem__$1 = elem;
  return elem__$1.dommyEventListeners = cljs.core.apply.call(null, f, dommy.core.event_listeners.call(null, elem__$1), args);
};
dommy.core.update_event_listeners_BANG_.cljs$lang$maxFixedArity = 2;
dommy.core.update_event_listeners_BANG_.cljs$lang$applyTo = function(seq6922) {
  var G__6923 = cljs.core.first.call(null, seq6922);
  var seq6922__$1 = cljs.core.next.call(null, seq6922);
  var G__6924 = cljs.core.first.call(null, seq6922__$1);
  var seq6922__$2 = cljs.core.next.call(null, seq6922__$1);
  return dommy.core.update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6923, G__6924, seq6922__$2);
};
dommy.core.elem_and_selector = function dommy$core$elem_and_selector(elem_sel) {
  if (cljs.core.sequential_QMARK_.call(null, elem_sel)) {
    return cljs.core.juxt.call(null, cljs.core.first, cljs.core.rest).call(null, elem_sel);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [elem_sel, null], null);
  }
};
dommy.core.listen_BANG_ = function dommy$core$listen_BANG_() {
  var argseq__5316__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return dommy.core.listen_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5316__auto__);
};
dommy.core.listen_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem_sel, type_fs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1567896074, null)))))].join(""));
  }
  var vec__6927_6950 = dommy.core.elem_and_selector.call(null, elem_sel);
  var elem_6951 = cljs.core.nth.call(null, vec__6927_6950, 0, null);
  var selector_6952 = cljs.core.nth.call(null, vec__6927_6950, 1, null);
  var seq__6928_6953 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
  var chunk__6935_6954 = null;
  var count__6936_6955 = 0;
  var i__6937_6956 = 0;
  while (true) {
    if (i__6937_6956 < count__6936_6955) {
      var vec__6944_6957 = cljs.core._nth.call(null, chunk__6935_6954, i__6937_6956);
      var orig_type_6958 = cljs.core.nth.call(null, vec__6944_6957, 0, null);
      var f_6959 = cljs.core.nth.call(null, vec__6944_6957, 1, null);
      var seq__6938_6960 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_6958, new cljs.core.PersistentArrayMap.fromArray([orig_type_6958, cljs.core.identity], true, false)));
      var chunk__6940_6961 = null;
      var count__6941_6962 = 0;
      var i__6942_6963 = 0;
      while (true) {
        if (i__6942_6963 < count__6941_6962) {
          var vec__6945_6964 = cljs.core._nth.call(null, chunk__6940_6961, i__6942_6963);
          var actual_type_6965 = cljs.core.nth.call(null, vec__6945_6964, 0, null);
          var factory_6966 = cljs.core.nth.call(null, vec__6945_6964, 1, null);
          var canonical_f_6967 = (cljs.core.truth_(selector_6952) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_6951, selector_6952) : cljs.core.identity).call(null, factory_6966.call(null, f_6959));
          dommy.core.update_event_listeners_BANG_.call(null, elem_6951, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_6952, actual_type_6965, f_6959], null), canonical_f_6967);
          if (cljs.core.truth_(elem_6951.addEventListener)) {
            elem_6951.addEventListener(cljs.core.name.call(null, actual_type_6965), canonical_f_6967);
          } else {
            elem_6951.attachEvent(cljs.core.name.call(null, actual_type_6965), canonical_f_6967);
          }
          var G__6968 = seq__6938_6960;
          var G__6969 = chunk__6940_6961;
          var G__6970 = count__6941_6962;
          var G__6971 = i__6942_6963 + 1;
          seq__6938_6960 = G__6968;
          chunk__6940_6961 = G__6969;
          count__6941_6962 = G__6970;
          i__6942_6963 = G__6971;
          continue;
        } else {
          var temp__4126__auto___6972 = cljs.core.seq.call(null, seq__6938_6960);
          if (temp__4126__auto___6972) {
            var seq__6938_6973__$1 = temp__4126__auto___6972;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6938_6973__$1)) {
              var c__5061__auto___6974 = cljs.core.chunk_first.call(null, seq__6938_6973__$1);
              var G__6975 = cljs.core.chunk_rest.call(null, seq__6938_6973__$1);
              var G__6976 = c__5061__auto___6974;
              var G__6977 = cljs.core.count.call(null, c__5061__auto___6974);
              var G__6978 = 0;
              seq__6938_6960 = G__6975;
              chunk__6940_6961 = G__6976;
              count__6941_6962 = G__6977;
              i__6942_6963 = G__6978;
              continue;
            } else {
              var vec__6946_6979 = cljs.core.first.call(null, seq__6938_6973__$1);
              var actual_type_6980 = cljs.core.nth.call(null, vec__6946_6979, 0, null);
              var factory_6981 = cljs.core.nth.call(null, vec__6946_6979, 1, null);
              var canonical_f_6982 = (cljs.core.truth_(selector_6952) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_6951, selector_6952) : cljs.core.identity).call(null, factory_6981.call(null, f_6959));
              dommy.core.update_event_listeners_BANG_.call(null, elem_6951, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_6952, actual_type_6980, f_6959], null), canonical_f_6982);
              if (cljs.core.truth_(elem_6951.addEventListener)) {
                elem_6951.addEventListener(cljs.core.name.call(null, actual_type_6980), canonical_f_6982);
              } else {
                elem_6951.attachEvent(cljs.core.name.call(null, actual_type_6980), canonical_f_6982);
              }
              var G__6983 = cljs.core.next.call(null, seq__6938_6973__$1);
              var G__6984 = null;
              var G__6985 = 0;
              var G__6986 = 0;
              seq__6938_6960 = G__6983;
              chunk__6940_6961 = G__6984;
              count__6941_6962 = G__6985;
              i__6942_6963 = G__6986;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__6987 = seq__6928_6953;
      var G__6988 = chunk__6935_6954;
      var G__6989 = count__6936_6955;
      var G__6990 = i__6937_6956 + 1;
      seq__6928_6953 = G__6987;
      chunk__6935_6954 = G__6988;
      count__6936_6955 = G__6989;
      i__6937_6956 = G__6990;
      continue;
    } else {
      var temp__4126__auto___6991 = cljs.core.seq.call(null, seq__6928_6953);
      if (temp__4126__auto___6991) {
        var seq__6928_6992__$1 = temp__4126__auto___6991;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__6928_6992__$1)) {
          var c__5061__auto___6993 = cljs.core.chunk_first.call(null, seq__6928_6992__$1);
          var G__6994 = cljs.core.chunk_rest.call(null, seq__6928_6992__$1);
          var G__6995 = c__5061__auto___6993;
          var G__6996 = cljs.core.count.call(null, c__5061__auto___6993);
          var G__6997 = 0;
          seq__6928_6953 = G__6994;
          chunk__6935_6954 = G__6995;
          count__6936_6955 = G__6996;
          i__6937_6956 = G__6997;
          continue;
        } else {
          var vec__6947_6998 = cljs.core.first.call(null, seq__6928_6992__$1);
          var orig_type_6999 = cljs.core.nth.call(null, vec__6947_6998, 0, null);
          var f_7000 = cljs.core.nth.call(null, vec__6947_6998, 1, null);
          var seq__6929_7001 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_6999, new cljs.core.PersistentArrayMap.fromArray([orig_type_6999, cljs.core.identity], true, false)));
          var chunk__6931_7002 = null;
          var count__6932_7003 = 0;
          var i__6933_7004 = 0;
          while (true) {
            if (i__6933_7004 < count__6932_7003) {
              var vec__6948_7005 = cljs.core._nth.call(null, chunk__6931_7002, i__6933_7004);
              var actual_type_7006 = cljs.core.nth.call(null, vec__6948_7005, 0, null);
              var factory_7007 = cljs.core.nth.call(null, vec__6948_7005, 1, null);
              var canonical_f_7008 = (cljs.core.truth_(selector_6952) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_6951, selector_6952) : cljs.core.identity).call(null, factory_7007.call(null, f_7000));
              dommy.core.update_event_listeners_BANG_.call(null, elem_6951, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_6952, actual_type_7006, f_7000], null), canonical_f_7008);
              if (cljs.core.truth_(elem_6951.addEventListener)) {
                elem_6951.addEventListener(cljs.core.name.call(null, actual_type_7006), canonical_f_7008);
              } else {
                elem_6951.attachEvent(cljs.core.name.call(null, actual_type_7006), canonical_f_7008);
              }
              var G__7009 = seq__6929_7001;
              var G__7010 = chunk__6931_7002;
              var G__7011 = count__6932_7003;
              var G__7012 = i__6933_7004 + 1;
              seq__6929_7001 = G__7009;
              chunk__6931_7002 = G__7010;
              count__6932_7003 = G__7011;
              i__6933_7004 = G__7012;
              continue;
            } else {
              var temp__4126__auto___7013__$1 = cljs.core.seq.call(null, seq__6929_7001);
              if (temp__4126__auto___7013__$1) {
                var seq__6929_7014__$1 = temp__4126__auto___7013__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__6929_7014__$1)) {
                  var c__5061__auto___7015 = cljs.core.chunk_first.call(null, seq__6929_7014__$1);
                  var G__7016 = cljs.core.chunk_rest.call(null, seq__6929_7014__$1);
                  var G__7017 = c__5061__auto___7015;
                  var G__7018 = cljs.core.count.call(null, c__5061__auto___7015);
                  var G__7019 = 0;
                  seq__6929_7001 = G__7016;
                  chunk__6931_7002 = G__7017;
                  count__6932_7003 = G__7018;
                  i__6933_7004 = G__7019;
                  continue;
                } else {
                  var vec__6949_7020 = cljs.core.first.call(null, seq__6929_7014__$1);
                  var actual_type_7021 = cljs.core.nth.call(null, vec__6949_7020, 0, null);
                  var factory_7022 = cljs.core.nth.call(null, vec__6949_7020, 1, null);
                  var canonical_f_7023 = (cljs.core.truth_(selector_6952) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_6951, selector_6952) : cljs.core.identity).call(null, factory_7022.call(null, f_7000));
                  dommy.core.update_event_listeners_BANG_.call(null, elem_6951, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_6952, actual_type_7021, f_7000], null), canonical_f_7023);
                  if (cljs.core.truth_(elem_6951.addEventListener)) {
                    elem_6951.addEventListener(cljs.core.name.call(null, actual_type_7021), canonical_f_7023);
                  } else {
                    elem_6951.attachEvent(cljs.core.name.call(null, actual_type_7021), canonical_f_7023);
                  }
                  var G__7024 = cljs.core.next.call(null, seq__6929_7014__$1);
                  var G__7025 = null;
                  var G__7026 = 0;
                  var G__7027 = 0;
                  seq__6929_7001 = G__7024;
                  chunk__6931_7002 = G__7025;
                  count__6932_7003 = G__7026;
                  i__6933_7004 = G__7027;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__7028 = cljs.core.next.call(null, seq__6928_6992__$1);
          var G__7029 = null;
          var G__7030 = 0;
          var G__7031 = 0;
          seq__6928_6953 = G__7028;
          chunk__6935_6954 = G__7029;
          count__6936_6955 = G__7030;
          i__6937_6956 = G__7031;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return elem_sel;
};
dommy.core.listen_BANG_.cljs$lang$maxFixedArity = 1;
dommy.core.listen_BANG_.cljs$lang$applyTo = function(seq6925) {
  var G__6926 = cljs.core.first.call(null, seq6925);
  var seq6925__$1 = cljs.core.next.call(null, seq6925);
  return dommy.core.listen_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__6926, seq6925__$1);
};
dommy.core.unlisten_BANG_ = function dommy$core$unlisten_BANG_() {
  var argseq__5316__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return dommy.core.unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5316__auto__);
};
dommy.core.unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem_sel, type_fs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1567896074, null)))))].join(""));
  }
  var vec__7034_7057 = dommy.core.elem_and_selector.call(null, elem_sel);
  var elem_7058 = cljs.core.nth.call(null, vec__7034_7057, 0, null);
  var selector_7059 = cljs.core.nth.call(null, vec__7034_7057, 1, null);
  var seq__7035_7060 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
  var chunk__7042_7061 = null;
  var count__7043_7062 = 0;
  var i__7044_7063 = 0;
  while (true) {
    if (i__7044_7063 < count__7043_7062) {
      var vec__7051_7064 = cljs.core._nth.call(null, chunk__7042_7061, i__7044_7063);
      var orig_type_7065 = cljs.core.nth.call(null, vec__7051_7064, 0, null);
      var f_7066 = cljs.core.nth.call(null, vec__7051_7064, 1, null);
      var seq__7045_7067 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_7065, new cljs.core.PersistentArrayMap.fromArray([orig_type_7065, cljs.core.identity], true, false)));
      var chunk__7047_7068 = null;
      var count__7048_7069 = 0;
      var i__7049_7070 = 0;
      while (true) {
        if (i__7049_7070 < count__7048_7069) {
          var vec__7052_7071 = cljs.core._nth.call(null, chunk__7047_7068, i__7049_7070);
          var actual_type_7072 = cljs.core.nth.call(null, vec__7052_7071, 0, null);
          var __7073 = cljs.core.nth.call(null, vec__7052_7071, 1, null);
          var keys_7074 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_7059, actual_type_7072, f_7066], null);
          var canonical_f_7075 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_7058), keys_7074);
          dommy.core.update_event_listeners_BANG_.call(null, elem_7058, dommy.utils.dissoc_in, keys_7074);
          if (cljs.core.truth_(elem_7058.removeEventListener)) {
            elem_7058.removeEventListener(cljs.core.name.call(null, actual_type_7072), canonical_f_7075);
          } else {
            elem_7058.detachEvent(cljs.core.name.call(null, actual_type_7072), canonical_f_7075);
          }
          var G__7076 = seq__7045_7067;
          var G__7077 = chunk__7047_7068;
          var G__7078 = count__7048_7069;
          var G__7079 = i__7049_7070 + 1;
          seq__7045_7067 = G__7076;
          chunk__7047_7068 = G__7077;
          count__7048_7069 = G__7078;
          i__7049_7070 = G__7079;
          continue;
        } else {
          var temp__4126__auto___7080 = cljs.core.seq.call(null, seq__7045_7067);
          if (temp__4126__auto___7080) {
            var seq__7045_7081__$1 = temp__4126__auto___7080;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__7045_7081__$1)) {
              var c__5061__auto___7082 = cljs.core.chunk_first.call(null, seq__7045_7081__$1);
              var G__7083 = cljs.core.chunk_rest.call(null, seq__7045_7081__$1);
              var G__7084 = c__5061__auto___7082;
              var G__7085 = cljs.core.count.call(null, c__5061__auto___7082);
              var G__7086 = 0;
              seq__7045_7067 = G__7083;
              chunk__7047_7068 = G__7084;
              count__7048_7069 = G__7085;
              i__7049_7070 = G__7086;
              continue;
            } else {
              var vec__7053_7087 = cljs.core.first.call(null, seq__7045_7081__$1);
              var actual_type_7088 = cljs.core.nth.call(null, vec__7053_7087, 0, null);
              var __7089 = cljs.core.nth.call(null, vec__7053_7087, 1, null);
              var keys_7090 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_7059, actual_type_7088, f_7066], null);
              var canonical_f_7091 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_7058), keys_7090);
              dommy.core.update_event_listeners_BANG_.call(null, elem_7058, dommy.utils.dissoc_in, keys_7090);
              if (cljs.core.truth_(elem_7058.removeEventListener)) {
                elem_7058.removeEventListener(cljs.core.name.call(null, actual_type_7088), canonical_f_7091);
              } else {
                elem_7058.detachEvent(cljs.core.name.call(null, actual_type_7088), canonical_f_7091);
              }
              var G__7092 = cljs.core.next.call(null, seq__7045_7081__$1);
              var G__7093 = null;
              var G__7094 = 0;
              var G__7095 = 0;
              seq__7045_7067 = G__7092;
              chunk__7047_7068 = G__7093;
              count__7048_7069 = G__7094;
              i__7049_7070 = G__7095;
              continue;
            }
          } else {
          }
        }
        break;
      }
      var G__7096 = seq__7035_7060;
      var G__7097 = chunk__7042_7061;
      var G__7098 = count__7043_7062;
      var G__7099 = i__7044_7063 + 1;
      seq__7035_7060 = G__7096;
      chunk__7042_7061 = G__7097;
      count__7043_7062 = G__7098;
      i__7044_7063 = G__7099;
      continue;
    } else {
      var temp__4126__auto___7100 = cljs.core.seq.call(null, seq__7035_7060);
      if (temp__4126__auto___7100) {
        var seq__7035_7101__$1 = temp__4126__auto___7100;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7035_7101__$1)) {
          var c__5061__auto___7102 = cljs.core.chunk_first.call(null, seq__7035_7101__$1);
          var G__7103 = cljs.core.chunk_rest.call(null, seq__7035_7101__$1);
          var G__7104 = c__5061__auto___7102;
          var G__7105 = cljs.core.count.call(null, c__5061__auto___7102);
          var G__7106 = 0;
          seq__7035_7060 = G__7103;
          chunk__7042_7061 = G__7104;
          count__7043_7062 = G__7105;
          i__7044_7063 = G__7106;
          continue;
        } else {
          var vec__7054_7107 = cljs.core.first.call(null, seq__7035_7101__$1);
          var orig_type_7108 = cljs.core.nth.call(null, vec__7054_7107, 0, null);
          var f_7109 = cljs.core.nth.call(null, vec__7054_7107, 1, null);
          var seq__7036_7110 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_7108, new cljs.core.PersistentArrayMap.fromArray([orig_type_7108, cljs.core.identity], true, false)));
          var chunk__7038_7111 = null;
          var count__7039_7112 = 0;
          var i__7040_7113 = 0;
          while (true) {
            if (i__7040_7113 < count__7039_7112) {
              var vec__7055_7114 = cljs.core._nth.call(null, chunk__7038_7111, i__7040_7113);
              var actual_type_7115 = cljs.core.nth.call(null, vec__7055_7114, 0, null);
              var __7116 = cljs.core.nth.call(null, vec__7055_7114, 1, null);
              var keys_7117 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_7059, actual_type_7115, f_7109], null);
              var canonical_f_7118 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_7058), keys_7117);
              dommy.core.update_event_listeners_BANG_.call(null, elem_7058, dommy.utils.dissoc_in, keys_7117);
              if (cljs.core.truth_(elem_7058.removeEventListener)) {
                elem_7058.removeEventListener(cljs.core.name.call(null, actual_type_7115), canonical_f_7118);
              } else {
                elem_7058.detachEvent(cljs.core.name.call(null, actual_type_7115), canonical_f_7118);
              }
              var G__7119 = seq__7036_7110;
              var G__7120 = chunk__7038_7111;
              var G__7121 = count__7039_7112;
              var G__7122 = i__7040_7113 + 1;
              seq__7036_7110 = G__7119;
              chunk__7038_7111 = G__7120;
              count__7039_7112 = G__7121;
              i__7040_7113 = G__7122;
              continue;
            } else {
              var temp__4126__auto___7123__$1 = cljs.core.seq.call(null, seq__7036_7110);
              if (temp__4126__auto___7123__$1) {
                var seq__7036_7124__$1 = temp__4126__auto___7123__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__7036_7124__$1)) {
                  var c__5061__auto___7125 = cljs.core.chunk_first.call(null, seq__7036_7124__$1);
                  var G__7126 = cljs.core.chunk_rest.call(null, seq__7036_7124__$1);
                  var G__7127 = c__5061__auto___7125;
                  var G__7128 = cljs.core.count.call(null, c__5061__auto___7125);
                  var G__7129 = 0;
                  seq__7036_7110 = G__7126;
                  chunk__7038_7111 = G__7127;
                  count__7039_7112 = G__7128;
                  i__7040_7113 = G__7129;
                  continue;
                } else {
                  var vec__7056_7130 = cljs.core.first.call(null, seq__7036_7124__$1);
                  var actual_type_7131 = cljs.core.nth.call(null, vec__7056_7130, 0, null);
                  var __7132 = cljs.core.nth.call(null, vec__7056_7130, 1, null);
                  var keys_7133 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [selector_7059, actual_type_7131, f_7109], null);
                  var canonical_f_7134 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_7058), keys_7133);
                  dommy.core.update_event_listeners_BANG_.call(null, elem_7058, dommy.utils.dissoc_in, keys_7133);
                  if (cljs.core.truth_(elem_7058.removeEventListener)) {
                    elem_7058.removeEventListener(cljs.core.name.call(null, actual_type_7131), canonical_f_7134);
                  } else {
                    elem_7058.detachEvent(cljs.core.name.call(null, actual_type_7131), canonical_f_7134);
                  }
                  var G__7135 = cljs.core.next.call(null, seq__7036_7124__$1);
                  var G__7136 = null;
                  var G__7137 = 0;
                  var G__7138 = 0;
                  seq__7036_7110 = G__7135;
                  chunk__7038_7111 = G__7136;
                  count__7039_7112 = G__7137;
                  i__7040_7113 = G__7138;
                  continue;
                }
              } else {
              }
            }
            break;
          }
          var G__7139 = cljs.core.next.call(null, seq__7035_7101__$1);
          var G__7140 = null;
          var G__7141 = 0;
          var G__7142 = 0;
          seq__7035_7060 = G__7139;
          chunk__7042_7061 = G__7140;
          count__7043_7062 = G__7141;
          i__7044_7063 = G__7142;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return elem_sel;
};
dommy.core.unlisten_BANG_.cljs$lang$maxFixedArity = 1;
dommy.core.unlisten_BANG_.cljs$lang$applyTo = function(seq7032) {
  var G__7033 = cljs.core.first.call(null, seq7032);
  var seq7032__$1 = cljs.core.next.call(null, seq7032);
  return dommy.core.unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7033, seq7032__$1);
};
dommy.core.listen_once_BANG_ = function dommy$core$listen_once_BANG_() {
  var argseq__5316__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return dommy.core.listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5316__auto__);
};
dommy.core.listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(elem_sel, type_fs) {
  if (cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1567896074, null)))))].join(""));
  }
  var vec__7145_7152 = dommy.core.elem_and_selector.call(null, elem_sel);
  var elem_7153 = cljs.core.nth.call(null, vec__7145_7152, 0, null);
  var selector_7154 = cljs.core.nth.call(null, vec__7145_7152, 1, null);
  var seq__7146_7155 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
  var chunk__7147_7156 = null;
  var count__7148_7157 = 0;
  var i__7149_7158 = 0;
  while (true) {
    if (i__7149_7158 < count__7148_7157) {
      var vec__7150_7159 = cljs.core._nth.call(null, chunk__7147_7156, i__7149_7158);
      var type_7160 = cljs.core.nth.call(null, vec__7150_7159, 0, null);
      var f_7161 = cljs.core.nth.call(null, vec__7150_7159, 1, null);
      dommy.core.listen_BANG_.call(null, elem_sel, type_7160, function(seq__7146_7155, chunk__7147_7156, count__7148_7157, i__7149_7158, vec__7150_7159, type_7160, f_7161, vec__7145_7152, elem_7153, selector_7154) {
        return function dommy$core$this_fn(e) {
          dommy.core.unlisten_BANG_.call(null, elem_sel, type_7160, dommy$core$this_fn);
          return f_7161.call(null, e);
        };
      }(seq__7146_7155, chunk__7147_7156, count__7148_7157, i__7149_7158, vec__7150_7159, type_7160, f_7161, vec__7145_7152, elem_7153, selector_7154));
      var G__7162 = seq__7146_7155;
      var G__7163 = chunk__7147_7156;
      var G__7164 = count__7148_7157;
      var G__7165 = i__7149_7158 + 1;
      seq__7146_7155 = G__7162;
      chunk__7147_7156 = G__7163;
      count__7148_7157 = G__7164;
      i__7149_7158 = G__7165;
      continue;
    } else {
      var temp__4126__auto___7166 = cljs.core.seq.call(null, seq__7146_7155);
      if (temp__4126__auto___7166) {
        var seq__7146_7167__$1 = temp__4126__auto___7166;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__7146_7167__$1)) {
          var c__5061__auto___7168 = cljs.core.chunk_first.call(null, seq__7146_7167__$1);
          var G__7169 = cljs.core.chunk_rest.call(null, seq__7146_7167__$1);
          var G__7170 = c__5061__auto___7168;
          var G__7171 = cljs.core.count.call(null, c__5061__auto___7168);
          var G__7172 = 0;
          seq__7146_7155 = G__7169;
          chunk__7147_7156 = G__7170;
          count__7148_7157 = G__7171;
          i__7149_7158 = G__7172;
          continue;
        } else {
          var vec__7151_7173 = cljs.core.first.call(null, seq__7146_7167__$1);
          var type_7174 = cljs.core.nth.call(null, vec__7151_7173, 0, null);
          var f_7175 = cljs.core.nth.call(null, vec__7151_7173, 1, null);
          dommy.core.listen_BANG_.call(null, elem_sel, type_7174, function(seq__7146_7155, chunk__7147_7156, count__7148_7157, i__7149_7158, vec__7151_7173, type_7174, f_7175, seq__7146_7167__$1, temp__4126__auto___7166, vec__7145_7152, elem_7153, selector_7154) {
            return function dommy$core$this_fn(e) {
              dommy.core.unlisten_BANG_.call(null, elem_sel, type_7174, dommy$core$this_fn);
              return f_7175.call(null, e);
            };
          }(seq__7146_7155, chunk__7147_7156, count__7148_7157, i__7149_7158, vec__7151_7173, type_7174, f_7175, seq__7146_7167__$1, temp__4126__auto___7166, vec__7145_7152, elem_7153, selector_7154));
          var G__7176 = cljs.core.next.call(null, seq__7146_7167__$1);
          var G__7177 = null;
          var G__7178 = 0;
          var G__7179 = 0;
          seq__7146_7155 = G__7176;
          chunk__7147_7156 = G__7177;
          count__7148_7157 = G__7178;
          i__7149_7158 = G__7179;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return elem_sel;
};
dommy.core.listen_once_BANG_.cljs$lang$maxFixedArity = 1;
dommy.core.listen_once_BANG_.cljs$lang$applyTo = function(seq7143) {
  var G__7144 = cljs.core.first.call(null, seq7143);
  var seq7143__$1 = cljs.core.next.call(null, seq7143);
  return dommy.core.listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7144, seq7143__$1);
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.reader.PushbackReader = function() {
  var obj6346 = {};
  return obj6346;
}();
cljs.reader.read_char = function cljs$reader$read_char(reader) {
  if (function() {
    var and__4264__auto__ = reader;
    if (and__4264__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__4264__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4912__auto__ = reader == null ? null : reader;
    return function() {
      var or__4276__auto__ = cljs.reader.read_char[goog.typeOf(x__4912__auto__)];
      if (or__4276__auto__) {
        return or__4276__auto__;
      } else {
        var or__4276__auto____$1 = cljs.reader.read_char["_"];
        if (or__4276__auto____$1) {
          return or__4276__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function cljs$reader$unread(reader, ch) {
  if (function() {
    var and__4264__auto__ = reader;
    if (and__4264__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__4264__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4912__auto__ = reader == null ? null : reader;
    return function() {
      var or__4276__auto__ = cljs.reader.unread[goog.typeOf(x__4912__auto__)];
      if (or__4276__auto__) {
        return or__4276__auto__;
      } else {
        var or__4276__auto____$1 = cljs.reader.unread["_"];
        if (or__4276__auto____$1) {
          return or__4276__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4855__auto__, writer__4856__auto__, opt__4857__auto__) {
  return cljs.core._write.call(null, writer__4856__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function cljs$reader$__GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function cljs$reader$push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function cljs$reader$whitespace_QMARK_(ch) {
  var or__4276__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__4276__auto__)) {
    return or__4276__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function cljs$reader$numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function cljs$reader$comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function cljs$reader$number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function cljs$reader$reader_error() {
  var argseq__5316__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5316__auto__);
};
cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
};
cljs.reader.reader_error.cljs$lang$maxFixedArity = 1;
cljs.reader.reader_error.cljs$lang$applyTo = function(seq6347) {
  var G__6348 = cljs.core.first.call(null, seq6347);
  var seq6347__$1 = cljs.core.next.call(null, seq6347);
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__6348, seq6347__$1);
};
cljs.reader.macro_terminating_QMARK_ = function cljs$reader$macro_terminating_QMARK_(ch) {
  var and__4264__auto__ = !(ch === "#");
  if (and__4264__auto__) {
    var and__4264__auto____$1 = !(ch === "'");
    if (and__4264__auto____$1) {
      var and__4264__auto____$2 = !(ch === ":");
      if (and__4264__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__4264__auto____$2;
      }
    } else {
      return and__4264__auto____$1;
    }
  } else {
    return and__4264__auto__;
  }
};
cljs.reader.read_token = function cljs$reader$read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__6349 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__6350 = cljs.reader.read_char.call(null, rdr);
      sb = G__6349;
      ch = G__6350;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function cljs$reader$skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function cljs$reader$re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function cljs$reader$match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return-parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function cljs$reader$match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function cljs$reader$match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function cljs$reader$match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function cljs$reader$escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return'"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function cljs$reader$read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function cljs$reader$read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function cljs$reader$validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function cljs$reader$make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function cljs$reader$escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function cljs$reader$read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__6351 = cljs.reader.read_char.call(null, rdr);
      ch = G__6351;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function cljs$reader$read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4124__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var macrofn = temp__4124__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__6352 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__6352;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__6353 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__6353;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function cljs$reader$not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function cljs$reader$read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4124__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var obj = temp__4124__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function cljs$reader$read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function cljs$reader$read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function cljs$reader$read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function cljs$reader$read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function cljs$reader$read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4276__auto__ = ch == null;
      if (or__4276__auto__) {
        return or__4276__auto__;
      } else {
        var or__4276__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__4276__auto____$1) {
          return or__4276__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__4276__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__6354 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__6355 = cljs.reader.read_char.call(null, reader);
      buffer = G__6354;
      ch = G__6355;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function cljs$reader$read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__6356 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__6357 = cljs.reader.read_char.call(null, reader);
        buffer = G__6356;
        ch = G__6357;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__6358 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__6359 = cljs.reader.read_char.call(null, reader);
          buffer = G__6358;
          ch = G__6359;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function cljs$reader$read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__6364 = function() {
            var G__6362 = buffer;
            G__6362.append(nch);
            return G__6362;
          }();
          var G__6365 = cljs.reader.read_char.call(null, reader);
          buffer = G__6364;
          ch = G__6365;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__6366 = function() {
            var G__6363 = buffer;
            G__6363.append(ch);
            return G__6363;
          }();
          var G__6367 = cljs.reader.read_char.call(null, reader);
          buffer = G__6366;
          ch = G__6367;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function cljs$reader$special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function cljs$reader$read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__4264__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__4264__auto__)) {
      return!(token.length === 1);
    } else {
      return and__4264__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function cljs$reader$read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function cljs$reader$desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function cljs$reader$wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function cljs$reader$throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function cljs$reader$read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__6369 = o;
    if (G__6369) {
      var bit__4950__auto__ = G__6369.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4950__auto__ || G__6369.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__6369.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6369);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__6369);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function cljs$reader$read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function cljs$reader$read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function cljs$reader$read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function cljs$reader$macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function cljs$reader$dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function cljs$reader$read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__6370 = reader;
        var G__6371 = eof_is_error;
        var G__6372 = sentinel;
        var G__6373 = is_recursive;
        reader = G__6370;
        eof_is_error = G__6371;
        sentinel = G__6372;
        is_recursive = G__6373;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__6374 = cljs.reader.read_comment.call(null, reader, ch);
          var G__6375 = eof_is_error;
          var G__6376 = sentinel;
          var G__6377 = is_recursive;
          reader = G__6374;
          eof_is_error = G__6375;
          sentinel = G__6376;
          is_recursive = G__6377;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__6378 = reader;
            var G__6379 = eof_is_error;
            var G__6380 = sentinel;
            var G__6381 = is_recursive;
            reader = G__6378;
            eof_is_error = G__6379;
            sentinel = G__6380;
            is_recursive = G__6381;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function cljs$reader$read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__6382 = b.append("0");
          b = G__6382;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div));
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  var and__4264__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if (cljs.core.truth_(and__4264__auto__)) {
    var or__4276__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if (cljs.core.truth_(or__4276__auto__)) {
      return or__4276__auto__;
    } else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400);
    }
  } else {
    return and__4264__auto__;
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__6384 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__6384, 0, null);
  var years = cljs.core.nth.call(null, vec__6384, 1, null);
  var months = cljs.core.nth.call(null, vec__6384, 2, null);
  var days = cljs.core.nth.call(null, vec__6384, 3, null);
  var hours = cljs.core.nth.call(null, vec__6384, 4, null);
  var minutes = cljs.core.nth.call(null, vec__6384, 5, null);
  var seconds = cljs.core.nth.call(null, vec__6384, 6, null);
  var fraction = cljs.core.nth.call(null, vec__6384, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__6384, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__6384, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__6384, 10, null);
  var v = vec__6384;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__4276__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__4276__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__4276__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__4276__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__4276__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__4276__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__4276__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__4276__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__4276__auto__)) {
        return or__4276__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__4124__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var vec__6386 = temp__4124__auto__;
    var years = cljs.core.nth.call(null, vec__6386, 0, null);
    var months = cljs.core.nth.call(null, vec__6386, 1, null);
    var days = cljs.core.nth.call(null, vec__6386, 2, null);
    var hours = cljs.core.nth.call(null, vec__6386, 3, null);
    var minutes = cljs.core.nth.call(null, vec__6386, 4, null);
    var seconds = cljs.core.nth.call(null, vec__6386, 5, null);
    var ms = cljs.core.nth.call(null, vec__6386, 6, null);
    var offset = cljs.core.nth.call(null, vec__6386, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__6399_6411 = cljs.core.seq.call(null, form);
    var chunk__6400_6412 = null;
    var count__6401_6413 = 0;
    var i__6402_6414 = 0;
    while (true) {
      if (i__6402_6414 < count__6401_6413) {
        var x_6415 = cljs.core._nth.call(null, chunk__6400_6412, i__6402_6414);
        arr.push(x_6415);
        var G__6416 = seq__6399_6411;
        var G__6417 = chunk__6400_6412;
        var G__6418 = count__6401_6413;
        var G__6419 = i__6402_6414 + 1;
        seq__6399_6411 = G__6416;
        chunk__6400_6412 = G__6417;
        count__6401_6413 = G__6418;
        i__6402_6414 = G__6419;
        continue;
      } else {
        var temp__4126__auto___6420 = cljs.core.seq.call(null, seq__6399_6411);
        if (temp__4126__auto___6420) {
          var seq__6399_6421__$1 = temp__4126__auto___6420;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__6399_6421__$1)) {
            var c__5061__auto___6422 = cljs.core.chunk_first.call(null, seq__6399_6421__$1);
            var G__6423 = cljs.core.chunk_rest.call(null, seq__6399_6421__$1);
            var G__6424 = c__5061__auto___6422;
            var G__6425 = cljs.core.count.call(null, c__5061__auto___6422);
            var G__6426 = 0;
            seq__6399_6411 = G__6423;
            chunk__6400_6412 = G__6424;
            count__6401_6413 = G__6425;
            i__6402_6414 = G__6426;
            continue;
          } else {
            var x_6427 = cljs.core.first.call(null, seq__6399_6421__$1);
            arr.push(x_6427);
            var G__6428 = cljs.core.next.call(null, seq__6399_6421__$1);
            var G__6429 = null;
            var G__6430 = 0;
            var G__6431 = 0;
            seq__6399_6411 = G__6428;
            chunk__6400_6412 = G__6429;
            count__6401_6413 = G__6430;
            i__6402_6414 = G__6431;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj6404 = {};
        return obj6404;
      }();
      var seq__6405_6432 = cljs.core.seq.call(null, form);
      var chunk__6406_6433 = null;
      var count__6407_6434 = 0;
      var i__6408_6435 = 0;
      while (true) {
        if (i__6408_6435 < count__6407_6434) {
          var vec__6409_6436 = cljs.core._nth.call(null, chunk__6406_6433, i__6408_6435);
          var k_6437 = cljs.core.nth.call(null, vec__6409_6436, 0, null);
          var v_6438 = cljs.core.nth.call(null, vec__6409_6436, 1, null);
          obj[cljs.core.name.call(null, k_6437)] = v_6438;
          var G__6439 = seq__6405_6432;
          var G__6440 = chunk__6406_6433;
          var G__6441 = count__6407_6434;
          var G__6442 = i__6408_6435 + 1;
          seq__6405_6432 = G__6439;
          chunk__6406_6433 = G__6440;
          count__6407_6434 = G__6441;
          i__6408_6435 = G__6442;
          continue;
        } else {
          var temp__4126__auto___6443 = cljs.core.seq.call(null, seq__6405_6432);
          if (temp__4126__auto___6443) {
            var seq__6405_6444__$1 = temp__4126__auto___6443;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__6405_6444__$1)) {
              var c__5061__auto___6445 = cljs.core.chunk_first.call(null, seq__6405_6444__$1);
              var G__6446 = cljs.core.chunk_rest.call(null, seq__6405_6444__$1);
              var G__6447 = c__5061__auto___6445;
              var G__6448 = cljs.core.count.call(null, c__5061__auto___6445);
              var G__6449 = 0;
              seq__6405_6432 = G__6446;
              chunk__6406_6433 = G__6447;
              count__6407_6434 = G__6448;
              i__6408_6435 = G__6449;
              continue;
            } else {
              var vec__6410_6450 = cljs.core.first.call(null, seq__6405_6444__$1);
              var k_6451 = cljs.core.nth.call(null, vec__6410_6450, 0, null);
              var v_6452 = cljs.core.nth.call(null, vec__6410_6450, 1, null);
              obj[cljs.core.name.call(null, k_6451)] = v_6452;
              var G__6453 = cljs.core.next.call(null, seq__6405_6444__$1);
              var G__6454 = null;
              var G__6455 = 0;
              var G__6456 = 0;
              seq__6405_6432 = G__6453;
              chunk__6406_6433 = G__6454;
              count__6407_6434 = G__6455;
              i__6408_6435 = G__6456;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return new cljs.core.UUID(uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function cljs$reader$maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("mandala.app");
goog.require("cljs.core");
goog.require("dommy.core");
goog.require("cljs.reader");
mandala.app.add = function mandala$app$add(x, y) {
  var sum = x + y;
  if (sum <= 9) {
    return sum;
  } else {
    return sum - 9;
  }
};
mandala.app.add_two_vectors_base_parts = function mandala$app$add_two_vectors_base_parts(v1, v2, base_number) {
  return cljs.core.vec.call(null, cljs.core.map.call(null, mandala.app.add, cljs.core.subvec.call(null, v1, 0, base_number), cljs.core.subvec.call(null, v2, 0, base_number)));
};
mandala.app.str2clj = function mandala$app$str2clj(value) {
  return cljs.reader.read_string.call(null, value);
};
mandala.app.clj2str = function mandala$app$clj2str(args) {
  return[cljs.core.str(args)].join("");
};
mandala.app.add_convolution = function mandala$app$add_convolution(vector) {
  if (cljs.core.count.call(null, vector) > 1) {
    return cljs.core.vec.call(null, cljs.core.map.call(null, mandala.app.add, cljs.core.subvec.call(null, vector, 1), cljs.core.pop.call(null, vector)));
  } else {
    return cljs.core.vec.call(null, null);
  }
};
mandala.app.add_conv_to_length = function mandala$app$add_conv_to_length(vector, length) {
  while (true) {
    if (cljs.core.count.call(null, vector) > length) {
      var G__6604 = mandala.app.add_convolution.call(null, vector);
      var G__6605 = length;
      vector = G__6604;
      length = G__6605;
      continue;
    } else {
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, vector), length)) {
        return cljs.core.vec.call(null, vector);
      } else {
        return null;
      }
    }
    break;
  }
};
mandala.app.add_conv_to_length_return_steps = function mandala$app$add_conv_to_length_return_steps() {
  var G__6607 = arguments.length;
  switch(G__6607) {
    case 2:
      return mandala.app.add_conv_to_length_return_steps.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return mandala.app.add_conv_to_length_return_steps.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
mandala.app.add_conv_to_length_return_steps.cljs$core$IFn$_invoke$arity$2 = function(vector, length) {
  return mandala.app.add_conv_to_length_return_steps.call(null, vector, length, cljs.core.conj.call(null, cljs.core.PersistentVector.EMPTY, vector));
};
mandala.app.add_conv_to_length_return_steps.cljs$core$IFn$_invoke$arity$3 = function(vector, length, result) {
  if (cljs.core.count.call(null, vector) > length) {
    var conv = mandala.app.add_convolution.call(null, vector);
    return mandala.app.add_conv_to_length_return_steps.call(null, conv, length, cljs.core.conj.call(null, result, conv));
  } else {
    if (cljs.core._EQ_.call(null, cljs.core.count.call(null, vector), length)) {
      return result;
    } else {
      return null;
    }
  }
};
mandala.app.add_conv_to_length_return_steps.cljs$lang$maxFixedArity = 3;
mandala.app.get_core_of_mandala_andrew4 = function mandala$app$get_core_of_mandala_andrew4(base) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 0)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 1), base.call(null, 0)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 2), base.call(null, 3), base.call(null, 0)], null), new cljs.core.PersistentVector(null, 
  4, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 3), base.call(null, 2), base.call(null, 1), base.call(null, 0)], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [mandala.app.add.call(null, base.call(null, 3), base.call(null, 2)), mandala.app.add.call(null, base.call(null, 2), base.call(null, 3)), mandala.app.add.call(null, base.call(null, 1), base.call(null, 0)), mandala.app.add.call(null, base.call(null, 0), base.call(null, 1)), mandala.app.add.call(null, 
  mandala.app.add.call(null, base.call(null, 0), base.call(null, 1)), mandala.app.add.call(null, base.call(null, 0), base.call(null, 1)))], null)], null);
};
mandala.app.get_core_of_mandala_andrew5 = function mandala$app$get_core_of_mandala_andrew5(base) {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 0)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 1), base.call(null, 0)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 2), base.call(null, 1), base.call(null, 0)], null), new cljs.core.PersistentVector(null, 
  4, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 3), base.call(null, 2), base.call(null, 3), base.call(null, 0)], null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [base.call(null, 4), base.call(null, 3), base.call(null, 2), base.call(null, 1), base.call(null, 0)], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [mandala.app.add.call(null, base.call(null, 4), base.call(null, 3)), mandala.app.add.call(null, 
  base.call(null, 3), base.call(null, 2)), mandala.app.add.call(null, base.call(null, 2), base.call(null, 3)), mandala.app.add.call(null, base.call(null, 1), base.call(null, 0)), mandala.app.add.call(null, base.call(null, 0), base.call(null, 1)), mandala.app.add.call(null, mandala.app.add.call(null, base.call(null, 0), base.call(null, 1)), mandala.app.add.call(null, base.call(null, 0), base.call(null, 1)))], null)], null);
};
mandala.app.mandala_andrew = function mandala$app$mandala_andrew(mandala__$1, base_number) {
  while (true) {
    var last_column_tail = cljs.core.vec.call(null, cljs.core.take_last.call(null, 2, cljs.core.last.call(null, mandala__$1)));
    var penultima_column_tail = cljs.core.last.call(null, cljs.core.first.call(null, cljs.core.take_last.call(null, 2, mandala__$1)));
    var base_first = cljs.core.get.call(null, cljs.core.first.call(null, mandala__$1), 0);
    var base_second = cljs.core.get.call(null, cljs.core.second.call(null, mandala__$1), 0);
    if (cljs.core._EQ_.call(null, penultima_column_tail, base_first) && (cljs.core._EQ_.call(null, cljs.core.first.call(null, last_column_tail), base_second) && cljs.core._EQ_.call(null, cljs.core.last.call(null, last_column_tail), base_first))) {
      return mandala__$1;
    } else {
      var G__6609 = function() {
        var step_tail = cljs.core.take_last.call(null, 2, mandala__$1);
        return cljs.core.conj.call(null, mandala__$1, function() {
          var vToSize = mandala.app.add_two_vectors_base_parts.call(null, cljs.core.first.call(null, step_tail), cljs.core.last.call(null, step_tail), base_number);
          var size = cljs.core.count.call(null, cljs.core.last.call(null, step_tail)) + 1;
          while (true) {
            if (cljs.core.count.call(null, vToSize) >= size) {
              return vToSize;
            } else {
              var G__6611 = cljs.core.conj.call(null, vToSize, mandala.app.add.call(null, cljs.core.first.call(null, cljs.core.take_last.call(null, 2, vToSize)), cljs.core.last.call(null, vToSize)));
              var G__6612 = size;
              vToSize = G__6611;
              size = G__6612;
              continue;
            }
            break;
          }
        }());
      }();
      var G__6610 = base_number;
      mandala__$1 = G__6609;
      base_number = G__6610;
      continue;
    }
    break;
  }
};
mandala.app.mandala_andrew_4 = function mandala$app$mandala_andrew_4(base) {
  return mandala.app.mandala_andrew.call(null, mandala.app.get_core_of_mandala_andrew4.call(null, base), 4);
};
mandala.app.mandala_andrew_5 = function mandala$app$mandala_andrew_5(base) {
  return mandala.app.mandala_andrew.call(null, mandala.app.get_core_of_mandala_andrew5.call(null, base), 5);
};
mandala.app.get_mandala_cell = function mandala$app$get_mandala_cell(mandala__$1, col_index, row_index) {
  if (cljs.core.count.call(null, cljs.core.get.call(null, mandala__$1, col_index)) - 1 >= row_index) {
    return cljs.core.get.call(null, cljs.core.get.call(null, mandala__$1, col_index), row_index);
  } else {
    return cljs.core.get.call(null, cljs.core.get.call(null, mandala__$1, row_index), col_index);
  }
};
mandala.app.output_mandala = function mandala$app$output_mandala(mandala__$1, output_selector) {
  var mandala_size = cljs.core.count.call(null, mandala__$1);
  var container = dommy.core.add_class_BANG_.call(null, dommy.core.create_element.call(null, "div"), "mandala-output");
  var n__5161__auto___6613 = mandala_size;
  var row_index_6614 = 0;
  while (true) {
    if (row_index_6614 < n__5161__auto___6613) {
      mandala.app.row = dommy.core.create_element.call(null, "div");
      var n__5161__auto___6615__$1 = mandala_size;
      var col_index_6616 = 0;
      while (true) {
        if (col_index_6616 < n__5161__auto___6615__$1) {
          dommy.core.add_class_BANG_.call(null, dommy.core.append_BANG_.call(null, mandala.app.row, dommy.core.add_class_BANG_.call(null, dommy.core.add_class_BANG_.call(null, dommy.core.set_text_BANG_.call(null, dommy.core.create_element.call(null, "div"), mandala.app.get_mandala_cell.call(null, mandala__$1, col_index_6616, mandala_size - 1 - row_index_6614)), "mandala-cell"), [cljs.core.str("mandala-cell-"), cljs.core.str(mandala.app.get_mandala_cell.call(null, mandala__$1, col_index_6616, mandala_size - 
          1 - row_index_6614))].join(""))), "madala-row");
          var G__6617 = col_index_6616 + 1;
          col_index_6616 = G__6617;
          continue;
        } else {
        }
        break;
      }
      dommy.core.append_BANG_.call(null, container, mandala.app.row);
      var G__6618 = row_index_6614 + 1;
      row_index_6614 = G__6618;
      continue;
    } else {
    }
    break;
  }
  return dommy.core.replace_contents_BANG_.call(null, document.querySelector(dommy.core.selector.call(null, output_selector)), container);
};
mandala.app.digit_color_map = cljs.core.PersistentHashMap.fromArrays([0, 7, 1, 4, 6, 3, 2, 9, 5, 8], ["white", "pink", "red", "yellow", "turquoise", "green", "blue", "purple", "cyan", "orange"]);
mandala.app.output_mandala_svg = function mandala$app$output_mandala_svg(mandala__$1, output_selector, group_id) {
  var mandala_size = cljs.core.count.call(null, mandala__$1);
  var cell_size = 20;
  var container = dommy.core.add_class_BANG_.call(null, dommy.core.set_attr_BANG_.call(null, dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "svg"), new cljs.core.Keyword(null, "width", "width", -384071477), mandala_size * cell_size * 2, new cljs.core.Keyword(null, "height", "height", 1025178622), mandala_size * cell_size * 2, new cljs.core.Keyword(null, "xmlns", "xmlns", -1862095571), "http://www.w3.org/2000/svg", new cljs.core.Keyword(null, "xmlns:xlink", "xmlns:xlink", -316591054), 
  "http://www.w3.org/1999/xlink", new cljs.core.Keyword(null, "version", "version", 425292698), "1.1"), "mandala-output");
  var group = dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "g");
  var symbol = dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "symbol");
  var defs = dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "defs");
  var n__5161__auto___6619 = mandala_size;
  var row_index_6620 = 0;
  while (true) {
    if (row_index_6620 < n__5161__auto___6619) {
      var n__5161__auto___6621__$1 = mandala_size;
      var col_index_6622 = 0;
      while (true) {
        if (col_index_6622 < n__5161__auto___6621__$1) {
          dommy.core.append_BANG_.call(null, group, dommy.core.set_attr_BANG_.call(null, dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "rect"), new cljs.core.Keyword(null, "x", "x", 2099068185), col_index_6622 * cell_size, new cljs.core.Keyword(null, "y", "y", -1757859776), row_index_6620 * cell_size, new cljs.core.Keyword(null, "width", "width", -384071477), cell_size, new cljs.core.Keyword(null, "height", "height", 1025178622), cell_size, new cljs.core.Keyword(null, "fill", 
          "fill", 883462889), cljs.core.get.call(null, mandala.app.digit_color_map, mandala.app.get_mandala_cell.call(null, mandala__$1, col_index_6622, mandala_size - 1 - row_index_6620)), new cljs.core.Keyword(null, "stroke", "stroke", 1741823555), "black", new cljs.core.Keyword(null, "stroke-width", "stroke-width", 716836435), 1));
          var G__6623 = col_index_6622 + 1;
          col_index_6622 = G__6623;
          continue;
        } else {
        }
        break;
      }
      var G__6624 = row_index_6620 + 1;
      row_index_6620 = G__6624;
      continue;
    } else {
    }
    break;
  }
  dommy.core.append_BANG_.call(null, container, dommy.core.append_BANG_.call(null, defs, dommy.core.append_BANG_.call(null, dommy.core.set_attr_BANG_.call(null, symbol, new cljs.core.Keyword(null, "id", "id", -1388402092), group_id), group)));
  dommy.core.append_BANG_.call(null, container, dommy.core.set_attr_BANG_.call(null, dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "use"), new cljs.core.Keyword(null, "xlink:href", "xlink:href", 828777205), [cljs.core.str("#"), cljs.core.str(group_id)].join(""), new cljs.core.Keyword(null, "x", "x", 2099068185), mandala_size * cell_size, new cljs.core.Keyword(null, "y", "y", -1757859776), 0));
  dommy.core.append_BANG_.call(null, container, dommy.core.set_attr_BANG_.call(null, dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "use"), new cljs.core.Keyword(null, "xlink:href", "xlink:href", 828777205), [cljs.core.str("#"), cljs.core.str(group_id)].join(""), new cljs.core.Keyword(null, "x", "x", 2099068185), 0, new cljs.core.Keyword(null, "y", "y", -1757859776), 0, new cljs.core.Keyword(null, "transform", "transform", 1381301764), [cljs.core.str("translate("), cljs.core.str(mandala_size * 
  cell_size), cljs.core.str(","), cljs.core.str(mandala_size * cell_size), cljs.core.str(") rotate(90 "), cljs.core.str(mandala_size * cell_size / 2), cljs.core.str(" "), cljs.core.str(mandala_size * cell_size / 2), cljs.core.str(" )")].join("")));
  dommy.core.append_BANG_.call(null, container, dommy.core.set_attr_BANG_.call(null, dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "use"), new cljs.core.Keyword(null, "xlink:href", "xlink:href", 828777205), [cljs.core.str("#"), cljs.core.str(group_id)].join(""), new cljs.core.Keyword(null, "x", "x", 2099068185), 0, new cljs.core.Keyword(null, "y", "y", -1757859776), 0, new cljs.core.Keyword(null, "transform", "transform", 1381301764), [cljs.core.str("translate("), cljs.core.str(0), 
  cljs.core.str(","), cljs.core.str(mandala_size * cell_size), cljs.core.str(") rotate(180 "), cljs.core.str(mandala_size * cell_size / 2), cljs.core.str(" "), cljs.core.str(mandala_size * cell_size / 2), cljs.core.str(" )")].join("")));
  dommy.core.append_BANG_.call(null, container, dommy.core.set_attr_BANG_.call(null, dommy.core.create_element.call(null, "http://www.w3.org/2000/svg", "use"), new cljs.core.Keyword(null, "xlink:href", "xlink:href", 828777205), [cljs.core.str("#"), cljs.core.str(group_id)].join(""), new cljs.core.Keyword(null, "x", "x", 2099068185), 0, new cljs.core.Keyword(null, "y", "y", -1757859776), 0, new cljs.core.Keyword(null, "transform", "transform", 1381301764), [cljs.core.str("translate("), cljs.core.str(0), 
  cljs.core.str(","), cljs.core.str(0), cljs.core.str(") rotate(270 "), cljs.core.str(mandala_size * cell_size / 2), cljs.core.str(" "), cljs.core.str(mandala_size * cell_size / 2), cljs.core.str(" )")].join("")));
  return dommy.core.replace_contents_BANG_.call(null, document.querySelector(dommy.core.selector.call(null, output_selector)), container);
};
mandala.app.tmp = function mandala$app$tmp() {
  return dommy.core.append_BANG_.call(null, document.body, dommy.core.set_text_BANG_.call(null, dommy.core.create_element.call(null, "div"), "Hey-ho!"));
};
